(()=>{"use strict";var e={6752:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(2127)),o=s(i(5619)),r=s(i(9910)),a=s(i(8150)),c=s(i(479)),d=s(i(6725)),u=i(9905),l=i(9204),p=s(i(8605)),h=s(i(2395));i(2473),t.default=class{constructor(e){this.app=n.default(),this.server=p.default.createServer(this.app),this.io=new h.default.Server(this.server),this.port=process.env.PORT||5e3,this.production=!0,this.connectToDatabase(),this.initializeMiddleware(),this.initializeRoutes(e),this.initializeErrorMiddleware(),this.initSocketIo()}initSocketIo(){this.server=p.default.createServer(this.app),this.io=new h.default.Server(this.server,{cors:{origin:"*"}}),this.app.set("socketio",this.io);const e={};this.io.on("connection",(t=>{u.Logger.warn("a user connected : "+t.id),t.emit("message","Hello "+t.id),t.on("login",(function(i){u.Logger.warn("a user "+i.userId+" connected"),e[t.id]=i.userId})),t.on("disconnect",(function(){u.Logger.warn("user "+e[t.id]+" disconnected"),delete e[t.id],u.Logger.warn("socket disconnected : "+t.id)}))}))}listen(){this.server.listen(this.port,(()=>{u.Logger.info(`Server is listening on port ${this.port}`)}))}initializeRoutes(e){e.forEach((e=>{this.app.use("/",e.router)}))}initializeMiddleware(){this.production?(this.app.use(r.default()),this.app.use(d.default()),this.app.use(a.default("combined")),this.app.use(c.default({origin:"*"}))):(this.app.use(a.default("dev")),this.app.use(c.default({origin:"*"}))),this.app.use(n.default.json({limit:"50mb"})),this.app.use(n.default.urlencoded({limit:"50mb",extended:!0,parameterLimit:5e4}))}initializeErrorMiddleware(){this.app.use(l.errorMiddleware)}connectToDatabase(){const e=process.env.MONGODB_URI;e?(o.default.connect(e,{useNewUrlParser:!0,useUnifiedTopology:!0,useFindAndModify:!1,useCreateIndex:!0}).catch((e=>{u.Logger.error(e)})),u.Logger.info("Database connected...")):u.Logger.error("Connection string is invalid")}}},4427:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class i extends Error{constructor(e,t){super(t),this.status=e,this.message=t}}t.default=i},5729:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.HttpException=void 0;const n=s(i(4427));t.HttpException=n.default},8944:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"Project Manager"===t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Require Project Manage role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"role is not valid"})}}))},6891:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"seniortester"===t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Require senior tester role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},2417:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"Test Lead"===t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Require Test Lead role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},1597:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"guest"!==t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Do not allow guest role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},2105:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"Project Manager"!==t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Do not allow Project Manager role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},3775:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"seniortester"!==t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Do not allow senior tester role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},3348:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"testlead"!==t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Do not allow test lead role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},590:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9435);t.default=(e,t,i)=>s(void 0,void 0,void 0,(function*(){const s=e.params.project_id;if(!s)return t.status(400).json({status:400,success:!1,result:"",errMsg:"No project, authorization denied."});try{const o=yield n.ProjectSchema.findById(s).exec();if(!o)return t.status(400).json({status:400,success:!1,result:"",errMsg:"Project is not exist"});if(!o.members||!o.members.some((t=>t.user.toString()===e.user.id&&"Tester"!==t.role.toString())))return t.status(400).json({status:400,success:!1,result:"",errMsg:"Do not allow Tester role"});i()}catch(e){t.status(400).json({status:400,success:!1,result:"",errMsg:"Role is not valid"})}}))},5191:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9905),o=s(i(9722));t.default=(e,t,i)=>{var s;const r=e.header("x-auth-token");if(!r)return t.status(401).json({status:401,success:!1,result:"",errMsg:"No token, authorization denied."});try{const t=o.default.verify(r,null!==(s=process.env.JWT_TOKEN_SECRET)&&void 0!==s?s:"");e.user||(e.user={id:""}),e.user.id=t.id,i()}catch(e){n.Logger.error(`[ERROR] Msg: ${r}`),"TokenExpiredError"==e.name?t.status(401).json({status:401,success:!1,result:"",errMsg:"Token is expired"}):t.status(401).json({status:401,success:!1,result:"",errMsg:"Token is not valid"})}}},8738:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=i(9905);t.default=(e,t,i,n)=>{const o=e.status||500,r=e.message||"Some thing when wrong";s.Logger.error(`[ERROR] - Status: ${o} - Msg: ${r}`),i.status(o).json({status:o,success:!1,result:"",errMsg:r})}},9204:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.notAllowTesterMiddleware=t.notAllowTestLeadMiddleware=t.notAllowSeniorTesterMiddleware=t.notAllowGuestMiddleware=t.isSeniorTesterMiddleware=t.isTestLeadMiddleware=t.isProjectManagerMiddleware=t.resetMiddleware=t.validationMiddleware=t.authMiddleware=t.errorMiddleware=void 0;const n=s(i(5191));t.authMiddleware=n.default;const o=s(i(8738));t.errorMiddleware=o.default;const r=s(i(1580));t.validationMiddleware=r.default;const a=s(i(7123));t.resetMiddleware=a.default;const c=s(i(2417));t.isTestLeadMiddleware=c.default;const d=s(i(6891));t.isSeniorTesterMiddleware=d.default;const u=s(i(8944));t.isProjectManagerMiddleware=u.default;const l=s(i(1597));t.notAllowGuestMiddleware=l.default;const p=s(i(590));t.notAllowTesterMiddleware=p.default;const h=s(i(3348));t.notAllowTestLeadMiddleware=h.default;const f=s(i(3775));t.notAllowSeniorTesterMiddleware=f.default},7123:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(9722));t.default=(e,t,i)=>{var s;const o=e.header("reset-token");if(!o)return t.status(401).json({status:401,success:!1,result:"",errMsg:"No token, authorization denied."});try{const t=n.default.verify(o,null!==(s=process.env.JWT_TOKEN_FORGOTPASSWORD)&&void 0!==s?s:"");e.user||(e.user={id:""}),e.user.id=t._id,i()}catch(e){t.status(401).json({status:401,success:!1,result:"",errMsg:"Token is not valid"})}}},1580:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=i(516),n=i(5729),o=i(1576);t.default=(e,t=!1)=>(i,r,a)=>{s.validate(o.plainToClass(e,i.body),{skipMissingProperties:t}).then((e=>{if(e.length>0){const t=e.map((e=>Object.values(e.constraints))).join(", ");a(new n.HttpException(400,t))}else a()}))}},7093:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.generateJwtToken=t.randomTokenString=t.isEmptyObject=void 0;const n=s(i(6417)),o=s(i(9722));t.isEmptyObject=e=>!Object.keys(e).length,t.randomTokenString=()=>n.default.randomBytes(40).toString("hex"),t.generateJwtToken=(e,t)=>{var i;const s={id:e},n=null!==(i=process.env.JWT_TOKEN_SECRET)&&void 0!==i?i:"";return{token:o.default.sign(s,n,{expiresIn:6e4}),refreshToken:t}}},9905:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.isEmptyObject=t.validateEnv=t.Logger=void 0;const n=s(i(1495));t.Logger=n.default;const o=i(7093);Object.defineProperty(t,"isEmptyObject",{enumerable:!0,get:function(){return o.isEmptyObject}});const r=s(i(1557));t.validateEnv=r.default},1495:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(944)),o=n.default.createLogger({transports:[new n.default.transports.File({filename:"logs/error.log",level:"error"}),new n.default.transports.File({filename:"logs/combined.log"})],format:n.default.format.combine(n.default.format.colorize({all:!0}),n.default.format.simple())});t.default=o},1557:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const s=i(9509);t.default=()=>{s.cleanEnv(process.env,{NODE_ENV:s.str(),MONGODB_URI:s.str()})}},698:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.testsuitename=e,this.description=t,this.priority=i,this.parent=s}}s([n.IsNotEmpty()],o.prototype,"testsuitename",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"priority",void 0),t.default=o},8620:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TestSuiteSchema=t.TestSuiteRoute=void 0;const n=s(i(3633));t.TestSuiteRoute=n.default;const o=s(i(1825));t.TestSuiteSchema=o.default},3071:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(1310));var r=new(i(8393).Client)({host:"https://frko2fg30c:qgpsq7466h@ash-452073280.us-east-1.bonsaisearch.net:443"});t.default=class{constructor(){this.testsuiteService=new o.default,this.CreateTestSuiteAndAddProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body;yield this.testsuiteService.createTestSuiteAndAddProject(s,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.AddTestSuiteForTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testplan_id,s=e.params.testsuite_id,n=yield this.testsuiteService.addTestSuiteForTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.AddTestSuiteForTestSuite=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testsuitedestination_id,s=e.params.testsuite_id,n=yield this.testsuiteService.addTestSuiteForTestSuite(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.CreateTestSuiteAndAddTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_Id,n=e.body,o=yield this.testsuiteService.createTestSuiteAndAddTestPlan(n,i,s);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.GetAllTestSuiteOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testsuiteService.getAllTestSuiteOfProject(e.params.project_id),s=i.testsuites;let n={_id:s._id,name:s.projectname,description:s.description,type:"root",total_testcase:i.totalTCOfProject,numberof_testcaseuntest:i.totalTNUntestOfProject,total_testsuite_child:i.totalTestsuiteOfProject,children:[{_id:{type:String},children:[],name:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},total_testsuite_child:{type:Number},parent:{type:String}}]};n.children.pop();let o=s.testsuite,a=[{_id:{type:String},children:[],name:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},total_testsuite_child:{type:Number},parent:{type:String}}];a.pop();const c=e=>{for(let t in e)for(let i in e[t].testcase)a.push({_id:e[t].testcase[i]._id,name:e[t].testcase[i].testcaseName,description:e[t].testcase[i].description,testsuite:e[t].testsuitename,type:e[t].testcase[i].type,priority:e[t].testcase[i].priority,is_assigned:e[t].testcase[i].is_assigned,precondition:e[t].testcase[i].precondition,postcondition:e[t].testcase[i].postcondition,testexecution:e[t].testcase[i].testexecution,listStep:e[t].testcase[i].listStep,children:[]});return e},d=e=>{for(let t=0;t<e.length;t++)for(let i=0;i<e[t].children.length;i++){let s=e[t].children[i],n=e.find((e=>e._id==s));n?(e[t].children[i]=Object.assign({},n),n.removed=!0):e[t].children[i]={_id:s,children:[]}}return e.reduce(((e,t)=>(t.removed||e.push(t),e)),[])};(e=>{for(let t in e){a.push({_id:e[t]._id,name:e[t].testsuitename,description:e[t].description,type:e[t].type,priority:e[t].priority,is_assigned:e[t].is_assigned,total_testcase:e[t].total_testcase,numberof_testcaseuntest:e[t].numberof_testcaseuntest,total_testsuite_child:e[t].testsuite_child.length,parent:e[t].testsuite_parent,children:[]});for(let i in e[t].testsuite_child)a[t].children.push(e[t].testsuite_child[i]);for(let i in e[t].testcase)a[t].children.push(e[t].testcase[i]._id)}})(o),c(o);const u=d(JSON.parse(JSON.stringify(a)));for(let e in u)n.children.push(u[e]);r.index({index:"alltestcase",body:n}),t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.GetAllTestSuiteOfProjectNoTree=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testsuiteService.getAllTestSuiteOfProject(e.params.project_id),s=i.testsuites;let n={value:s._id,label:s.projectname,description:s.description,type:"root",total_testcase:i.totalTCOfProject,numberof_testcaseuntest:i.totalTNUntestOfProject,total_testsuite_child:i.totalTestsuiteOfProject,children:[{value:{type:String},children:[],label:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},total_testsuite_child:{type:Number},parent:{type:String}}]};n.children.pop();let o=s.testsuite,r=[{value:{type:String},children:[],label:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},total_testsuite_child:{type:Number},parent:{type:String}}];r.pop();const a=e=>{for(let t in e)for(let i in e[t].testcase)r.push({value:e[t].testcase[i]._id,label:e[t].testcase[i].testcaseName,description:e[t].testcase[i].description,type:e[t].testcase[i].type,priority:e[t].testcase[i].priority,is_assigned:e[t].testcase[i].is_assigned,precondition:e[t].testcase[i].precondition,postcondition:e[t].testcase[i].postcondition,listStep:e[t].testcase[i].listStep,children:[]});return e},c=e=>{for(let t=0;t<e.length;t++)for(let i=0;i<e[t].children.length;i++){let s=e[t].children[i],n=e.find((e=>e.value==s));n?(e[t].children[i]=Object.assign({},n),n.removed=!0,""!==e[t].children[i].children[0]&&void 0!==e[t].children[i].children[0]||delete e[t].children[i].children):e[t].children[i]={value:s}}return e.reduce(((e,t)=>(""!==t.children[0]&&void 0!==t.children[0]||delete t.children,t.removed||e.push(t),e)),[])};(e=>{for(let t in e){r.push({value:e[t]._id,label:e[t].testsuitename,description:e[t].description,type:e[t].type,priority:e[t].priority,is_assigned:e[t].is_assigned,total_testcase:e[t].total_testcase,numberof_testcaseuntest:e[t].numberof_testcaseuntest,total_testsuite_child:e[t].testsuite_child.length,parent:e[t].testsuite_parent,children:[]});for(let i in e[t].testsuite_child)void 0===e[t].testsuite_child[0]||r[t].children.push(e[t].testsuite_child[i]);for(let i in e[t].testcase)r[t].children.push(e[t].testcase[i]._id)}})(o),a(o);const d=c(JSON.parse(JSON.stringify(r)));for(let e in d)n.children.push(d[e]);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.GetAllTestSuiteOfProjectOnlyName=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=(yield this.testsuiteService.getAllTestSuiteOfProjectOnlyName(e.params.project_id)).pop();let s={_id:i._id,name:i.projectname,description:i.description,type:"root",children:[{name:{type:String}}]};s.children.pop();let n=i.testsuite;for(let e in n)s.children.push({name:n[e].testsuitename,_id:n[e]._id});t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.GetAllTestSuiteOfTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testsuiteService.getAllTestSuiteOfTestPlan(e.params.testplan_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetTestSuiteById=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testsuiteService.getTestSuiteById(e.params.testsuite_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.UpdateTestSuite=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.testsuite_id,n=e.params.project_id,o=yield this.testsuiteService.updateTestSuite(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.RemoveTestSuiteFromTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testplan_id,s=e.params.testsuite_id,n=yield this.testsuiteService.removeTestSuiteFromTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.RemoveAndDeleteTestSuiteFromProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testsuite_id,n=yield this.testsuiteService.removeAndDeleteTestSuiteFromProject(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.RemoveAndDeleteTestSuiteFromTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_id,n=e.params.testsuite_id,o=yield this.testsuiteService.removeAndDeleteTestSuiteFromTestPlan(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}}))}}},1825:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({testsuite_id:{type:String},testsuitename:{type:String},description:{type:String},priority:{type:String},is_assigned:{type:Boolean,default:!1},total_testcase:{type:Number,default:0},numberof_testcaseuntest:{type:Number,default:0},type:{type:String,default:"TS"},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},testcase:[{type:n.default.Schema.Types.ObjectId,ref:"testcase"}],testsuite_child:[{type:n.default.Schema.Types.ObjectId,ref:"testsuite"}],testsuite_parent:{type:n.default.Schema.Types.ObjectId,ref:"testsuite"},created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("testsuite",o)},3633:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(698)),a=s(i(3071));t.default=class{constructor(){this.path="/:project_id",this.router=o.Router(),this.testsuiteController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/api/create_testsuite",n.authMiddleware,n.validationMiddleware(r.default),this.testsuiteController.CreateTestSuiteAndAddProject),this.router.put(this.path+"/:testplan_id/:testsuite_id/add_to_testplan",n.authMiddleware,this.testsuiteController.AddTestSuiteForTestPlan),this.router.put(this.path+"/:testsuitedestination_id/:testsuite_id/add_to_testsuite",n.authMiddleware,this.testsuiteController.AddTestSuiteForTestSuite),this.router.post(this.path+"/:testplan_Id/addtotestplan",n.authMiddleware,n.validationMiddleware(r.default),this.testsuiteController.CreateTestSuiteAndAddTestPlan),this.router.get(this.path+"/api/getalltestsuite",n.authMiddleware,this.testsuiteController.GetAllTestSuiteOfProject),this.router.get(this.path+"/api/getalltestsuitenotree",n.authMiddleware,this.testsuiteController.GetAllTestSuiteOfProjectNoTree),this.router.get(this.path+"/api/getalltestsuiteonlyname",n.authMiddleware,this.testsuiteController.GetAllTestSuiteOfProjectOnlyName),this.router.get(this.path+"/:testplan_id/getalltestsuiteoftestplan",n.authMiddleware,this.testsuiteController.GetAllTestSuiteOfTestPlan),this.router.get(this.path+"/:testsuite_id/api/gettestsuitebyid",n.authMiddleware,this.testsuiteController.GetTestSuiteById),this.router.put(this.path+"/:testsuite_id/api/updatetestsuite",n.authMiddleware,n.validationMiddleware(r.default),this.testsuiteController.UpdateTestSuite),this.router.delete(this.path+"/:testplan_id/:testsuite_id",n.authMiddleware,this.testsuiteController.RemoveTestSuiteFromTestPlan),this.router.delete(this.path+"/:testsuite_id/api/deletetestsuitefromproject",n.authMiddleware,this.testsuiteController.RemoveAndDeleteTestSuiteFromProject),this.router.delete(this.path+"/:testplan_id/:testsuite_id/removeandelete",n.authMiddleware,this.testsuiteController.RemoveAndDeleteTestSuiteFromTestPlan)}}},1310:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=i(9435),a=i(6270),c=i(5937),d=n(i(1825));t.default=class{constructor(){this.testsuiteSchema=d.default,this.listDescendants=[]}createTestSuiteAndAddProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t,"testsuite").populate({path:"testsuite",select:"testsuitename"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");if(i.testsuite&&i.testsuite.some((t=>t.testsuitename===e.testsuitename)))throw new o.HttpException(400,"Name testsuite existed in project");const s=new d.default(Object.assign(Object.assign({},e),{project:t})),n=yield s.save();if(yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testsuite:n._id}},{new:!0,useFindAndModify:!1}),yield i.save(),void 0===e.parent||""===e.parent)return i;const a=yield d.default.findOne({testsuitename:e.parent,project:t}).exec();if(!a)throw new o.HttpException(400,"TestSuite is not existed");if(yield d.default.findByIdAndUpdate(a._id,{$push:{testsuite_child:n._id}},{new:!0,useFindAndModify:!1}),yield a.save(),!(yield d.default.findOneAndUpdate({_id:s._id},{$set:{testsuite_parent:a._id}},{new:!0}).exec()))throw new o.HttpException(400,"Update TestSuite is not success");return i}))}addTestSuiteForTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=c.TestPlanSchema.findById(e).exec(),s=d.default.findById(t).exec(),n=yield i;if(!n)throw new o.HttpException(400,"TestPlan is not exist");const r=yield s;if(!r)throw new o.HttpException(400,"TestSuite is not exist");if(n.testsuite&&n.testsuite.some((e=>e._id.toString()===t)))throw new o.HttpException(400,"This testsuite has already been in testplan");return yield c.TestPlanSchema.findByIdAndUpdate(e,{$push:{testsuite:r._id}},{new:!0,useFindAndModify:!1}),yield n.save(),n}))}addTestSuiteForTestSuite(e,t){return s(this,void 0,void 0,(function*(){const i=d.default.findById(e).exec(),s=d.default.findById(t).exec(),n=yield i;if(!n)throw new o.HttpException(400,"TestsuiteDestination is not exist");const r=yield s;if(!r)throw new o.HttpException(400,"TestSuite is not exist");if(n.testsuite_child&&n.testsuite_child.some((e=>e._id.toString()===t)))throw new o.HttpException(400,"This testsuite has already been in testsuiteDestination");if(yield d.default.findByIdAndUpdate(e,{$push:{testsuite_child:r._id}},{new:!0,useFindAndModify:!1}),yield n.save(),!(yield d.default.findOneAndUpdate({_id:t},{$set:{testsuite_parent:e}},{new:!0}).exec()))throw new o.HttpException(400,"Update TestSuite is not success");return n}))}createTestSuiteAndAddTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Project is not exist");const n=yield c.TestPlanSchema.findById(i).exec();if(!n)throw new o.HttpException(400,"TestPlan is not exist");if(yield d.default.findOne({testsuitename:e.testsuitename,project:t}).exec())throw new o.HttpException(400,"Name TestSuite existed");const a=new d.default(Object.assign(Object.assign({},e),{project:t})),u=yield a.save();return yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testsuite:u._id}},{new:!0,useFindAndModify:!1}),yield s.save(),yield c.TestPlanSchema.findByIdAndUpdate(i,{$push:{testsuite:u._id}},{new:!0,useFindAndModify:!1}),yield n.save(),n}))}getAllTestSuiteOfProject(e){return s(this,void 0,void 0,(function*(){const t=yield this.updateAssignTestSuite(e);return{testsuites:yield r.ProjectSchema.findOne({_id:e},"testsuite projectname description").populate({path:"testsuite",select:"testsuitename testcase description priority testsuite_child testsuite_parent type is_assigned total_testcase numberof_testcaseuntest",populate:[{path:"testcase",select:"testcaseName description testsuite listStep type priority precondition postcondition is_assigned testexecution",populate:[{path:"testexecution",select:"testexecutionname status project"}]},{path:"testsuite_parent",select:"testsuitename"}]}).exec(),totalTCOfProject:t.totalTCOfProject,totalTNUntestOfProject:t.totalTNUntestOfProject,totalTestsuiteOfProject:t.totalTSOfProject}}))}updateAssignTestSuite(e){return s(this,void 0,void 0,(function*(){let t=0,i=0,s=0;const n=yield r.ProjectSchema.findOne({_id:e},"testsuite -_id").populate({path:"testsuite",select:"testsuitename is_assigned total_testcase numberof_testcaseuntest",populate:[{path:"testcase",select:"is_assigned"}]}).exec();if(!n)throw new o.HttpException(400,"Load Testsuite tree error!");let a=n.testsuite,c=0,u=0;for(let e in a){s++,c=0,u=0;for(let s in a[e].testcase)a[e].testcase[s].is_assigned||(i++,c++),u++,t++;0==c&&0!=u?yield d.default.findOneAndUpdate({_id:a[e]._id},{$set:{numberof_testcaseuntest:c,total_testcase:u,is_assigned:!0}},{new:!0}).exec():yield d.default.findOneAndUpdate({_id:a[e]._id},{$set:{numberof_testcaseuntest:c,total_testcase:u,is_assigned:!1}},{new:!0}).exec()}return{totalTCOfProject:t,totalTNUntestOfProject:i,totalTSOfProject:s}}))}getAllTestSuiteOfProjectOnlyName(e){return s(this,void 0,void 0,(function*(){return r.ProjectSchema.find({_id:e},"testsuite projectname description").populate({path:"testsuite",select:"testsuitename"}).exec()}))}getAllTestSuiteOfTestPlan(e){return s(this,void 0,void 0,(function*(){return c.TestPlanSchema.find({_id:e}).populate("testsuite",["testsuitename","description","priority"]).exec()}))}getTestSuiteById(e){return s(this,void 0,void 0,(function*(){const t=yield this.testsuiteSchema.findById(e).populate("testsuite_parent",["testsuitename"]).exec();if(!t)throw new o.HttpException(404,"TestSuite is not exists");return t}))}findDescendants(e){return s(this,void 0,void 0,(function*(){return this.listDescendants=this.listDescendants.filter((e=>"0"==e)),yield this.loopDescendants(e)}))}loopDescendants(e){return s(this,void 0,void 0,(function*(){let t=[];const i=yield d.default.findById(e).exec();if(!i)return!0;if(0==i.testsuite_child.length)return t;for(let e of i.testsuite_child)yield this.listDescendants.push(e),yield this.loopDescendants(e.toString());return t}))}updateTestSuite(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield d.default.findById(t).exec();if(!s)throw new o.HttpException(400,"This TestSuite is not exist");if(""!=e.parent&&null!=e.parent&&null!=e.parent){const s=yield d.default.findOne({testsuitename:e.parent,project:i},"testsuite_parent testsuite_child").exec();if(!s)throw new o.HttpException(400,"This TestSuite is not exist");if(s._id.toString()==t.toString())throw new o.HttpException(400,"testsuite parent is illegal");yield this.findDescendants(t);const n=e=>e.toString()==s._id.toString();if(this.listDescendants&&-1!=this.listDescendants.findIndex(n))throw new o.HttpException(400,"Testsuite parent is descendant of this testsuite")}if(s.testsuitename!==e.testsuitename){const t=yield r.ProjectSchema.findById(i,"testsuite").populate({path:"testsuite",select:"testsuitename"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");if(t.testsuite&&t.testsuite.some((t=>t.testsuitename===e.testsuitename)))throw new o.HttpException(400,"Name testsuite existed in project")}if(!(yield d.default.findOneAndUpdate({_id:t},{$set:{testsuitename:e.testsuitename,description:e.description,priority:e.priority,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update TestSuite is not success");if(""===e.parent||void 0===e.parent){if(""===s.testsuite_parent||void 0===s.testsuite_parent)return s;{const e=yield d.default.findById(s.testsuite_parent).exec();if(!e)throw new o.HttpException(400,"This TestSuite parent is not exist");e.testsuite_child=e.testsuite_child.filter((({_id:e})=>e.toString()!==s._id.toString())),yield e.save();const t=yield d.default.findOneAndUpdate({_id:s._id},{$unset:{testsuite_parent:1}},{new:!0}).exec();if(!t)throw new o.HttpException(400,"Update TestSuite is not success");return t}}if(""===s.testsuite_parent||void 0===s.testsuite_parent){const t=yield d.default.findOne({testsuitename:e.parent,project:i}).exec();if(!t)throw new o.HttpException(400,"This TestSuite parent is not exist");yield d.default.findByIdAndUpdate(t._id,{$push:{testsuite_child:s._id}},{new:!0,useFindAndModify:!1});const n=yield d.default.findOneAndUpdate({_id:s._id},{$set:{testsuite_parent:t._id,updated_date:Date.now()}},{new:!0}).exec();if(!n)throw new o.HttpException(400,"Update TestSuite is not success");return n}{const t=yield d.default.findOne({testsuitename:e.parent,project:i}).exec();if(!t)throw new o.HttpException(400,"This TestSuite parent is not exist");if(t._id.toString()===s.testsuite_parent.toString())return s;{yield d.default.findByIdAndUpdate(t._id,{$push:{testsuite_child:s._id}},{new:!0,useFindAndModify:!1});const e=yield d.default.findById(s.testsuite_parent).exec();if(!e)throw new o.HttpException(400,"This TestSuite parent is not exist");e.testsuite_child=e.testsuite_child.filter((({_id:e})=>e.toString()!==s._id.toString())),yield e.save();const i=yield d.default.findOneAndUpdate({_id:s._id},{$set:{testsuite_parent:t._id,updated_date:Date.now()}},{new:!0}).exec();if(!i)throw new o.HttpException(400,"Update TestSuite is not success");return i}}}))}removeTestSuiteFromTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.TestPlanSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"TestPlan id is not exist");if(!(yield d.default.findById(t).exec()))throw new o.HttpException(400,"TestSuite id is not exist");if(i.testsuite&&-1==i.testsuite.findIndex((e=>e._id.toString()===t)))throw new o.HttpException(400,"You has not yet been testsuite of this testplan");return i.testsuite=i.testsuite.filter((({_id:e})=>e.toString()!==t)),yield i.save(),i}))}removeAndDeleteTestSuiteFromProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=yield d.default.findById(t).exec();if(!s)throw new o.HttpException(400,"TestSuite id is not exist");if(void 0!==s.testsuite_child&&s.testsuite_child.length>0)throw new o.HttpException(400,"You must delete all testsuite child before delete this testsuite");if(void 0!==s.testcase||s.testcase>0){if(!(yield a.TestCaseSchema.deleteMany({_id:[...s.testcase]}).exec()).ok)throw new o.HttpException(409,"Your id is invalid");i.testcase=i.testcase.filter((e=>!s.testcase.includes(e))),yield i.save()}if(i.testsuite&&-1==i.testsuite.findIndex((e=>e._id.toString()===t)))throw new o.HttpException(400,"You has not yet been testsuite of this project");if(i.testsuite=i.testsuite.filter((({_id:e})=>e.toString()!==t)),yield i.save(),void 0!==s.testsuite_parent){const e=yield d.default.findById(s.testsuite_parent).exec();if(!e)throw new o.HttpException(400,"TestSuite id is not exist");e.testsuite_child=e.testsuite_child.filter((({_id:e})=>e.toString()!==t)),yield e.save()}if(!(yield d.default.findOneAndDelete({_id:t}).exec()))throw new o.HttpException(400,"Delete TestSuite is not success");return"delete successfully"}))}removeAndDeleteTestSuiteFromTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(e).exec();if(!s)throw new o.HttpException(400,"Project id is not exist");const n=yield c.TestPlanSchema.findById(t).exec();if(!n)throw new o.HttpException(400,"TestPlan id is not exist");if(!(yield d.default.findById(i).exec()))throw new o.HttpException(400,"TestSuite id is not exist");if(s.testsuite&&-1==s.testsuite.findIndex((e=>e._id.toString()===i)))throw new o.HttpException(400,"You has not yet been testsuite of this project");if(s.testsuite=s.testsuite.filter((({_id:e})=>e.toString()!==i)),yield s.save(),n.testsuite&&-1==n.testsuite.findIndex((e=>e._id.toString()===i)))throw new o.HttpException(400,"You has not yet been testsuite of this testplan");if(n.testsuite=n.testsuite.filter((({_id:e})=>e.toString()!==i)),yield n.save(),!(yield d.default.findOneAndDelete({_id:i}).exec()))throw new o.HttpException(400,"Delete TestSuite is not success");return n}))}getAllTestSuiteHierachyOfTestPlan(e){return s(this,void 0,void 0,(function*(){return c.TestPlanSchema.find({_id:e}).populate("testsuite",["name","start_date","target_date"]).exec()}))}}},4679:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(7701));t.default=class{constructor(){this.authService=new o.default,this.login=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.authService.login(i);e.app.get("socketio").emit("login","login successfully"),t.json({status:200,success:!0,result:s,errMsg:""})}catch(e){const s=e.status;t.status(s).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.refreshToken=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body.refreshToken,s=yield this.authService.refreshToken(i);t.json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.revokeToken=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body.token;yield this.authService.revokeToken(i),t.status(200)}catch(e){i(e)}})),this.getCurrentLoginUser=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.authService.getCurrentLoginUser(e.user.id);t.status(200).json(i)}catch(e){i(e)}}))}}},2679:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(4679)),o=i(2127),r=i(9204);t.default=class{constructor(){this.path="/login",this.router=o.Router(),this.authController=new n.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path,this.authController.login),this.router.post(this.path+"/refresh-token",this.authController.refreshToken),this.router.post(this.path+"/revoke-token",r.authMiddleware,this.authController.revokeToken),this.router.get(this.path,r.authMiddleware,this.authController.getCurrentLoginUser)}}},7701:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(9905),r=i(7093),a=i(5729),c=i(1616),d=i(2333),u=n(i(2773));t.default=class{constructor(){this.userSchema=d.UserSchema}login(e){return s(this,void 0,void 0,(function*(){if(o.isEmptyObject(e))throw new a.HttpException(400,"Login Model is empty");const t=yield this.userSchema.findOne({username:e.username}).exec();if(!t)throw new a.HttpException(409,`Username ${e.username} is not exist.`);if(!(yield u.default.compare(e.password,t.password)))throw new a.HttpException(400,"Password is not valid");const i=yield this.generateRefreshToken(t._id),s=r.generateJwtToken(t._id,i.token);return yield i.save(),{token:s.token,refreshtoken:s.refreshToken,fullname:t.fullname,username:t.username}}))}refreshToken(e){return s(this,void 0,void 0,(function*(){const t=yield this.getRefreshTokenFromDb(e),{user:i}=t,s=yield this.generateRefreshToken(i);return t.revoked=new Date(Date.now()),t.replacedByToken=s.token,yield t.save(),yield s.save(),r.generateJwtToken(i,s.token)}))}revokeToken(e){return s(this,void 0,void 0,(function*(){const t=yield this.getRefreshTokenFromDb(e);t.revoked=new Date(Date.now()),yield t.save()}))}getCurrentLoginUser(e){return s(this,void 0,void 0,(function*(){const t=yield this.userSchema.findById(e).exec();if(!t)throw new a.HttpException(404,"User is not exists");return t}))}getRefreshTokenFromDb(e){return s(this,void 0,void 0,(function*(){const t=yield c.RefreshTokenSchema.findOne({token:e}).populate("user").exec();if(o.Logger.info(t),!t||!t.isActive)throw new a.HttpException(400,"Invalid refresh token");return t}))}generateRefreshToken(e){return s(this,void 0,void 0,(function*(){return new c.RefreshTokenSchema({user:e,token:r.randomTokenString(),expires:new Date(Date.now()+6048e5)})}))}}},6453:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(9508));t.default=class{constructor(){this.buildService=new o.default,this.CreateBuildAndAddProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body;void 0!==s.id_exist_build&&""!==s.id_exist_build&&null!==s.id_exist_build?yield this.buildService.duplicateBuild(s,i):yield this.buildService.createBuildAndAddProject(s,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.AddBuildForTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testplan_id,s=e.params.build_id,n=yield this.buildService.addBuildForTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.CreateBuildAndAddTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_Id,n=e.body,o=yield this.buildService.createBuildAndAddTestPlan(n,i,s);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetAllBuildOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.buildService.getAllBuildOfProject(e.params.project_id),r=i.pop(),a=r.build;let c={build:[{_id:{type:String},buildname:{type:String},description:{type:String},is_active:{type:String},is_open:{type:String},releasedate:{type:String},testplan:{testplanname:{type:String}}}],_id:{type:String}};c.build.pop(),c._id=r._id;for(let e in a){var s=a[e].releasedate.getDate();s<10&&(s="0"+s);var n=a[e].releasedate.getMonth()+1;n<10&&(n="0"+n);var o=a[e].releasedate.getFullYear();c.build.push({buildname:a[e].buildname,description:a[e].description,is_active:a[e].is_active,is_open:a[e].is_open,releasedate:s+"-"+n+"-"+o,testplan:a[e].testplan,_id:a[e]._id})}i.push(c),t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.SearchBuildOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.buildService.searchBuildOfProject(e.params.project_id,e.body.keyword);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetAllBuildOfProjectActive=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.buildService.getAllBuildOfProjectActive(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetAllBuildOfTestplantActive=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.buildService.getAllBuildOfTestPlanActive(e.params.project_id,e.params.testplan_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetAllBuildOfTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.buildService.getAllBuildOfTestPlan(e.params.testplan_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetBuildById=(e,t,i)=>s(this,void 0,void 0,(function*(){try{console.log("hello");const i=yield this.buildService.getBuildById(e.params.build_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.UpdateBuild=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.build_id,n=e.params.project_id,o=yield this.buildService.updateBuild(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.RemoveBuildFromTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testplan_id,s=e.params.build_id,n=yield this.buildService.removeBuildFromTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.RemoveAndDeleteBuildFromProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.build_id,n=yield this.buildService.removeAndDeleteBuildFromProject(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.DisableBuildFromProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.build_id,n=yield this.buildService.disableBuildFromProject(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.RemoveAndDeleteBuildFromTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_id,n=e.params.build_id,o=yield this.buildService.removeAndDeleteBuildFromTestPlan(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.DuplicateBuild=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.buildService.duplicateBuild(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}}))}}},3108:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({build_id:{type:String},buildname:{type:String},description:{type:String},is_active:{type:Boolean,default:!0},is_open:{type:Boolean,default:!1},is_disable:{type:Boolean,default:!0},releasedate:{type:Date,default:Date.now},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},testplan:{type:n.default.Schema.Types.ObjectId,ref:"testplan"},testexecution:[{type:n.default.Schema.Types.ObjectId,ref:"testexecution"}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("build",o)},3208:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(1189)),a=s(i(6453));t.default=class{constructor(){this.path="/api/build/:project_id",this.router=o.Router(),this.buildController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path,n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default),this.buildController.CreateBuildAndAddProject),this.router.put(this.path+"/:testplan_id/:build_id",n.authMiddleware,n.notAllowTesterMiddleware,this.buildController.AddBuildForTestPlan),this.router.post(this.path+"/:testplan_Id",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default,!0),this.buildController.CreateBuildAndAddTestPlan),this.router.post(this.path+"/api/searchbuild",n.authMiddleware,this.buildController.SearchBuildOfProject),this.router.get(this.path,n.authMiddleware,this.buildController.GetAllBuildOfProject),this.router.get(this.path+"/getallbuildactive",n.authMiddleware,this.buildController.GetAllBuildOfProjectActive),this.router.get(this.path+"/:testplan_id/getallbuildactiveoftestplan",n.authMiddleware,this.buildController.GetAllBuildOfTestplantActive),this.router.get(this.path+"/:testplan_id",n.authMiddleware,this.buildController.GetAllBuildOfTestPlan),this.router.get(this.path+"/:build_id/getbyid",n.authMiddleware,this.buildController.GetBuildById),this.router.put(this.path+"/:build_id",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default),this.buildController.UpdateBuild),this.router.delete(this.path+"/:testplan_id/:build_id",n.authMiddleware,n.notAllowTesterMiddleware,this.buildController.RemoveBuildFromTestPlan),this.router.delete(this.path+"/:build_id/api/deletebuildfromproject",n.authMiddleware,n.notAllowTesterMiddleware,this.buildController.RemoveAndDeleteBuildFromProject),this.router.delete(this.path+"/:testplan_id/:build_id/removeandelete",n.authMiddleware,n.notAllowTesterMiddleware,this.buildController.RemoveAndDeleteBuildFromTestPlan),this.router.post(this.path+"/api/duplicatebuild",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default,!0),this.buildController.DuplicateBuild)}}},9508:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=i(9435),a=i(5937),c=i(6968),d=i(9664),u=i(2333),l=n(i(9392));t.default=class{constructor(){this.buildSchema=c.BuildSchema,this.testexecutionServices=new l.default}createBuildAndAddProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t,"build").populate({path:"build",select:"buildname"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");const s=yield a.TestPlanSchema.findOne({testplanname:e.testplanname,project:t},"build").populate({path:"build",select:"buildname"}).exec();if(!s)throw new o.HttpException(400,"Testplan is not exist");if(s.build&&s.build.some((t=>t.buildname===e.buildname)))throw new o.HttpException(400,"Name build existed in testplan");const n=new c.BuildSchema(Object.assign(Object.assign({},e),{is_open:e.isPublic,is_active:e.isActive,releasedate:e.releasedate,buildname:e.buildname,description:e.description,project:t,created_date:Date.now(),updated_date:Date.now()})),d=yield n.save();yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{build:d._id}},{new:!0,useFindAndModify:!1}),yield i.save();const u=yield a.TestPlanSchema.findOneAndUpdate({testplanname:e.testplanname,project:t},{$push:{build:d._id}},{new:!0,useFindAndModify:!1});if(!u)throw new o.HttpException(400,"Name testplan not existed in project");return yield c.BuildSchema.findByIdAndUpdate(d._id,{testplan:u._id},{new:!0,useFindAndModify:!1}),d}))}addBuildForTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=yield a.TestPlanSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"TestPlan is not exist");const s=yield c.BuildSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Build is not exist");if(i.build&&i.build.some((e=>e._id.toString()===t)))throw new o.HttpException(400,"This build has already been in testplan");return yield a.TestPlanSchema.findByIdAndUpdate(e,{$push:{build:s._id}},{new:!0,useFindAndModify:!1}),yield i.save(),i}))}createBuildAndAddTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Project is not exist");const n=yield a.TestPlanSchema.findById(i).exec();if(!n)throw new o.HttpException(400,"TestPlan is not exist");if(yield c.BuildSchema.findOne({name:e.buildname,testplan:i}).exec())throw new o.HttpException(400,"Name Build existed");const d=new c.BuildSchema(Object.assign({},e)),u=yield d.save();return yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{build:u._id}},{new:!0,useFindAndModify:!1}),yield s.save(),yield a.TestPlanSchema.findByIdAndUpdate(i,{$push:{build:u._id}},{new:!0,useFindAndModify:!1}),yield n.save(),n}))}getAllBuildOfProjectActive(e){return s(this,void 0,void 0,(function*(){return r.ProjectSchema.find({_id:e},"build").populate({path:"build",select:["_id","buildname","is_active"],match:{is_active:!0,is_disable:!0}}).exec()}))}getAllBuildOfTestPlanActive(e,t){return s(this,void 0,void 0,(function*(){const e=a.TestPlanSchema.find({_id:t},"build").populate({path:"build",select:["_id","buildname","is_active"],match:{is_active:!0,is_disable:!0}}).exec();if(!e)throw new o.HttpException(404,"Testplan is not exists");return e}))}getAllBuildOfProject(e){return s(this,void 0,void 0,(function*(){return r.ProjectSchema.find({_id:e},"build").populate({path:"build",select:["_id","buildname","description","is_active","is_open","releasedate"],populate:[{path:"testplan",select:"testplanname -_id"}],match:{is_disable:!0}}).exec()}))}searchBuildOfProject(e,t){return s(this,void 0,void 0,(function*(){return r.ProjectSchema.find({_id:e},"build").populate({path:"build",select:["_id","buildname","description","is_active","is_open","releasedate"],match:{buildname:new RegExp(t,"i"),is_disable:!0},populate:[{path:"testplan",select:"testplanname -_id"}]}).exec()}))}getAllBuildOfTestPlan(e){return s(this,void 0,void 0,(function*(){return a.TestPlanSchema.find({_id:e},"build").populate({path:"build",select:["_id","buildname","description","is_active","is_open","releasedate","testplan"],match:{is_disable:!0}}).exec()}))}getBuildById(e){return s(this,void 0,void 0,(function*(){const t=yield this.buildSchema.findOne({_id:e,is_disable:!0}).exec();if(!t)throw new o.HttpException(404,"Build is not exists");return t}))}updateBuild(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield c.BuildSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Build id is not exist");if(s.buildname!==e.buildname){const t=yield r.ProjectSchema.findById(i,"build").populate({path:"build",select:"buildname"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");if(t.build&&t.build.some((t=>t.buildname===e.buildname)))throw new o.HttpException(400,"Name build existed in project")}const n=yield c.BuildSchema.findOneAndUpdate({_id:t},{$set:{buildname:e.buildname,description:e.description,is_open:e.isPublic,is_active:e.isActive,releasedate:e.releasedate,updated_date:Date.now()}},{new:!0}).exec();if(!n)throw new o.HttpException(400,"Update Build is not success");return n}))}removeAndDeleteBuildFromProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=yield c.BuildSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Build id is not exist");if(void 0!==s.testplan&&""!==s.testplan&&null!==s.testplan&&(void 0!==s.testexecution||s.testexecution>0))for(let t of s.testexecution)yield this.testexecutionServices.deleteTestExecutionFromProject(e,t.toString());if(void 0!==s.testplan){const e=yield a.TestPlanSchema.findById(s.testplan).exec();if(e){e.build=e.build.filter((({_id:e})=>e.toString()!==t)),yield e.save();for(let t of s.testexecution)e.testexecution=e.testexecution.filter((({_id:e})=>e.toString()!==t.toString())),yield e.save()}}if(i.build=i.build.filter((({_id:e})=>e.toString()!==t)),yield i.save(),!(yield c.BuildSchema.findOneAndDelete({_id:t}).exec()))throw new o.HttpException(400,"Delete Build is not success");return i}))}disableBuildFromProject(e,t){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(e).exec()))throw new o.HttpException(400,"Project id is not exist");if(!(yield c.BuildSchema.findById(t).exec()))throw new o.HttpException(400,"Build id is not exist");const i=yield c.BuildSchema.findOneAndUpdate({_id:t},{$set:{is_disable:!1}},{new:!0}).exec();if(!i)throw new o.HttpException(400,"Disable Build is not success");return i}))}removeAndDeleteBuildFromTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(e).exec();if(!s)throw new o.HttpException(400,"Project id is not exist");const n=yield a.TestPlanSchema.findById(t).exec();if(!n)throw new o.HttpException(400,"TestPlan id is not exist");if(!(yield c.BuildSchema.findById(i).exec()))throw new o.HttpException(400,"Build id is not exist");if(s.build&&-1==s.build.findIndex((e=>e._id.toString()===i)))throw new o.HttpException(400,"You has not yet been build of this project");if(s.build=s.build.filter((({_id:e})=>e.toString()!==i)),yield s.save(),n.build&&-1==n.build.findIndex((e=>e._id.toString()===i)))throw new o.HttpException(400,"You has not yet been build of this testplan");if(n.build=n.build.filter((({_id:e})=>e.toString()!==i)),yield n.save(),!(yield c.BuildSchema.findOneAndDelete({_id:i}).exec()))throw new o.HttpException(400,"Delete Build is not success");return n}))}removeBuildFromTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=yield a.TestPlanSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"TestPlan id is not exist");if(!(yield c.BuildSchema.findById(t).exec()))throw new o.HttpException(400,"Build id is not exist");if(i.build&&-1==i.build.findIndex((e=>e._id.toString()===t)))throw new o.HttpException(400,"You has not yet been build of this testplan");return i.build=i.build.filter((({_id:e})=>e.toString()!==t)),yield i.save(),i}))}duplicateBuild(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t,"build members").populate({path:"build",select:"buildname"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");const s=yield c.BuildSchema.findById(e.id_exist_build).populate({path:"testexecution",select:"is_active is_public status testexecutionname description project testplan tester build exectestcases",populate:[{path:"tester",select:"username _id"}]}).exec();if(!s)throw new o.HttpException(400,"name build from create existing is not exist");const n=yield a.TestPlanSchema.findOne({_id:s.testplan},"build testplanname").populate({path:"build",select:"buildname"}).exec();if(!n)throw new o.HttpException(400,"Testplan is not exist");if(n.build&&n.build.some((t=>t.buildname===e.buildname)))throw new o.HttpException(400,"Name build existed in testplan");let l={is_open:{type:Boolean},is_active:{type:Boolean},is_disable:{type:Boolean},releasedate:{type:String},buildname:{type:String},description:{type:String},project:{type:String},testplan:{type:String}};l={is_open:e.isPublic,is_active:e.isActive,is_disable:s.is_disable,releasedate:e.releasedate,buildname:e.buildname,description:e.description,project:s.project,testplan:s.testplan};const p={buildname:e.buildname,description:l.description,isActive:l.is_active,isPublic:l.is_open,releasedate:l.releasedate,testplanname:n.testplanname,id_exist_build:""},h=yield this.createBuildAndAddProject(p,l.project);let f=[{_id:{type:String},type:{type:String},status:{type:String},note:{type:String},testcaseName:{type:String},description:{type:String},precondition:{type:String},postcondition:{type:String},testsuite:{type:String},priority:{type:String},listStep:[{status:{type:String},note:{type:String},_id:{type:String},stepDefine:{type:String},expectResult:{type:String},type:{type:String}}]}];f.pop();let m=[{testexecutionname:{type:String},description:{type:String},testplanname:{type:String},buildname:{type:String},is_public:{type:String},is_active:{type:String},assigntester:{type:String},listexectestcases:{type:String},exist_testexecution:{type:String}}];m.pop();for(let e in s.testexecution){const t=JSON.parse(JSON.stringify(s.testexecution[e].exectestcases));for(let e in t){f.push({type:t[e].type,status:"Untest",note:"",_id:t[e]._id,testcaseName:t[e].testcaseName,description:t[e].description,testsuite:t[e].testsuite,precondition:t[e].precondition,postcondition:t[e].postcondition,priority:t[e].priority,listStep:[]});for(let i in t[e].listStep)f[e].listStep.push({status:"Untest",note:"",_id:t[e].listStep[i]._id,stepDefine:t[e].listStep[i].stepDefine,expectResult:t[e].listStep[i].expectResult,type:t[e].listStep[i].type})}m.push({testexecutionname:s.testexecution[e].testexecutionname,description:s.testexecution[e].description,testplanname:p.testplanname,buildname:h,is_public:s.testexecution[e].is_public,is_active:s.testexecution[e].is_active,assigntester:s.testexecution[e].tester,listexectestcases:f,exist_testexecution:""}),f=[]}for(let e in m)if(""!==m[e].assigntester&&void 0!==m[e].assigntester){i.members.find((t=>t.username===m[e].assigntester.username));const n=new d.TestExecutionSchema({is_active:m[e].is_active,is_public:m[e].is_public,description:m[e].description,testexecutionname:m[e].testexecutionname,testplan:s.testplan,tester:m[e].assigntester._id,build:h._id,exectestcases:m[e].listexectestcases}),o=yield n.save();yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testexecution:o._id}},{new:!0,useFindAndModify:!1}),yield a.TestPlanSchema.findOneAndUpdate({_id:s.testplan},{$push:{testexecution:o._id}},{new:!0,useFindAndModify:!1}),yield c.BuildSchema.findOneAndUpdate({_id:h._id},{$push:{testexecution:o._id}},{new:!0,useFindAndModify:!1}),yield u.UserSchema.findOneAndUpdate({_id:m[e].assigntester._id},{$push:{testexecution:o._id}},{new:!0,useFindAndModify:!1})}else{const i=new d.TestExecutionSchema({is_active:m[e].is_active,is_public:m[e].is_public,description:m[e].description,testexecutionname:m[e].testexecutionname,testplan:s.testplan,build:h._id,exectestcases:m[e].listexectestcases}),n=yield i.save();yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testexecution:n._id}},{new:!0,useFindAndModify:!1}),yield a.TestPlanSchema.findOneAndUpdate({_id:s.testplan},{$push:{testexecution:n._id}},{new:!0,useFindAndModify:!1}),yield c.BuildSchema.findOneAndUpdate({_id:h._id},{$push:{testexecution:n._id}},{new:!0,useFindAndModify:!1})}}))}}},1189:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n,o,r){this.buildname=e,this.description=t,this.isActive=i,this.isPublic=s,this.releasedate=n,this.testplanname=o,this.id_exist_build=r}}s([n.IsNotEmpty()],o.prototype,"buildname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"isActive",void 0),s([n.IsNotEmpty()],o.prototype,"isPublic",void 0),s([n.IsDateString()],o.prototype,"releasedate",void 0),s([n.IsNotEmpty()],o.prototype,"testplanname",void 0),t.default=o},6968:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BuildRoute=t.BuildSchema=void 0;const n=s(i(3108));t.BuildSchema=n.default;const o=s(i(3208));t.BuildRoute=o.default},6145:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(){this.index=(e,t,i)=>{try{t.status(200).send("API is running...")}catch(e){i(e)}}}}},304:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(2127),o=s(i(6145));t.default=class{constructor(){this.path="/",this.router=n.Router(),this.indexController=new o.default,this.initializeRoutes()}initializeRoutes(){this.router.get(this.path,this.indexController.index)}}},1570:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.IndexRoute=t.IndexController=void 0;const n=s(i(6145));t.IndexController=n.default;const o=s(i(304));t.IndexRoute=o.default},7996:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.projectid=e,this.username=t,this.email=i,this.access_level=s}}s([n.IsNotEmpty()],o.prototype,"projectid",void 0),s([n.IsNotEmpty()],o.prototype,"username",void 0),s([n.IsNotEmpty()],o.prototype,"access_level",void 0),s([n.IsNotEmpty(),n.IsEmail()],o.prototype,"email",void 0),t.default=o},7808:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i){this.url=e,this.token=t,this.project=i}}s([n.IsNotEmpty()],o.prototype,"url",void 0),s([n.IsNotEmpty()],o.prototype,"project",void 0),t.default=o},9455:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MantisRoute=t.MantisSchema=void 0;const n=s(i(1657));t.MantisSchema=n.default;const o=s(i(6424));t.MantisRoute=o.default},8960:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(2379));t.default=class{constructor(){this.mantisService=new o.default,this.CreateMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.createMantis(e.user.id,e.params.project_id,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.CreateAndSwitchMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.createAndSwitchMantis(e.user.id,e.params.project_id,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.AddMemberToMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.addMemberToMantis(i,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllMemberOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.mantisService.getAllMemberOfMantis(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.DeleteMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.mantisService.deleteMantis(e.params.project_id,e.user.id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.ChangeRoleMember=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.changeRoleMember(i,e.params.project_id,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.RemoveMemberOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.removeMemberOfMantis(i,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllIssueOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=Number(e.query.page_size),s=Number(e.query.page),n=yield this.mantisService.getAllIssueOfMantis(e.user.id,e.params.project_id,i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.CreateIssue=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.mantisService.createIssue(e.user.id,e.params.project_id,i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.getInformationOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.mantisService.getInformationOfMantis(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.updateInformationOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.updateInformationMantis(e.params.project_id,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.ChangeToken=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.changeToken(i,e.params.project_id,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.AddCategoryToMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.addCategoryToMantis(e.params.project_id,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllCategoryOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{e.body;const i=yield this.mantisService.getAllCategoryOfMantis(e.user.id,e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.RemoveCategoryOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.mantisService.removeCategoryOfMantis(i,e.params.project_id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllProjectOfMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.mantisService.getAllProjectOfMantis(e.user.id,e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.SwitchProjectMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.mantisService.switchProjectMantis(e.params.project_id,i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.GetAllMantisOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.mantisService.getAllMantisOfProject(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.SwitchMantis=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.mantisService.switchMantis(e.params.project_id,i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}}))}}},1657:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({mantisname:{type:String},url:{type:String},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},project_id_mantis:{type:String},members:[{_id:{type:n.default.Schema.Types.ObjectId,ref:"user"},username_mantis:{type:String},usermantis_id:{type:String},username:{type:String},email:{type:String},role_mantis:{type:String},is_active_backend:{type:Boolean,default:!1},token_mantis:{type:String},enable_mantis:{type:Boolean,default:!0},protected_mantis:{type:Boolean,default:!1},created_date:{type:Date,default:Date.now},url:{type:String}}],categories:[{categoryname:{type:String},created_date:{type:Date,default:Date.now}}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("mantis",o)},6424:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(7996)),a=s(i(7808)),c=s(i(8960));t.default=class{constructor(){this.path="/:project_id",this.router=o.Router(),this.mantisController=new c.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/api/createmantis",n.authMiddleware,n.isProjectManagerMiddleware,n.validationMiddleware(a.default,!0),this.mantisController.CreateMantis),this.router.post(this.path+"/api/createandswitchmantis",n.authMiddleware,n.isProjectManagerMiddleware,n.validationMiddleware(a.default,!0),this.mantisController.CreateAndSwitchMantis),this.router.put(this.path+"/api/mantis/addmembermantis",n.authMiddleware,n.isProjectManagerMiddleware,n.validationMiddleware(r.default,!0),this.mantisController.AddMemberToMantis),this.router.get(this.path+"/api/getallmembermantis",n.authMiddleware,this.mantisController.GetAllMemberOfMantis),this.router.delete(this.path+"/api/deletemantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.DeleteMantis),this.router.put(this.path+"/api/v1/changerolemembermantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.ChangeRoleMember),this.router.put(this.path+"/api/mantis/removemembermantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.RemoveMemberOfMantis),this.router.get(this.path+"/api/mantis/getallissue",n.authMiddleware,this.mantisController.GetAllIssueOfMantis),this.router.post(this.path+"/api/mantis/createissue",n.authMiddleware,this.mantisController.CreateIssue),this.router.get(this.path+"/api/mantis/getinformationmantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.getInformationOfMantis),this.router.put(this.path+"/api/mantis/updateinformationmantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.updateInformationOfMantis),this.router.put(this.path+"/api/mantis/changetoken",n.authMiddleware,this.mantisController.ChangeToken),this.router.put(this.path+"/api/mantis/addcategory",n.authMiddleware,this.mantisController.AddCategoryToMantis),this.router.get(this.path+"/api/mantis/getallcategory",n.authMiddleware,this.mantisController.GetAllCategoryOfMantis),this.router.put(this.path+"/api/mantis/removecategory",n.authMiddleware,this.mantisController.RemoveCategoryOfMantis),this.router.get(this.path+"/api/mantis/getallmantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.GetAllProjectOfMantis),this.router.put(this.path+"/api/mantis/swtichmantis",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.SwitchProjectMantis),this.router.get(this.path+"/api/v1/getallmantisofproject",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.GetAllMantisOfProject),this.router.put(this.path+"/api/v1/swtichmantisofproject",n.authMiddleware,n.isProjectManagerMiddleware,this.mantisController.SwitchMantis)}}},2379:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,i=e[Symbol.asyncIterator];return i?i.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t);function s(i){t[i]=e[i]&&function(t){return new Promise((function(s,n){!function(e,t,i,s){Promise.resolve(s).then((function(t){e({value:t,done:i})}),t)}(s,n,(t=e[i](t)).done,t.value)}))}}},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(5729),a=i(9455),c=i(9435),d=i(2333),u=o(i(2376)),l=i(9664),p=i(5511);p.setApiKey(process.env.SENDGRID_API_KEY),t.default=class{constructor(){this.mantisSchema=a.MantisSchema}createMantis(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield d.UserSchema.findById(e).select("-password").exec();if(!s)throw new r.HttpException(400,"User id is not exist");const n=yield c.ProjectSchema.findById(t).exec();if(!n)throw new r.HttpException(400,"User id is not exist");const o=yield a.MantisSchema.find({project:t},"mantisname url").exec();if(!o)throw new r.HttpException(400,"Project Id is not exist");for(let e of o)if(e.url.toString()===i.url)throw new r.HttpException(400,`Url ${i.url} has been existed in this project`);let l={name:i.project,enabled:!0},p={project:"ss",name:"ss"};try{const e=yield u.default.post(i.url+"/api/rest/projects",l,{headers:{Authorization:i.token,"content-type":"application/json"}});p=yield e.data.project}catch(e){throw new r.HttpException(400,"Connect mantis is not success or project name has been existed")}const h=yield new a.MantisSchema({created_user:e,updated_user:e,created_date:Date.now(),updated_date:Date.now(),url:i.url,project:t,project_id_mantis:p.id,mantisname:p.name}),f=yield h.save(),m=yield a.MantisSchema.findById(f._id).exec();if(!m)throw new r.HttpException(400,"Mantis is not exist");if(yield s.mantis.unshift({_id:f._id,mantisname:f.mantisname,status:!0,role:"administrator"}),yield s.save(),yield m.members.unshift({_id:s._id,username_mantis:"administrator",usermantis_id:"1",username:s.username,email:s.email,role_mantis:"administrator",is_active_backend:!0,token_mantis:i.token,enable_mantis:!0,protected_mantis:!0,url:i.url,created_date:Date.now()}),yield m.save(),!(yield c.ProjectSchema.findOneAndUpdate({_id:n._id},{$set:{mantis:m._id}},{new:!0}).exec()))throw new r.HttpException(400,"Add Mantis to Project is not success");return!0}))}createAndSwitchMantis(e,t,i){return s(this,void 0,void 0,(function*(){if(!(yield d.UserSchema.findById(e).select("-password").exec()))throw new r.HttpException(400,"User id is not exist");const s=yield c.ProjectSchema.findById(t).exec();if(!s)throw new r.HttpException(400,"User id is not exist");const n=yield a.MantisSchema.findById(s.mantis).populate({path:"members"}).exec();if(!n)throw new r.HttpException(400,"Mantis is not exist");const o=n.members;let l="";for(let t of o)t._id==e&&(l=t.token_mantis);let p={name:i.project,enabled:!0},h={project:"ss",name:"ss"};try{const e=yield u.default.post(i.url+"/api/rest/projects",p,{headers:{Authorization:l,"content-type":"application/json"}});h=yield e.data.project}catch(e){throw new r.HttpException(400,"Create project error or name project has been existed")}if(!(yield a.MantisSchema.findOneAndUpdate({_id:s.mantis},{$set:{mantisname:h.name,project_id_mantis:h.id}},{new:!0}).exec()))throw new r.HttpException(400,"Switch mantis is not success");return!0}))}switchProjectMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new r.HttpException(400,"User id is not exist");if(!(yield a.MantisSchema.findById(i.mantis).exec()))throw new r.HttpException(400,"Mantis is not exist");if(console.log(JSON.stringify(t,null," ")),!(yield a.MantisSchema.findOneAndUpdate({_id:i.mantis},{$set:{mantisname:t.mantis_name,project_id_mantis:t.mantis_id}},{new:!0}).exec()))throw new r.HttpException(400,"Switch mantis is not success");return!0}))}switchMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new r.HttpException(400,"User id is not exist");const s=yield a.MantisSchema.findById(i.mantis).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");if(s.project.toString()!==e.toString())throw new r.HttpException(400,"Mantis is not belong to project");if(!(yield c.ProjectSchema.findOneAndUpdate({_id:i._id},{$set:{mantis:t.mantis_id}},{new:!0}).exec()))throw new r.HttpException(400,"Add Mantis to Project is not success");return!0}))}getAllMemberOfMantis(e){return s(this,void 0,void 0,(function*(){const t=yield c.ProjectSchema.findById(e).exec();if(!t)throw new r.HttpException(400,"Project is not exist");const i=yield a.MantisSchema.findById(t.mantis,"members.username_mantis members.username members.is_active_backend members.role_mantis members.email").exec();if(!i)throw new r.HttpException(400,"Mantis is not exist");return i}))}addMemberToMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield d.UserSchema.findOne({email:e.email}).populate({path:"mantis"}).exec();if(!i)throw new r.HttpException(400,"User is not exist");if(!(yield d.UserSchema.findById(t).exec()))throw new r.HttpException(400,"Admin is not exist");const s=yield c.ProjectSchema.findById(e.projectid).exec();if(!s)throw new r.HttpException(400,"Project is not exist");const n=yield a.MantisSchema.findById(s.mantis).populate({path:"members"}).exec();if(!n)throw new r.HttpException(400,"Mantis is not exist");const o=n.members;let l="";for(let e of o)e._id==t&&(l=e.token_mantis);let h={username:e.username,password:"123456",real_name:i.fullname,email:i.email,access_level:{name:e.access_level},enabled:!0,protected:!1},f="s";try{const e=yield u.default.post(n.url+"/api/rest/users/",h,{headers:{Authorization:l,"content-type":"application/json"}});f=yield e.data.user}catch(e){}yield i.mantis.unshift({_id:n._id,mantisname:n.mantisname,status:!0,role:e.access_level}),yield i.save(),yield n.members.unshift({_id:i._id,username_mantis:e.username,usermantis_id:f.id,username:i.username,email:i.email,role_mantis:e.access_level,is_active_backend:!1,token_mantis:"",enable_mantis:!0,protected_mantis:!0,url:n.url,created_date:Date.now()}),yield n.save();const m={to:i.email,from:"hung08596@gmail.com",subject:"Welcome to MantisBT of TestControl",text:"Welcome to MantisBT of TestControl",html:`\n      <head>\n      <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />\n      \x3c!-- <title>Welcome email</title> --\x3e\n      \x3c!-- <meta name="description" content="Welcome email template."> --\x3e\n      <style type="text/css">\n          a:hover {text-decoration: underline !important;}\n      </style>\n  </head>\n  \n  <body>\n      \x3c!--100% body table--\x3e\n      <table cellspacing="0" border="0" cellpadding="0" width="100%">\n          <tr>\n              <td>\n                  <table style="max-width:670px;  margin:0 auto;" width="100%" border="0"\n                      align="center" cellpadding="0" cellspacing="0">\n                     \n                      <tr>\n                          <td>\n                              <table width="95%" border="0" align="center" cellpadding="0" cellspacing="0"\n                                  style="max-width:670px;">\n                                  <tr>\n                                      <td>                                        \n                                          <h1 align="center">Welcome!</h1>\n                                          \n                                          <h2>Dear ${i.fullname},</h2>\n  \n                                          <p>\n                                              You has been invited to Mantis Bug Tracker of project ${s.projectname}\n                                          </p>\n                                          <p>\n                                              username: ${e.username}                                         \n                                          </p>\n                                          <p>\n                                              password: 123456                                         \n                                          </p>\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td style="height:30px">\n                                      <p>\n                                              You need read mail from MantisBT and unlock account mantis. And then create token of mantis\n                                              <p>Finally, you add token to project ${s.projectname}</p>\n                                      </p>\n                                      <p>\n                                              If this email has been existed in MantisBT, create token of mantis and add token to project ${s.projectname}\n                                      </p>\n                                      </td>\n                                  </tr>\n                                  \n                                  <tr>\n                                      <td style="height:30px;">\n                                          <p>\n                                          Sincerely,\n                                          </p>\n                                          <p>\n                                              <strong>Test Control Team</strong>\n                                          </p>\n                                      </td>\n                                  </tr>\n                              </table>\n                          </td>\n                          <tr>\n                              <td style="text-align:center;">\n                                  <p>&copy; <strong>Test Control, 2021</strong></p>\n                              </td>\n                          </tr>\n                  </table>\n              </td>\n          </tr>\n      </table>\n      \x3c!--/100% body table--\x3e`};return p.send(m),!0}))}changeRoleMember(e,t,i){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(t).exec();if(!i)throw new r.HttpException(400,"Project is not exist");if(!(yield d.UserSchema.findOne({email:e.email}).exec()))throw new r.HttpException(400,"User is not exist");const s=yield a.MantisSchema.findById(i.mantis).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");if(s.members&&-1==s.members.findIndex((t=>t.email.toString()==e.email)))throw new r.HttpException(400,"user not exist in mantis");if(!(yield d.UserSchema.updateOne({email:e.email,"mantis._id":s._id},{$set:{"mantis.$.role":e.role}}).exec()))throw new r.HttpException(400,"Update role is not success");if(!(yield a.MantisSchema.updateOne({_id:i.mantis,"members.email":e.email},{$set:{"members.$.role_mantis":e.role}}).exec()))throw new r.HttpException(400,"Update role is not success");return!0}))}removeMemberOfMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield d.UserSchema.findOne({email:e.email}).populate({path:"mantis"}).exec();if(!i)throw new r.HttpException(400,"User is not exist");const s=yield d.UserSchema.findById(t).exec();if(!s)throw new r.HttpException(400,"Admin is not exist");const n=yield c.ProjectSchema.findById(e.projectid).exec();if(!n)throw new r.HttpException(400,"Project is not exist");const o=yield a.MantisSchema.findById(n.mantis).populate({path:"members"}).exec();if(!o)throw new r.HttpException(400,"Mantis is not exist");if(o.members&&o.members.some((t=>t.email.toString()===e.email.toString()&&"administrator"===t.role_mantis.toString())))throw new r.HttpException(400,"you can not remove Project Manager");if(o.members&&o.members.some((e=>e.email.toString()===s.email.toString()&&"administrator"===e.role_mantis.toString()))&&i._id.toString()==t.toString()&&1==o.members.filter((({role_mantis:e})=>"administrator"==(null==e?void 0:e.toString()))).length)throw new r.HttpException(400,"This mantis have been only one administrator");if(o.members&&-1==o.members.findIndex((e=>e._id.toString()===t)))throw new r.HttpException(400,"You has not yet been member of this mantis");if(1==o.members.length)throw new r.HttpException(400,"You are last member of this mantis. Cannot delete");const l=o.members;let p="",h="";for(let e of l)e._id==t&&(p=e.token_mantis),e._id==i._id.toString()&&(h=e.usermantis_id);let f={method:"delete",url:o.url+"/api/rest/users/"+h,headers:{Authorization:p}};return u.default(f).then((function(e){console.log("success")})).catch((function(e){console.log("error")})),o.members=o.members.filter((({_id:e})=>e.toString()!==i._id.toString())),yield o.save(),i.mantis=i.mantis.filter((({_id:e})=>e.toString()!==o._id.toString())),yield i.save(),!0}))}changeToken(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield c.ProjectSchema.findById(t).exec();if(!s)throw new r.HttpException(400,"Project is not exist");if(!(yield d.UserSchema.findById(i).exec()))throw new r.HttpException(400,"User is not exist");const n=yield a.MantisSchema.findById(s.mantis).exec();if(!n)throw new r.HttpException(400,"Mantis is not exist");if(n.members&&-1==n.members.findIndex((e=>e._id.toString()==i)))throw new r.HttpException(400,"user not exist in mantis");if(!(yield a.MantisSchema.updateOne({_id:s.mantis,"members._id":i},{$set:{"members.$.token_mantis":e.token,"members.$.is_active_backend":!0}}).exec()))throw new r.HttpException(400,"Update role is not success");return!0}))}getAllIssueOfMantis(e,t,i,o){var l,p;return s(this,void 0,void 0,(function*(){if(!(yield d.UserSchema.findById(e).select("-password").exec()))throw new r.HttpException(400,"User id is not exist");const i=yield c.ProjectSchema.findById(t).exec();if(!i)throw new r.HttpException(400,"User id is not exist");const s=yield a.MantisSchema.findById(i.mantis).populate({path:"members"}).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");const o=s.members;let h="";for(let t of o)t._id==e&&(h=t.token_mantis);let f=[{summary:{type:String},description:{type:String},category:{type:String},reporter:{type:String},created_date:{type:Date},url:{type:String},id:{type:String}}];f.pop();let m=1;try{m=(yield u.default.get(s.url+"/api/rest/issues?project_id="+s.project_id_mantis,{headers:{Authorization:h,"content-type":"application/json"}})).data.issues}catch(e){throw new r.HttpException(400,"list issue empty or project mantis was not existed")}if(0==m.length)return f;try{for(var y,_=n(m);!(y=yield _.next()).done;){let e=y.value;f.push({summary:e.summary,description:e.description,category:e.category.name,reporter:e.reporter.real_name,created_date:e.created_at,url:s.url+"/view.php?id="+e.id,id:e.id.toString()})}}catch(e){l={error:e}}finally{try{y&&!y.done&&(p=_.return)&&(yield p.call(_))}finally{if(l)throw l.error}}return f}))}createIssue(e,t,i){var n;return s(this,void 0,void 0,(function*(){if(!(yield d.UserSchema.findById(e).select("-password").exec()))throw new r.HttpException(400,"User id is not exist");const s=yield c.ProjectSchema.findById(t).exec();if(!s)throw new r.HttpException(400,"User id is not exist");const o=yield a.MantisSchema.findById(s.mantis).populate({path:"members"}).exec();if(!o)throw new r.HttpException(400,"Mantis is not exist");const p=yield l.TestExecutionSchema.findById(i.testexecution_id).exec();if(!p)throw new r.HttpException(400,"testexecution id is not exist");const h=o.members;let f="";for(let t of h)t._id==e&&(f=t.token_mantis);let m={summary:i.summary,description:i.description,project:{name:o.mantisname},category:{name:i.category},files:i.attachment};try{const e=yield u.default.post(o.url+"/api/rest/issues",m,{headers:{Authorization:f,"content-type":"application/json"}}),t=yield e.data.issue;return yield p.issue.unshift({issue_id:null===(n=t.id)||void 0===n?void 0:n.toString(),url:o.url+"/view.php?id="+t.id}),yield p.save(),t}catch(e){throw new r.HttpException(400,"Create issue is not success")}return!0}))}getInformationOfMantis(e){return s(this,void 0,void 0,(function*(){const t=yield c.ProjectSchema.findById(e).exec();if(!t)throw new r.HttpException(400,"Project is not exist");const i=yield a.MantisSchema.findById(t.mantis,"mantisname url").exec();if(!i)throw new r.HttpException(400,"Mantis is not exist");return i}))}getAllCategoryOfMantis(e,t){return s(this,void 0,void 0,(function*(){if(!(yield d.UserSchema.findById(e).select("-password").exec()))throw new r.HttpException(400,"User id is not exist");const i=yield c.ProjectSchema.findById(t).exec();if(!i)throw new r.HttpException(400,"Project is not exist");const s=yield a.MantisSchema.findById(i.mantis).populate({path:"members"}).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");const n=s.members;let o="";for(let t of n)t._id==e&&(o=t.token_mantis);let l=[];try{const e=yield u.default.get(s.url+"/api/rest/projects/"+s.project_id_mantis,{headers:{Authorization:o,"content-type":"application/json"}});l=yield e.data.projects[0].categories}catch(e){throw new r.HttpException(400,"Get list category error")}let p=[{categoryname:{type:String},created_date:{type:String}}];p.pop();for(let e of l)p.push({categoryname:e.name,created_date:s.created_date});return p}))}getAllProjectOfMantis(e,t){return s(this,void 0,void 0,(function*(){if(!(yield d.UserSchema.findById(e).select("-password").exec()))throw new r.HttpException(400,"User id is not exist");const i=yield c.ProjectSchema.findById(t).exec();if(!i)throw new r.HttpException(400,"User id is not exist");const s=yield a.MantisSchema.findById(i.mantis).populate({path:"members"}).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");const n=s.members;let o="";for(let t of n)t._id==e&&(o=t.token_mantis);let l=[];try{const e=yield u.default.get(s.url+"/api/rest/projects",{headers:{Authorization:o,"content-type":"application/json"}});l=yield e.data.projects}catch(e){throw new r.HttpException(400,"Get list project error")}let p=[{_id:{type:String},mantisname:{type:String}}];p.pop();for(let e of l)p.push({_id:e.id,mantisname:e.name});return p}))}getAllMantisOfProject(e){return s(this,void 0,void 0,(function*(){const t=yield a.MantisSchema.find({project:e},"mantisname url").exec();if(!t)throw new r.HttpException(400,"Project Id is not exist");return t}))}deleteMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new r.HttpException(400,"Project is not exist");const s=yield d.UserSchema.findById(t).select("-password").exec();if(!s)throw new r.HttpException(400,"User id is not exist");const n=yield a.MantisSchema.findById(i.mantis).exec();if(!n)throw new r.HttpException(400,"Mantis id is not exist");if(s.mantis=s.mantis.filter((({_id:e})=>{var t;return(null==e?void 0:e.toString())!==(null===(t=n._id)||void 0===t?void 0:t.toString())})),yield s.save(),!(yield a.MantisSchema.findOneAndDelete({_id:n._id}).exec()))throw new r.HttpException(400,"Delete Mantis is not success");return!0}))}removeCategoryOfMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(t).exec();if(!i)throw new r.HttpException(400,"Project is not exist");const s=yield a.MantisSchema.findById(i.mantis).populate({path:"categories"}).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");if(1==s.categories.length)throw new r.HttpException(400,"You are last category of this mantis. Cannot delete");return s.categories=s.categories.filter((({categoryname:t})=>t.toString()!==e.category_name.toString())),yield s.save(),!0}))}addCategoryToMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new r.HttpException(400,"Project is not exist");const s=yield a.MantisSchema.findById(i.mantis).populate({path:"members"}).exec();if(!s)throw new r.HttpException(400,"Mantis is not exist");try{s.categories.unshift({categoryname:t.category_name,created_date:Date.now()}),yield s.save()}catch(e){throw new r.HttpException(400,"Can not get list issue")}return!0}))}updateNameProjectMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new r.HttpException(400,"Project is not exist");const s=yield a.MantisSchema.findOneAndUpdate({_id:i.mantis},{$set:{mantisname:t}},{new:!0}).exec();if(!s)throw new r.HttpException(400,"Update project name of mantis is not success");return s}))}updateInformationMantis(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new r.HttpException(400,"Project is not exist");const s=yield a.MantisSchema.findOneAndUpdate({_id:i.mantis},{$set:{url:t.url,mantisname:t.project_name}},{new:!0}).exec();if(!s)throw new r.HttpException(400,"Update mantis is not success");return s}))}}},5322:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n){this.milestonetitle=e,this.description=t,this.start_date=s,this.end_date=i,this.is_completed=n}}s([n.IsNotEmpty()],o.prototype,"milestonetitle",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsDateString()],o.prototype,"start_date",void 0),s([n.IsDateString()],o.prototype,"end_date",void 0),s([n.IsNotEmpty()],o.prototype,"is_completed",void 0),t.default=o},4206:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MilestoneRoute=t.MilestoneSchema=void 0;const n=s(i(8340));t.MilestoneSchema=n.default;const o=s(i(5392));t.MilestoneRoute=o.default},1029:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(3449));t.default=class{constructor(){this.milestoneService=new o.default,this.CreateMilestoneAndAddProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.milestoneService.createMilestoneAndAddProject(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.AddMilestoneForTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testplan_id,s=e.params.milestone_id,n=yield this.milestoneService.addMilestoneForTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.CreateMilestoneAndAddTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_Id,n=e.body,o=yield this.milestoneService.createMilestoneAndAddTestPlan(n,i,s);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetAllMilestoneOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.milestoneService.getAllMilestoneOfProject(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.SearchMilestoneOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.milestoneService.searchMilestoneOfProject(e.params.project_id,e.body.keyword);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetAllMilestoneOfTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.milestoneService.getAllMilestoneOfTestPlan(e.params.testplan_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetMilestoneById=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.milestoneService.getMilestoneById(e.params.milestone_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.UpdateMilestone=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.milestone_id,n=e.params.project_id,o=yield this.milestoneService.updateMilestone(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.RemoveMilestoneFromTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testplan_id,s=e.params.milestone_id,n=yield this.milestoneService.removeMilestoneFromTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.RemoveAndDeleteMilestoneFromProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.milestone_id,n=yield this.milestoneService.removeAndDeleteMilestoneFromProject(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.RemoveAndDeleteMilestoneFromTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_id,n=e.params.milestone_id,o=yield this.milestoneService.removeAndDeleteMilestoneFromTestPlan(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}}))}}},8340:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({milestone_id:{type:String},milestonetitle:{type:String},description:{type:String},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},start_date:{type:Date,default:Date.now},end_date:{type:Date,default:Date.now},is_completed:{type:Boolean,default:!1},created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("milestone",o)},5392:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(5322)),a=s(i(1029));t.default=class{constructor(){this.path="/:project_id",this.router=o.Router(),this.milestoneController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/createmilestone",n.authMiddleware,n.validationMiddleware(r.default,!0),this.milestoneController.CreateMilestoneAndAddProject),this.router.put(this.path+"/:testplan_id/:milestone_id",n.authMiddleware,this.milestoneController.AddMilestoneForTestPlan),this.router.post(this.path+"/:testplan_Id",n.authMiddleware,n.validationMiddleware(r.default,!0),this.milestoneController.CreateMilestoneAndAddTestPlan),this.router.post(this.path+"/api/searchmilestone",n.authMiddleware,this.milestoneController.SearchMilestoneOfProject),this.router.get(this.path+"/getallmilestoneofproject",n.authMiddleware,this.milestoneController.GetAllMilestoneOfProject),this.router.get(this.path+"/:testplan_id",n.authMiddleware,this.milestoneController.GetAllMilestoneOfTestPlan),this.router.get(this.path+"/:milestone_id/getbyid",n.authMiddleware,this.milestoneController.GetMilestoneById),this.router.put(this.path+"/:milestone_id/api/updatemilestone",n.authMiddleware,n.validationMiddleware(r.default,!0),this.milestoneController.UpdateMilestone),this.router.delete(this.path+"/:testplan_id/:milestone_id",n.authMiddleware,this.milestoneController.RemoveMilestoneFromTestPlan),this.router.delete(this.path+"/:milestone_id/api/removeanddeletefromproject",n.authMiddleware,this.milestoneController.RemoveAndDeleteMilestoneFromProject),this.router.delete(this.path+"/:testplan_id/:milestone_id/removeanddelete",n.authMiddleware,this.milestoneController.RemoveAndDeleteMilestoneFromTestPlan)}}},3449:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(5729),o=i(4206),r=i(9435),a=i(5937);t.default=class{constructor(){this.milestoneSchema=o.MilestoneSchema}createMilestoneAndAddProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t).exec();if(!i)throw new n.HttpException(400,"Project is not exist");if(i.milestone&&i.milestone.some((t=>t.milestonename===e.milestonetitle)))throw new n.HttpException(400,"Name milestone existed in project");if(Date.parse(e.start_date.toString())>Date.parse(e.end_date.toString())+6e6)throw new n.HttpException(400,"Start Date can not more than End Date");const s=new o.MilestoneSchema(Object.assign(Object.assign({},e),{project:t}));return yield s.save(),i.milestone.unshift({milestoneid:s._id,milestonename:s.milestonetitle}),yield i.save(),yield i.save(),i}))}addMilestoneForTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=yield a.TestPlanSchema.findById(e).exec();if(!i)throw new n.HttpException(400,"TestPlan is not exist");const s=yield o.MilestoneSchema.findById(t).exec();if(!s)throw new n.HttpException(400,"Milestone is not exist");if(i.milestone&&i.milestone.some((e=>e._id.toString()===t)))throw new n.HttpException(400,"This milestone has already been in testplan");return yield a.TestPlanSchema.findByIdAndUpdate(e,{$push:{milestone:s._id}},{new:!0,useFindAndModify:!1}),yield i.save(),i}))}createMilestoneAndAddTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(t).exec();if(!s)throw new n.HttpException(400,"Project is not exist");const c=yield a.TestPlanSchema.findById(i).exec();if(!c)throw new n.HttpException(400,"TestPlan is not exist");if(yield o.MilestoneSchema.findOne({name:e.milestonetitle,project:t}).exec())throw new n.HttpException(400,"Name Milestone existed");const d=new o.MilestoneSchema(Object.assign(Object.assign({},e),{project:t})),u=yield d.save();return yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{milestone:u._id}},{new:!0,useFindAndModify:!1}),yield s.save(),yield a.TestPlanSchema.findByIdAndUpdate(i,{$push:{milestone:u._id}},{new:!0,useFindAndModify:!1}),yield c.save(),c}))}getAllMilestoneOfProject(e){return s(this,void 0,void 0,(function*(){const t=yield r.ProjectSchema.findById(e).exec();if(!t)throw new n.HttpException(400,"Project id is not exist");const i=t.milestone.map((e=>e.milestoneid));return o.MilestoneSchema.find({_id:i},"milestonetitle description start_date end_date is_completed").sort({start_date:"asc"}).exec()}))}searchMilestoneOfProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new n.HttpException(400,"Project id is not exist");const s=i.milestone.map((e=>e.milestoneid));return o.MilestoneSchema.find({_id:s,milestonetitle:new RegExp(t,"i")},"milestonetitle description start_date end_date is_completed").exec()}))}getAllMilestoneOfTestPlan(e){return s(this,void 0,void 0,(function*(){const t=a.TestPlanSchema.find({_id:e}).populate("milestone",["name","start_date","target_date"]).exec();if(!t)throw new n.HttpException(400,"Testplan id is not exist");return t}))}getMilestoneById(e){return s(this,void 0,void 0,(function*(){const t=yield this.milestoneSchema.findById(e).exec();if(!t)throw new n.HttpException(404,"Milestone is not exists");return t}))}updateMilestone(e,t,i){return s(this,void 0,void 0,(function*(){const i=yield o.MilestoneSchema.findById(t).exec();if(!i)throw new n.HttpException(400,"Milestone id is not exist");if(Date.parse(e.start_date.toString())>Date.parse(e.end_date.toString())+1e4)throw new n.HttpException(400,"Start Date can not more than End Date");const s=yield o.MilestoneSchema.find({milestonetitle:e.milestonetitle}).exec();if(s.length>1)throw new n.HttpException(400,"Name Milestone existed");if(0==s.length);else if(s[0].milestonetitle!==i.milestonetitle)throw new n.HttpException(400,"Name Milestone existed");const r=yield o.MilestoneSchema.findOneAndUpdate({_id:t},{$set:{milestonetitle:e.milestonetitle,description:e.description,start_date:e.start_date,is_completed:e.is_completed,end_date:e.end_date,updated_date:Date.now()}},{new:!0}).exec();if(!r)throw new n.HttpException(400,"Update Milestone is not success");return r}))}removeMilestoneFromTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=yield a.TestPlanSchema.findById(e).exec();if(!i)throw new n.HttpException(400,"TestPlan id is not exist");if(!(yield o.MilestoneSchema.findById(t).exec()))throw new n.HttpException(400,"Milestone id is not exist");if(i.milestone&&-1==i.milestone.findIndex((e=>e._id.toString()===t)))throw new n.HttpException(400,"You has not yet been milestone of this testplan");return i.milestone=i.milestone.filter((({_id:e})=>e.toString()!==t)),yield i.save(),i}))}removeAndDeleteMilestoneFromProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new n.HttpException(400,"Project id is not exist");if(!(yield o.MilestoneSchema.findById(t).exec()))throw new n.HttpException(400,"Milestone is not exist");if(i.milestone&&-1==i.milestone.findIndex((e=>e.milestoneid.toString()===t)))throw new n.HttpException(400,"You has not yet been milestone of this project");if(i.milestone=i.milestone.filter((({milestoneid:e})=>e.toString()!==t)),yield i.save(),!(yield o.MilestoneSchema.findOneAndDelete({_id:t}).exec()))throw new n.HttpException(400,"Delete Milestone is not success");return i}))}removeAndDeleteMilestoneFromTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(e).exec();if(!s)throw new n.HttpException(400,"Project id is not exist");const c=yield a.TestPlanSchema.findById(t).exec();if(!c)throw new n.HttpException(400,"TestPlan id is not exist");if(!(yield o.MilestoneSchema.findById(i).exec()))throw new n.HttpException(400,"Milestone id is not exist");if(s.milestone&&-1==s.milestone.findIndex((e=>e.milestoneid.toString()===i)))throw new n.HttpException(400,"You has not yet been milestone of this project");if(s.milestone=s.milestone.filter((({milestoneid:e})=>e.toString()!==i)),yield s.save(),c.milestone&&-1==c.milestone.findIndex((e=>e._id.toString()===i)))throw new n.HttpException(400,"You has not yet been milestone of this testplan");if(c.milestone=c.milestone.filter((({_id:e})=>e.toString()!==i)),yield c.save(),!(yield o.MilestoneSchema.findOneAndDelete({_id:i}).exec()))throw new n.HttpException(400,"Delete Milestone is not success");return c}))}}},2897:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.description=e,this.is_read=t,this.url=i,this.user=s}}s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"is_read",void 0),s([n.IsNotEmpty()],o.prototype,"url",void 0),s([n.IsNotEmpty()],o.prototype,"user",void 0),t.default=o},484:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.NotificationRoute=t.NotificationSchema=void 0;const n=s(i(5216));t.NotificationSchema=n.default;const o=s(i(3496));t.NotificationRoute=o.default},4980:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(8528));t.default=class{constructor(){this.notificationService=new o.default,this.CreateNotification=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.notificationService.createNotification(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.GetAllNotificationOfUser=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.notificationService.getAllNotificationOfUser(e.user.id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.UpdateNotification=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.notificationService.updateNotification(i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}}))}}},5216:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({description:{type:String},is_read:{type:Boolean,default:!1},url:{type:String},user:{type:n.default.Schema.Types.ObjectId,ref:"user"},created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now}});t.default=n.default.model("notification",o)},3496:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(2897)),a=s(i(4980));t.default=class{constructor(){this.path="",this.router=o.Router(),this.notificationController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/createnotification",n.authMiddleware,n.validationMiddleware(r.default,!0),this.notificationController.CreateNotification),this.router.get(this.path+"/api/v1/getallnotificationofuser",n.authMiddleware,this.notificationController.GetAllNotificationOfUser),this.router.put(this.path+"/api/updatenotification",n.authMiddleware,this.notificationController.UpdateNotification)}}},8528:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const n=i(5729),o=i(484);t.default=class{constructor(){this.notificationSchema=o.NotificationSchema}createNotification(e,t){return s(this,void 0,void 0,(function*(){const i=new o.NotificationSchema(Object.assign(Object.assign({},e),{project:t}));return yield i.save(),i}))}getAllNotificationOfUser(e){return s(this,void 0,void 0,(function*(){return yield this.notificationSchema.find({user:e},"description created_date is_read url").sort({created_date:"desc"}).exec()}))}updateNotification(e){return s(this,void 0,void 0,(function*(){const t=yield this.notificationSchema.findOneAndUpdate({_id:e.id},{$set:{is_read:!0}},{new:!0}).exec();if(!t)throw new n.HttpException(400,"Update Notification is not success");return t}))}}},3094:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n,o){this.buildname=e,this.description=t,this.isActive=i,this.isPublic=s,this.releasedate=n,this.testplanname=o}}s([n.IsNotEmpty()],o.prototype,"buildname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"isActive",void 0),s([n.IsNotEmpty()],o.prototype,"isPublic",void 0),s([n.IsNotEmpty()],o.prototype,"releasedate",void 0),s([n.IsNotEmpty()],o.prototype,"testplanname",void 0),t.default=o},2641:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(7074));t.default=class{constructor(){this.profileService=new o.default,this.createProfile=(e,t,i)=>s(this,void 0,void 0,(function*(){const s=e.body,n=e.user.id;try{const e=yield this.profileService.createProfile(n,s);t.status(201).json({status:201,success:!0,result:e,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}}))}}},4202:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({user:{type:n.default.Schema.Types.ObjectId,ref:"user"},fullname:{type:String},email:{type:String},introduction:{type:String},phonenumber:{type:String},created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("profile",o)},4731:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=s(i(3094)),r=s(i(2641)),a=i(2127);t.default=class{constructor(){this.path="/profile",this.router=a.Router(),this.profileController=new r.default,this.initializeRoutes()}initializeRoutes(){this.router.post(`${this.path}`,n.authMiddleware,n.validationMiddleware(o.default),this.profileController.createProfile)}}},7074:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(4202));t.default=class{createProfile(e,t){return s(this,void 0,void 0,(function*(){const e=new o.default(Object.assign({},t));return yield e.save()}))}}},9587:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t){this.role=e,this.userid=t}}s([n.IsNotEmpty()],o.prototype,"role",void 0),s([n.IsNotEmpty()],o.prototype,"userid",void 0),t.default=o},1058:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.projectname=e,this.description=t,this.is_public=i,this.active=s}}s([n.IsNotEmpty()],o.prototype,"projectname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"is_public",void 0),s([n.IsNotEmpty()],o.prototype,"active",void 0),t.default=o},7768:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{}},3548:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n){this.projectname=e,this.description=t,this.status=i,this.is_public=s,this.active=n}}s([n.IsNotEmpty()],o.prototype,"projectname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"status",void 0),s([n.IsNotEmpty()],o.prototype,"is_public",void 0),s([n.IsNotEmpty()],o.prototype,"active",void 0),t.default=o},9435:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectSchema=t.ProjectRoute=void 0;const n=s(i(442));t.ProjectSchema=n.default;const o=s(i(9254));t.ProjectRoute=o.default},8202:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(4802)),r=i(2333),a=i(5729);t.default=class{constructor(){this.projectService=new o.default,this.CreateProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.projectService.createProject(e.user.id,i),t.status(201).json({status:201,success:!0,result:"success",errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetAllMembers=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=yield this.projectService.getAllMembers(i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetAllProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const e=yield this.projectService.getAllProject();t.status(200).json({status:200,success:!0,result:e,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetAllProjectByCreatedUser=(e,t,i)=>s(this,void 0,void 0,(function*(){try{e.body;const i=yield this.projectService.getAllProjectByCreatedUser(e.user.id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetRoleUserJoin=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.projectService.getRoleUserJoin(e.user.id),s=yield r.UserSchema.findById(e.user.id,"inproject").exec();if(!s)throw new a.HttpException(400,"User id is not exist");let n=[{_id:{type:String},projectname:{type:String},description:{type:String},status:{type:String},role:{type:String}}];n.pop(),n=s.inproject.filter((e=>!0));let o=[{_id:{type:String},projectname:{type:String},description:{type:String},status:{type:String},role:{type:String}}];o.pop();for(let e in i)o.push({_id:i[e]._id,projectname:i[e].projectname,description:i[e].description,status:i[e].status,role:"tester"});for(let e in o)for(let t in n)o[e]._id.toString()==n[t]._id.toString()&&(o[e].role=n[t].role);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.GetAllProjectByUserJoin=(e,t,i)=>s(this,void 0,void 0,(function*(){try{e.body;const i=yield this.projectService.getAllProjectByUserJoin(e.user.id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetProjectById=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.projectService.getProjectById(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.UpdateProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.project_id,n=yield this.projectService.updateProject(s,i,e.user.id);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.ChangeRoleMember=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.project_id,n=yield this.projectService.changeRoleMember(i,s,e.user.id);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.DeleteProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=yield this.projectService.deleteProject(i,e.user.id);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.MailInviteMember=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.projectService.mailInviteMember(s,i,e.user.id);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.VerifyMember=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.projectService.verifyMember(s,"Tester",i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.RemoveMember=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.user_id,n=yield this.projectService.removeMember(i,s,e.user.id);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.calEffortOverview=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=yield this.projectService.calEffortOverview(i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.DataOverview=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=yield this.projectService.dataOverview(i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.NumberOfExecuteInEachMonth=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=yield this.projectService.numberOfExecuteInEachMonth(i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}}))}}},442:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({projectname:{type:String,required:!0},description:{type:String},status:{type:String,default:"In progress"},active:{type:Boolean},is_public:{type:Boolean},mantis:{type:String},members:[{user:{type:n.default.Schema.Types.ObjectId,ref:"user"},username:{type:String},fullname:{type:String},email:{type:String},role:{type:String,enum:["Project Manager","Tester","Test Lead","Guest"],default:"Tester"},date:{type:Date,default:Date.now}}],projectrequirement:[{type:n.default.Schema.Types.ObjectId,ref:"projectrequirement"}],testplan:[{type:n.default.Schema.Types.ObjectId,ref:"testplan"}],build:[{type:n.default.Schema.Types.ObjectId,ref:"build"}],milestone:[{milestoneid:{type:n.default.Schema.Types.ObjectId,ref:"milestone"},milestonename:{type:String}}],testsuite:[{type:n.default.Schema.Types.ObjectId,ref:"testsuite"}],testcase:[{type:n.default.Schema.Types.ObjectId,ref:"testcase"}],testexecution:[{type:n.default.Schema.Types.ObjectId,ref:"testexecution"}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("project",o)},9254:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(9587)),a=s(i(1058)),c=s(i(7768)),d=s(i(3548)),u=s(i(8202));t.default=class{constructor(){this.path="/project",this.router=o.Router(),this.projectController=new u.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/createproject",n.authMiddleware,n.validationMiddleware(a.default),this.projectController.CreateProject),this.router.get(this.path+"/allproject",this.projectController.GetAllProject),this.router.get(this.path+"/myproject",n.authMiddleware,this.projectController.GetAllProjectByCreatedUser),this.router.get(this.path+"/api/inproject",n.authMiddleware,this.projectController.GetAllProjectByUserJoin),this.router.get(this.path+"/inproject",n.authMiddleware,this.projectController.GetRoleUserJoin),this.router.get(this.path+"/members/:project_id",this.projectController.GetAllMembers),this.router.get(this.path+"/getprojectbyid/:project_id",n.authMiddleware,this.projectController.GetProjectById),this.router.get(this.path+"/getnameproject/:project_id",n.resetMiddleware,this.projectController.GetProjectById),this.router.put(this.path+"/updateproject/:project_id",n.authMiddleware,n.isProjectManagerMiddleware,n.validationMiddleware(d.default),this.projectController.UpdateProject),this.router.put(this.path+"/changerole/:project_id",n.authMiddleware,n.validationMiddleware(r.default),this.projectController.ChangeRoleMember),this.router.delete(this.path+"/deleteproject/:project_id",n.authMiddleware,n.isProjectManagerMiddleware,this.projectController.DeleteProject),this.router.post(this.path+"/members/:project_id",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(c.default),this.projectController.MailInviteMember),this.router.post(this.path+"/members/verifymember/:project_id",n.resetMiddleware,this.projectController.VerifyMember),this.router.delete(this.path+"/members/:project_id/:user_id",n.authMiddleware,n.notAllowTesterMiddleware,this.projectController.RemoveMember),this.router.get(this.path+"/:project_id/caleffortoverview",n.authMiddleware,this.projectController.calEffortOverview),this.router.get(this.path+"/:project_id/dataoverview",n.authMiddleware,this.projectController.DataOverview),this.router.get(this.path+"/:project_id/numberofexecuteineachmonth",n.authMiddleware,this.projectController.NumberOfExecuteInEachMonth)}}},4802:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=n(i(442)),a=i(2333),c=i(5937),d=i(6968),u=i(4206),l=i(8620),p=i(6270),h=i(9664),f=n(i(9722)),m=i(5511);m.setApiKey(process.env.SENDGRID_API_KEY),i(8123),t.default=class{constructor(){this.projectSchema=r.default}createProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield a.UserSchema.findById(e).select("-password").exec();if(!i)throw new o.HttpException(400,"User id is not exist");if(yield r.default.findOne({projectname:t.projectname,created_user:e}).exec())throw new o.HttpException(400,"Name Project existed");const s=new r.default(Object.assign(Object.assign({},t),{created_user:e,updated_user:e,created_date:Date.now(),updated_date:Date.now()})),n=yield s.save(),c=yield r.default.findById(n._id).exec();if(!c)throw new o.HttpException(400,"Project is not exist");return yield a.UserSchema.findByIdAndUpdate(e,{$push:{myproject:n._id}},{new:!0,useFindAndModify:!1}),i.inproject.unshift({_id:n._id,projectname:n.projectname,role:"Project Manager",description:n.description,status:n.status}),yield i.save(),c.members.unshift({user:i._id,fullname:i.fullname,username:i.username,email:i.email,role:"Project Manager"}),yield c.save(),!0}))}getAllProjectByCreatedUser(e){return s(this,void 0,void 0,(function*(){return r.default.find({created_user:e},"projectname description status").exec()}))}getProjectById(e){return s(this,void 0,void 0,(function*(){return r.default.findById(e,"projectname active is_public status description").exec()}))}getAllProjectByUserJoin(e){return s(this,void 0,void 0,(function*(){const t=yield a.UserSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"User id is not exist");const i=t.inproject.map((e=>e._id));return r.default.find({_id:i},"projectname description status").exec()}))}getAllProject(){return s(this,void 0,void 0,(function*(){return r.default.find().exec()}))}getAllMembers(e){return s(this,void 0,void 0,(function*(){const t=yield r.default.find({_id:e},"members").populate({path:"members",select:"user username email role"}).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");return t}))}getRoleUserJoin(e){return s(this,void 0,void 0,(function*(){const t=yield a.UserSchema.findById(e,"inproject -_id").exec();if(!t)throw new o.HttpException(400,"User id is not exist");const i=t.inproject.map((e=>e._id));return r.default.find({_id:i},"projectname description status").exec()}))}updateProject(e,t,i){return s(this,void 0,void 0,(function*(){if(!(yield r.default.findById(e).exec()))throw new o.HttpException(400,"Project id is not exist");if((yield r.default.find({name:t.projectname}).exec()).length>0)throw new o.HttpException(400,"Name existed");const s=yield r.default.findOneAndUpdate({_id:e},{$set:{projectname:t.projectname,description:t.description,status:t.status,active:t.active,is_public:t.is_public,updated_date:Date.now(),updated_user:i}},{new:!0}).exec();if(!s)throw new o.HttpException(400,"Update is not success");if(!(yield a.UserSchema.updateOne({_id:i,"inproject._id":e},{$set:{"inproject.$.projectname":t.projectname,"inproject.$.description":t.description,"inproject.$.status":t.status}}).exec()))throw new o.HttpException(400,"Update Project is not success");return s}))}deleteProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.default.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=yield a.UserSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"user is not exist");if(void 0!==i.testcase||i.testcase>0){if(!(yield p.TestCaseSchema.deleteMany({_id:[...i.testcase]}).exec()).ok)throw new o.HttpException(409,"List testcase is invalid");i.testcase=i.testcase.filter((e=>!i.testcase.includes(e)))}if(void 0!==i.testsuite||i.testsuite>0){if(!(yield l.TestSuiteSchema.deleteMany({_id:[...i.testsuite]}).exec()).ok)throw new o.HttpException(409,"List Testsuite is invalid");i.testsuite=i.testsuite.filter((e=>!i.testsuite.includes(e)))}if(void 0!==i.testexecution||i.testexecution>0){if(!(yield h.TestExecutionSchema.deleteMany({_id:[...i.testexecution]}).exec()).ok)throw new o.HttpException(409,"List execution is invalid");i.testexecution=i.testexecution.filter((e=>!i.testexecution.includes(e)))}if(void 0!==i.build||i.build>0){if(!(yield d.BuildSchema.deleteMany({_id:[...i.build]}).exec()).ok)throw new o.HttpException(409,"List Build is invalid");i.build=i.build.filter((e=>!i.build.includes(e)))}if(void 0!==i.milestone||i.milestone>0){const e=i.milestone.map((e=>e.milestoneid));if(null!=e){if(!(yield u.MilestoneSchema.deleteMany({_id:[...e]}).exec()).ok)throw new o.HttpException(409,"List Milestone is invalid");i.milestone=i.milestone.filter((e=>!i.milestone.includes(e)))}}if(void 0!==i.testplan||i.testplan>0){if(!(yield c.TestPlanSchema.deleteMany({_id:[...i.testplan]}).exec()).ok)throw new o.HttpException(409,"List testplan is invalid");i.testplan=i.testplan.filter((e=>!i.testplan.includes(e)))}if(s.inproject&&-1==s.inproject.findIndex((t=>t._id.toString()===e)))throw new o.HttpException(400,"You has not yet been project of this user");s.inproject=s.inproject.filter((({_id:t})=>t.toString()!==e)),yield s.save();const n=yield r.default.findOneAndDelete({_id:e}).exec();if(!n)throw new o.HttpException(400,"Delete project is not success");return n}))}mailInviteMember(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield a.UserSchema.findOne({email:e.email}).exec();if(!s)throw new o.HttpException(409,"Your email is invalid");const n=yield a.UserSchema.findOne({_id:i}).exec();if(!n)throw new o.HttpException(409,"User invite is invalid");const c=yield r.default.findOne({_id:t}).exec();if(!c)throw new o.HttpException(409,"Project is not exist");const d=process.env.JWT_TOKEN_FORGOTPASSWORD,u=f.default.sign({_id:s._id},d,{expiresIn:"4320m"});let l=`https://testcontrols.herokuapp.com/auth/verify-member/${e.email}/${t}/${u}`;const p={to:e.email,from:"hung08596@gmail.com",subject:"Invite to Project",text:"Invite to Project",html:`\n      <title>Reset Password Email Template</title>\n    <meta name="description" content="Reset Password Email Template.">\n    \x3c!-- <style type="text/css">\n        a:hover {text-decoration: underline !important;}\n    </style> --\x3e\n</head>\n\n<body>\n    \x3c!--100% body table--\x3e\n    <table cellspacing="0" border="0" cellpadding="0" width="100%">\n        <tr>\n            <td>\n                <table style="max-width:670px;  margin:0 auto;" width="100%" border="0"\n                    align="center" cellpadding="0" cellspacing="0">\n                   \n                    <tr>\n                        <td>\n                            <table width="95%" border="0" align="center" cellpadding="0" cellspacing="0"\n                                style="max-width:670px;">\n                                <tr>\n                                    <td>                                        \n                                        <h1 style="color:#333;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-weight:300;\n                                        text-align:center;line-height:1.2;word-break:normal;font-size:24px;margin:10px 0 25px;padding:0">\n                                        <strong>${n.fullname}</strong> has invited you to <strong>${c.projectname}</strong> project\n                                        </h1>\n\n                                        <hr style="color:#d9d9d9;background-color:#d9d9d9;height:1px;margin:20px 0;border:none">\n                                        \n                                        <h2>Dear ${s.fullname},</h2>\n\n                                        <p>\n                                            ${n.fullname} invited you to ${c.projectname} to work on\n                                        </p>\n                                        <p>\n                                            You can \n                                            <a href=${l} target="_blank">accept or decline</a>\n                                            this invitation.\n                                        </p>\n                                        <p>\n                                            This invitation will expire in 3 days.\n                                        </p>\n\n                                        <div style="text-align: center">\n                                        <a href=${l}\n                                            style="background:#20e277;text-decoration:none !important; font-weight:500; margin-top:15px; color:#fff;\n                                            text-transform:uppercase; font-size:16px;padding:10px 24px;display:inline-block;border-radius:50px;">\n                                            View invitation\n                                        </a>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style="height:30px">\n                                        <p>\n                                             <strong>Note:</strong>\n                                             If you were not expecting this invitation, you can ignore this email.                                          \n                                        </p>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <tr>\n                            <td style="text-align:center;">\n                                <p>&copy; <strong>Test Control, 2021</strong></p>\n                            </td>\n                        </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n    \x3c!--/100% body table--\x3e\n</body>\n             `};return m.send(p),"Send mail successfully"}))}verifyMember(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield a.UserSchema.findOne({email:e.email}).exec();if(!s)throw new o.HttpException(400,"Email existed");const n=yield r.default.findById(i).exec();if(!n)throw new o.HttpException(400,"Project is not exist");if(n.members&&n.members.some((e=>e.email===s.email)))throw new o.HttpException(400,"This user has already been in project");n.members.unshift({user:s._id,username:s.username,fullname:s.fullname,email:s.email,role:t}),yield n.save();const c=yield a.UserSchema.findById(s._id).exec();if(!c)throw new o.HttpException(400,"User is not exist");return c.inproject.unshift({_id:n._id,projectname:n.projectname,role:t,description:n.description,status:n.status}),yield c.save(),n}))}removeMember(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.default.findById(e).exec();if(!s)throw new o.HttpException(400,"Project id is not exist");const n=yield a.UserSchema.findById(t).select("-password").exec();if(!n)throw new o.HttpException(400,"User id is not exist");if(s.members&&s.members.some((e=>e.user.toString()===i&&"Test Lead"===e.role.toString()))&&s.members&&s.members.some((e=>e.user.toString()===t&&"Project Manager"===e.role.toString())))throw new o.HttpException(400,"Test Lead can not remove Project Manager");if(s.members&&s.members.some((e=>e.user.toString()===i&&"Project Manager"===e.role.toString()))&&i.toString()==t.toString()&&1==s.members.filter((({role:e})=>"Project Manager"==(null==e?void 0:e.toString()))).length)throw new o.HttpException(400,"This project have been only one Project Manager");if(s.members&&-1==s.members.findIndex((e=>e.user.toString()===t)))throw new o.HttpException(400,"You has not yet been member of this group");if(1==s.members.length)throw new o.HttpException(400,"You are last member of this group. Cannot delete");return s.members=s.members.filter((({user:e})=>e.toString()!==t)),yield s.save(),n.inproject=n.inproject.filter((({_id:t})=>t.toString()!==e)),yield n.save(),s}))}changeRoleMember(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.default.findById(t).exec();if(!s)throw new o.HttpException(400,"Project is not exist");if(!(yield a.UserSchema.findById(e.userid).exec()))throw new o.HttpException(400,"User is not exist");if(s.members&&-1==s.members.findIndex((t=>t.user.toString()===e.userid)))throw new o.HttpException(400,"user not exist in project");if(s.members&&s.members.some((e=>e.user.toString()===i&&"Test Lead"===e.role.toString()))&&s.members&&s.members.some((t=>t.user.toString()===e.userid&&"Project Manager"===t.role.toString())))throw new o.HttpException(400,"Test Lead can not change role Project Manager");if("Project Manager"!=e.role&&e.userid==i&&1==s.members.filter((({role:e})=>"Project Manager"==(null==e?void 0:e.toString()))).length)throw new o.HttpException(400,"This project have been only one Project Manager");if(!(yield a.UserSchema.updateOne({_id:e.userid,"inproject._id":t},{$set:{"inproject.$.role":e.role}}).exec()))throw new o.HttpException(400,"Update role is not success");if(!(yield r.default.updateOne({_id:t,"members.user":e.userid},{$set:{"members.$.role":e.role}}).exec()))throw new o.HttpException(400,"Update role is not success");return s}))}calEffortOverview(e){return s(this,void 0,void 0,(function*(){const t=yield r.default.findById(e,"testexecution testplan members build").populate({path:"testexecution",select:"testexecutionname updated_user status"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");let i=[];for(let e of t.members)i.push(e.fullname);let s=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];s.pop();for(let e in t.testexecution)s.push({testexecutionname:t.testexecution[e].testexecutionname,tester:t.testexecution[e].updated_user,status:t.testexecution[e].status});let n=[],a=0;for(let e of t.members){for(let t of s)null!=e.user&&null!=t.tester&&e.user.toString()===t.tester.toString()&&("Pass"!==t.status&&"Block"!==t.status&&"Fail"!==t.status||(a+=1));n.push(a),a=0}let c={labels:"",data:""};return c={labels:i,data:n},c}))}dataOverview(e){return s(this,void 0,void 0,(function*(){const t=yield r.default.findById(e,"testexecution testplan members build").populate({path:"testexecution",select:"testexecutionname tester status updated_date"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");let i=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];i.pop();let s=[{testexecutionname:{type:String},tester:{type:String},status:{type:String},time:{type:String}}];s.pop();for(let e in t.testexecution)s.push({testexecutionname:t.testexecution[e].testexecutionname,tester:t.testexecution[e].tester,status:t.testexecution[e].status,time:t.testexecution[e].updated_date});let n=new Date;for(let e of s)n.getMonth()-e.time.getMonth()==0&&i.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status});let a=0,c=0,d=0,u=0,l=0;for(let e of i)"Pass"!==e.status&&"Block"!==e.status&&"Fail"!==e.status&&"Untest"!==e.status||(a+=1),"Pass"===e.status?c+=1:"Fail"===e.status?d+=1:"Block"===e.status?u+=1:"Untest"===e.status&&(l+=1);let p=[];return p.push(c),p.push(d),p.push(u),p.push(l),{overviewdata:a,data:p}}))}numberOfExecuteInEachMonth(e){return s(this,void 0,void 0,(function*(){const t=yield r.default.findById(e,"testexecution testplan members build").populate({path:"testexecution",select:"testexecutionname tester status updated_date"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");let i=[{testexecutionname:{type:String},tester:{type:String},status:{type:String},time:{type:String}}];i.pop();let s=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];s.pop();let n=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];n.pop();let a=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];a.pop();let c=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];c.pop();let d=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];d.pop();let u=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];u.pop();let l=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];l.pop();let p=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];p.pop();let h=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];h.pop();let f=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];f.pop();let m=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];m.pop();let y=[{testexecutionname:{type:String},tester:{type:String},status:{type:String}}];y.pop();for(let e in t.testexecution)i.push({testexecutionname:t.testexecution[e].testexecutionname,tester:t.testexecution[e].tester,status:t.testexecution[e].status,time:t.testexecution[e].updated_date});new Date;for(let e of i)0==e.time.getMonth()?s.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):1==e.time.getMonth()?n.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):2==e.time.getMonth()?a.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):3==e.time.getMonth()?c.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):4==e.time.getMonth()?d.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):5==e.time.getMonth()?u.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):6==e.time.getMonth()?l.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):7==e.time.getMonth()?p.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):8==e.time.getMonth()?h.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):9==e.time.getMonth()?f.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):10==e.time.getMonth()?m.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status}):11==e.time.getMonth()&&y.push({testexecutionname:e.testexecutionname,tester:e.tester,status:e.status});let _=[],x=[],v=[];function w(e){let t=0,i=0,s=0,n=0;for(let o of e)"Pass"===o.status?t+=1:"Fail"===o.status?i+=1:"Block"===o.status?s+=1:"Untest"===o.status&&(n+=1);_.push(t),x.push(i),v.push(s)}return w(s),w(n),w(a),w(c),w(d),w(u),w(l),w(p),w(h),w(f),w(m),w(y),{pass:_,fail:x,block:v}}))}}},9144:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.projectrequirementname=e,this.description=t,this.isActive=i,this.isPublic=s}}s([n.IsNotEmpty()],o.prototype,"projectrequirementname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"isActive",void 0),s([n.IsNotEmpty()],o.prototype,"isPublic",void 0),t.default=o},4588:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ProjectRequirementRoute=t.ProjectRequirementSchema=void 0;const n=s(i(288));t.ProjectRequirementSchema=n.default;const o=s(i(9795));t.ProjectRequirementRoute=o.default},8034:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(1813));t.default=class{constructor(){this.projectrequirementService=new o.default,this.CreateProjectRequirementAndAddProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body;yield this.projectrequirementService.createProjectRequirementAndAddProject(s,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllProjectRequirementOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.projectrequirementService.getAllProjectRequirementOfProject(e.params.project_id);let r=[{is_active:{type:String},is_public:{type:String},status:{type:String},_id:{type:String},projectrequirementname:{type:String},description:{type:String},testexecution:[],created_date:{type:String}}];r.pop();for(let e in i){var s=i[e].created_date.getDate();s<10&&(s="0"+s);var n=i[e].created_date.getMonth()+1;n<10&&(n="0"+n);var o=i[e].created_date.getFullYear();r.push({is_active:i[e].is_active,is_public:i[e].is_public,status:i[e].status,_id:i[e]._id,projectrequirementname:i[e].projectrequirementname,created_date:s+"-"+n+"-"+o,testexecution:i[e].testexecution,description:i[e].description})}t.status(200).json({status:200,success:!0,result:r,errMsg:""})}catch(e){i(e)}})),this.GetAllProjectRequirementOfProjectActive=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.projectrequirementService.getAllProjectRequirementOfProjectActive(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.SearchProjectRequirementOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.projectrequirementService.searchProjectRequirementOfProject(e.params.project_id,e.body.keyword);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.UpdateProjectRequirement=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.projectrequirement_id,n=e.params.project_id,o=yield this.projectrequirementService.updateProjectRequirement(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.RemoveAndDeleteProjectRequirement=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.projectrequirement_id,n=yield this.projectrequirementService.removeAndDeleteProjectRequirement(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.DisableProjectRequirement=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.projectrequirement_id,n=yield this.projectrequirementService.disableProjectRequirement(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}}))}}},288:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({projectrequirement_id:{type:String},projectrequirementname:{type:String},description:{type:String},is_active:{type:Boolean,default:!0},is_public:{type:Boolean,default:!1},status:{type:Boolean,default:!0},is_disable:{type:Boolean,default:!1},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},testexecution:[{type:n.default.Schema.Types.ObjectId,ref:"testexecution"}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("projectrequirement",o)},9795:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(9144)),a=s(i(8034));t.default=class{constructor(){this.path="",this.router=o.Router(),this.projectrequirementController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/:project_id/createtrequirements",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default),this.projectrequirementController.CreateProjectRequirementAndAddProject),this.router.delete(this.path+"/:project_id/:projectrequirement_id/api/deleterequirements",n.authMiddleware,n.notAllowTesterMiddleware,this.projectrequirementController.RemoveAndDeleteProjectRequirement),this.router.put(this.path+"/:project_id/:projectrequirement_id/api/updaterequirements",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default),this.projectrequirementController.UpdateProjectRequirement),this.router.get(this.path+"/:project_id/getallrequirementsbyid",n.authMiddleware,this.projectrequirementController.GetAllProjectRequirementOfProject),this.router.get(this.path+"/:project_id/getallrequirementsactive",n.authMiddleware,this.projectrequirementController.GetAllProjectRequirementOfProjectActive),this.router.post(this.path+"/:project_id/api/searchprojectrequirement",n.authMiddleware,this.projectrequirementController.SearchProjectRequirementOfProject)}}},1813:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=i(9435),a=n(i(288));t.default=class{constructor(){this.projectrequirementSchema=a.default}createProjectRequirementAndAddProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t,"projectrequirement").populate({path:"projectrequirement",select:"projectrequirementname"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");const s=new a.default(Object.assign(Object.assign({},e),{is_active:e.isActive,is_public:e.isPublic,is_disable:!1,status:!1,description:e.description,projectrequirementname:e.projectrequirementname,project:t})),n=yield s.save();return yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{projectrequirement:n._id}},{new:!0,useFindAndModify:!1}),yield i.save(),n}))}getAllProjectRequirementOfProject(e){return s(this,void 0,void 0,(function*(){const t=yield r.ProjectSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");const i=t.projectrequirement.map((e=>e._id));return a.default.find({_id:i,is_disable:!1},"projectrequirementname description is_active is_public status created_date testexecution").populate({path:"testexecution",select:"testexecutionname status is_active"}).exec()}))}getAllProjectRequirementOfProjectActive(e){return s(this,void 0,void 0,(function*(){const t=yield r.ProjectSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");const i=t.projectrequirement.map((e=>e._id));return a.default.find({_id:i,is_active:!0,is_disable:!1},"projectrequirementname").exec()}))}searchProjectRequirementOfProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=i.projectrequirement.map((e=>e._id));return a.default.find({_id:s,projectrequirementname:new RegExp(t,"i"),is_disable:!0},"projectrequirementname projectrequirement_id description is_active is_public created_date").exec()}))}updateProjectRequirement(e,t,i){return s(this,void 0,void 0,(function*(){if(!(yield a.default.findById(t).exec()))throw new o.HttpException(400,"ProjectRequirement id is not exist");if(!(yield r.ProjectSchema.findById(i,"projectrequirement").populate({path:"projectrequirement",select:"projectrequirementname"}).exec()))throw new o.HttpException(400,"Project is not exist");const s=yield a.default.findOneAndUpdate({_id:t},{$set:{projectrequirementname:e.projectrequirementname,description:e.description,is_active:e.isActive,is_public:e.isPublic,updated_date:Date.now()}},{new:!0}).exec();if(!s)throw new o.HttpException(400,"Update ProjectRequirement is not success");return s}))}removeAndDeleteProjectRequirement(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");if(!(yield a.default.findById(t).exec()))throw new o.HttpException(400,"projectrequirement id is not exist");if(i.projectrequirement&&-1==i.projectrequirement.findIndex((e=>e._id.toString()===t)))throw new o.HttpException(400,"You has not yet been projectrequirement of this project");if(i.projectrequirement=i.projectrequirement.filter((({_id:e})=>e.toString()!==t)),yield i.save(),!(yield a.default.findOneAndDelete({_id:t}).exec()))throw new o.HttpException(400,"Delete ProjectRequirement is not success");return i}))}disableProjectRequirement(e,t){return s(this,void 0,void 0,(function*(){if(!(yield a.default.findById(e).exec()))throw new o.HttpException(400,"ProjectRequirement id is not exist");if(!(yield r.ProjectSchema.findById(t).exec()))throw new o.HttpException(400,"Project is not exist");const i=yield a.default.findOneAndUpdate({_id:e},{$set:{is_disable:!1}},{new:!0}).exec();if(!i)throw new o.HttpException(400,"Disable ProjectRequirement is not success");return i}))}}},1616:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.RefreshTokenSchema=void 0;const n=s(i(4380));t.RefreshTokenSchema=n.default},4380:function(e,t,i){var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){void 0===s&&(s=i),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,s){void 0===s&&(s=i),e[s]=t[i]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&s(t,e,i);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const r=o(i(5619)),a=new r.default.Schema({user:{type:r.Schema.Types.ObjectId,ref:"user"},token:String,expires:Date,created:{type:Date,default:Date.now},createdByIp:String,revoked:Date,revokedByIp:String,replacedByToken:String});a.virtual("isExpired").get((function(){return Date.now()>=this.expires.getTime()})),a.virtual("isActive").get((function(){return!this.revoked&&!this.isExpired})),a.set("toJSON",{virtuals:!0,versionKey:!1,transform:function(e,t){delete t._id,delete t.id,delete t.user}}),t.default=r.default.model("refreshToken",a)},1138:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n,o,r){this.testcaseName=e,this.description=t,this.testsuite=i,this.priority=s,this.precondition=n,this.postcondition=o,this.listStep=r}}s([n.IsNotEmpty()],o.prototype,"testcaseName",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"testsuite",void 0),s([n.IsNotEmpty()],o.prototype,"priority",void 0),t.default=o},6270:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TestCaseSchema=void 0;const n=s(i(3534));t.TestCaseSchema=n.default},925:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(3709));t.default=class{constructor(){this.testcaseService=new o.default,this.CreateTestCase=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.project_id,n=yield this.testcaseService.createTestCase(e.user.id,s,i);t.status(201).json(n)}catch(e){i(e)}})),this.CreateTestCaseAndTestStep=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.project_id;yield this.testcaseService.createTestStepAndAddTestCase(i,e.user.id,s),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.ImportTestcase=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.project_id;yield this.testcaseService.importTestcase(i,e.user.id,s),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.UpdateTestCase=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.testcase_id,n=e.params.project_id;yield this.testcaseService.updateTestCase(i,s,e.user.id,n),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.DeleteTestCaseFromProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{yield this.testcaseService.deleteTestCaseFromProject(e.params.testcase_id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllTestCaseOfTestSuite=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testcaseService.getAllTestCaseOfTestSuite(e.params.testplan_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetAllTestCaseOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testcaseService.getAllTestCaseOfProject(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetListTestCase=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testcaseService.getListTestCase(e.body);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.AddTestCaseForTestSuite=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testsuite_id,s=e.params.testcase_id,n=yield this.testcaseService.addTestCaseForTestSuite(i,s);t.status(200).json(n)}catch(e){i(e)}})),this.RemoveTestCaseFromTestSuite=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.testsuite_id,s=e.params.testcase_id,n=yield this.testcaseService.removeTestCaseFromTestSuite(i,s);t.status(200).json(n)}catch(e){i(e)}})),this.SearchTestcaseOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.testcaseService.searchTestcaseOfProject(e.params.project_id,i),n=s.testsuites;let o={_id:n._id,name:n.projectname,description:n.description,type:"root",total_testcase:s.totalTCOfProject,numberof_testcaseuntest:s.totalTNUntestOfProject,children:[{_id:{type:String},children:[],name:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},parent:{type:String}}]};o.children.pop();let r=n.testsuite,a=[{_id:{type:String},children:[],name:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},parent:{type:String}}];a.pop();const c=e=>{for(let t in e)for(let i in e[t].testcase)a.push({_id:e[t].testcase[i]._id,name:e[t].testcase[i].testcaseName,description:e[t].testcase[i].description,testsuite:e[t].testsuitename,type:e[t].testcase[i].type,priority:e[t].testcase[i].priority,is_assigned:e[t].testcase[i].is_assigned,precondition:e[t].testcase[i].precondition,postcondition:e[t].testcase[i].postcondition,testexecution:e[t].testcase[i].testexecution,listStep:e[t].testcase[i].listStep,children:[]});return e},d=e=>{for(let t=0;t<e.length;t++)for(let i=0;i<e[t].children.length;i++){let s=e[t].children[i],n=e.find((e=>e._id==s));n?(e[t].children[i]=Object.assign({},n),n.removed=!0):e[t].children[i]={_id:s,children:[]}}return e.reduce(((e,t)=>(t.removed||e.push(t),e)),[])};(e=>{for(let t in e){a.push({_id:e[t]._id,name:e[t].testsuitename,description:e[t].description,type:e[t].type,priority:e[t].priority,is_assigned:e[t].is_assigned,total_testcase:e[t].total_testcase,numberof_testcaseuntest:e[t].numberof_testcaseuntest,parent:e[t].testsuite_parent,children:[]});for(let i in e[t].testsuite_child)a[t].children.push(e[t].testsuite_child[i]);for(let i in e[t].testcase)a[t].children.push(e[t].testcase[i]._id)}})(r),c(r);const u=d(JSON.parse(JSON.stringify(a)));for(let e in u)o.children.push(u[e]);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.SearchTestcaseInTestExecution=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.testcaseService.searchTestcaseOfProject(e.params.project_id,i),n=s.testsuites;let o={value:n._id,label:n.projectname,description:n.description,type:"root",total_testcase:s.totalTCOfProject,numberof_testcaseuntest:s.totalTNUntestOfProject,total_testsuite_child:s.totalTestsuiteOfProject,children:[{value:{type:String},children:[],label:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},total_testsuite_child:{type:Number},parent:{type:String}}]};o.children.pop();let r=n.testsuite,a=[{value:{type:String},children:[],label:{type:String},description:{type:String},type:{type:String},priority:{type:String},is_assigned:{type:String},total_testcase:{type:Number},numberof_testcaseuntest:{type:Number},total_testsuite_child:{type:Number},parent:{type:String}}];a.pop();const c=e=>{for(let t in e)for(let i in e[t].testcase)a.push({value:e[t].testcase[i]._id,label:e[t].testcase[i].testcaseName,description:e[t].testcase[i].description,testsuite:e[t].testsuitename,type:e[t].testcase[i].type,priority:e[t].testcase[i].priority,is_assigned:e[t].testcase[i].is_assigned,precondition:e[t].testcase[i].precondition,postcondition:e[t].testcase[i].postcondition,testexecution:e[t].testcase[i].testexecution,listStep:e[t].testcase[i].listStep,children:[]});return e},d=e=>{for(let t=0;t<e.length;t++)for(let i=0;i<e[t].children.length;i++){let s=e[t].children[i],n=e.find((e=>e.value==s));n?(e[t].children[i]=Object.assign({},n),n.removed=!0,""!==e[t].children[i].children[0]&&void 0!==e[t].children[i].children[0]||delete e[t].children[i].children):e[t].children[i]={value:s}}return e.reduce(((e,t)=>(""!==t.children[0]&&void 0!==t.children[0]||delete t.children,t.removed||e.push(t),e)),[])};(e=>{for(let t in e){a.push({value:e[t]._id,label:e[t].testsuitename,description:e[t].description,type:e[t].type,priority:e[t].priority,is_assigned:e[t].is_assigned,total_testcase:e[t].total_testcase,numberof_testcaseuntest:e[t].numberof_testcaseuntest,total_testsuite_child:e[t].testsuite_child.length,parent:e[t].testsuite_parent,children:[]});for(let i in e[t].testsuite_child)a[t].children.push(e[t].testsuite_child[i]);for(let i in e[t].testcase)a[t].children.push(e[t].testcase[i]._id)}})(r),c(r);const u=d(JSON.parse(JSON.stringify(a)));for(let e in u)o.children.push(u[e]);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.TestElasticSearch=(e,t,i)=>s(this,void 0,void 0,(function*(){try{e.body,e.params.project_id;const i=yield this.testcaseService.readFileExcel();t.status(201).json(i)}catch(e){i(e)}}))}}},3534:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({testcase_id:{type:String},testcaseName:{type:String},description:{type:String},testsuite:{type:n.default.Schema.Types.ObjectId,ref:"testsuite"},priority:{type:String},is_assigned:{type:Boolean,default:!1},total_assigned:{type:Number,default:0},precondition:{type:String,default:""},postcondition:{type:String,default:""},type:{type:String,default:"TC"},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},listStep:[{stepDefine:{type:String,required:!0,default:" "},expectResult:{type:String,required:!0,default:" "},type:{type:String,required:!0,default:" "}}],testexecution:[{type:n.default.Schema.Types.ObjectId,ref:"testexecution"}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("testcase",o)},9015:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(1138)),a=s(i(925));t.default=class{constructor(){this.path="/:project_id",this.router=o.Router(),this.testcaseController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/create_testcase",n.authMiddleware,n.validationMiddleware(r.default,!0),this.testcaseController.CreateTestCase),this.router.post(this.path+"/api/addteststep",n.authMiddleware,n.validationMiddleware(r.default,!0),this.testcaseController.CreateTestCaseAndTestStep),this.router.post(this.path+"/api/importtestcase",n.authMiddleware,this.testcaseController.ImportTestcase),this.router.put(this.path+"/:testcase_id/api/updatetestcase",n.authMiddleware,n.validationMiddleware(r.default,!0),this.testcaseController.UpdateTestCase),this.router.delete(this.path+"/:testcase_id/api/deletetestcaseofproject",n.authMiddleware,this.testcaseController.DeleteTestCaseFromProject),this.router.get(this.path,n.authMiddleware,this.testcaseController.GetAllTestCaseOfTestSuite),this.router.get(this.path+"/api/get_all_testcase_of_project",n.authMiddleware,this.testcaseController.GetAllTestCaseOfProject),this.router.post(this.path+"/api/searchtestcase",n.authMiddleware,this.testcaseController.SearchTestcaseOfProject),this.router.post(this.path+"/api/searchtestcaseintestexecution",n.authMiddleware,this.testcaseController.SearchTestcaseInTestExecution),this.router.post(this.path+"/api/get_list_testcase",n.authMiddleware,this.testcaseController.GetListTestCase),this.router.put(this.path+"/:testsuite_id/:testcase_id/addtestsuite",n.authMiddleware,this.testcaseController.AddTestCaseForTestSuite),this.router.delete(this.path+"/:testsuite_id/:testcase_id",n.authMiddleware,this.testcaseController.RemoveTestCaseFromTestSuite),this.router.get(this.path+"/api/elasticsearch",this.testcaseController.TestElasticSearch)}}},3709:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=n(i(3534)),a=i(2333),c=i(8620),d=i(9435),u=n(i(1310));var l=i(5619);t.default=class{constructor(){this.testcaseSchema=r.default,this.testsuiteServices=new u.default}createTestCase(e,t,i){return s(this,void 0,void 0,(function*(){if(!(yield a.UserSchema.findById(e).select("-password").exec()))throw new o.HttpException(400,"User id is not exist");const s=yield d.ProjectSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Project is not exist");if((yield r.default.find({name:i.testcaseName}).exec()).length>0)throw new o.HttpException(400,"Name TestCase existed");const n=new r.default(Object.assign(Object.assign({},i),{project:t,created_user:e,updated_user:e})),u=yield n.save();yield d.ProjectSchema.findByIdAndUpdate(t,{$push:{testcase:u._id}},{new:!0,useFindAndModify:!1}),yield s.save();const l=yield c.TestSuiteSchema.findOne({testsuitename:i.testsuite,project:t}).exec();if(!l)throw new o.HttpException(400,"TestSuite is not existed");return yield c.TestSuiteSchema.findByIdAndUpdate(l._id,{$push:{testcase:u._id}},{new:!0,useFindAndModify:!1}),u}))}createTestStepAndAddTestCase(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield l.startSession();yield s.startTransaction();try{if(!(yield a.UserSchema.findById(t).select("-password").exec()))throw new o.HttpException(400,"User id is not exist");const n=yield d.ProjectSchema.findById(i,"testcase").populate({path:"testcase",select:"testcaseName"}).exec();if(!n)throw new o.HttpException(400,"Project is not exist");if(n.testcase&&n.testcase.some((t=>t.testcaseName===e.testcaseName)))throw new o.HttpException(400,"Name testcase existed in project");const u=yield c.TestSuiteSchema.findOne({testsuitename:e.testsuite,project:i}).exec();if(!u)throw new o.HttpException(400,"TestSuite is not existed");const l=new r.default({testcaseName:e.testcaseName,description:e.description,testsuite:u._id,priority:e.priority,precondition:e.precondition,postcondition:e.postcondition,project:i,created_user:t,updated_user:t}),p=yield l.save();e.listStep.forEach((e=>{const t=Object.assign({},e);p.listStep.push(t),p.save()})),yield d.ProjectSchema.findByIdAndUpdate(i,{$push:{testcase:p._id}},{new:!0,useFindAndModify:!1}),yield n.save();const h=yield c.TestSuiteSchema.findOne({testsuitename:e.testsuite,project:i}).exec();if(!h)throw new o.HttpException(400,"TestSuite is not existed");return yield c.TestSuiteSchema.findByIdAndUpdate(h._id,{$push:{testcase:p._id}},{new:!0,useFindAndModify:!1}),yield s.commitTransaction(),s.endSession(),p}catch(e){throw yield s.abortTransaction(),s.endSession(),new o.HttpException(400,e.toString())}}))}importTestcase(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield l.startSession();yield s.startTransaction();try{if(!(yield a.UserSchema.findById(t).select("-password").exec()))throw new o.HttpException(400,"User id is not exist");const n=yield d.ProjectSchema.findById(i,"testcase").populate({path:"testcase",select:"testcaseName"}).exec();if(!n)throw new o.HttpException(400,"Project is not exist");for(let s in e){if(n.testcase&&n.testcase.some((t=>t.testcaseName===e[s].testcaseName)))throw new o.HttpException(400,`Testcase ${e[s].testcaseName} existed in project`);const a=yield c.TestSuiteSchema.findOne({testsuitename:e[s].testsuite,project:i}).exec();if(!a)throw new o.HttpException(400,"TestSuite is not existed");const u=new r.default({testcaseName:e[s].testcaseName,description:e[s].description,testsuite:a._id,priority:e[s].priority,precondition:e[s].precondition,postcondition:e[s].postcondition,project:i,created_user:t,updated_user:t}),l=yield u.save();e[s].listStep.forEach((e=>{const t=Object.assign({},e);l.listStep.push(t),l.save()})),yield d.ProjectSchema.findByIdAndUpdate(i,{$push:{testcase:l._id}},{new:!0,useFindAndModify:!1}),yield n.save();const p=yield c.TestSuiteSchema.findOne({testsuitename:e[s].testsuite,project:i}).exec();if(!p)throw new o.HttpException(400,"TestSuite is not existed");yield c.TestSuiteSchema.findByIdAndUpdate(p._id,{$push:{testcase:l._id}},{new:!0,useFindAndModify:!1})}yield s.commitTransaction(),s.endSession()}catch(e){throw yield s.abortTransaction(),s.endSession(),new o.HttpException(400,e.toString())}}))}readFileExcel(){return s(this,void 0,void 0,(function*(){return"true"}))}updateTestCase(e,t,i,n){return s(this,void 0,void 0,(function*(){const s=yield r.default.findById(t).exec();if(!s)throw new o.HttpException(400,"TestCase id is not exist");if(s.testcaseName!==e.testcaseName){const t=yield d.ProjectSchema.findById(n,"testcase").populate({path:"testcase",select:"testcaseName"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");if(t.testcase&&t.testcase.some((t=>t.testcaseName===e.testcaseName)))throw new o.HttpException(400,"Name testcase existed in project")}const a=yield c.TestSuiteSchema.findOne({testsuitename:e.testsuite,project:n}).exec();if(!a)throw new o.HttpException(400,"TestSuite is not existed");if(s.testsuite.toString()!==a._id.toString()){const e=yield c.TestSuiteSchema.findOne({_id:s.testsuite}).exec();if(!e)throw new o.HttpException(400,"TestSuite is not existed");if(!a.testcase||-1!=a.testcase.findIndex((e=>e._id.toString()===s._id.toString())))throw new o.HttpException(400,"Have this testcase in testsuite ");e.testcase=e.testcase.filter((({_id:e})=>e.toString()!==s._id.toString())),yield e.save(),yield c.TestSuiteSchema.findByIdAndUpdate(a._id,{$push:{testcase:s._id}},{new:!0,useFindAndModify:!1})}s.listStep=s.listStep.filter((({_id:e})=>"1"===e.toString())),yield s.save(),e.listStep.forEach((e=>{const t=Object.assign({},e);s.listStep.push(t),s.save()}));const u=yield r.default.findOneAndUpdate({_id:t},{$set:{testcaseName:e.testcaseName,description:e.description,testsuite:a._id,priority:e.priority,precondition:e.precondition,postcondition:e.postcondition,updated_date:Date.now(),updated_user:i}},{new:!0}).exec();if(!u)throw new o.HttpException(400,"Update is not success");return u}))}deleteTestCaseFromProject(e){return s(this,void 0,void 0,(function*(){const t=yield r.default.findById(e).exec();if(!t)throw new o.HttpException(400,"testcase id is not exist");if(!(yield r.default.findOneAndDelete({_id:e}).exec()))throw new o.HttpException(400,"Delete TestCase is not success");const i=yield c.TestSuiteSchema.findOne({_id:t.testsuite}).exec();if(!i)throw new o.HttpException(400,"TestSuite is not existed");return i.testcase=i.testcase.filter((({_id:e})=>e.toString()!==t._id.toString())),yield i.save(),t}))}getAllTestCaseOfTestSuite(e){return s(this,void 0,void 0,(function*(){return c.TestSuiteSchema.find({_id:e}).populate("testcase",["name","description","priority"]).exec()}))}searchTestcaseOfProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield this.testsuiteServices.updateAssignTestSuite(e);return""==t.testsuite?{testsuites:yield d.ProjectSchema.findOne({_id:e},"testsuite projectname description").populate({path:"testsuite",select:"testsuitename testcase description priority testsuite_child testsuite_parent type is_assigned total_testcase numberof_testcaseuntest",populate:[{path:"testcase",select:"testcaseName description testsuite listStep type priority precondition postcondition is_assigned testexecution",match:{testcaseName:new RegExp(t.testcasename,"i"),priority:new RegExp(t.important,"i")},populate:[{path:"testexecution",select:"testexecutionname status project"}]},{path:"testsuite_parent",select:"testsuitename"}]}).exec(),totalTCOfProject:i.totalTCOfProject,totalTNUntestOfProject:i.totalTNUntestOfProject,totalTestsuiteOfProject:i.totalTSOfProject}:{testsuites:yield d.ProjectSchema.findOne({_id:e},"testsuite projectname description").populate({path:"testsuite",match:{testsuitename:new RegExp(t.testsuite,"i")},select:"testsuitename testcase description priority testsuite_child testsuite_parent type is_assigned total_testcase numberof_testcaseuntest",populate:[{path:"testcase",select:"testcaseName description testsuite listStep type priority precondition postcondition is_assigned testexecution",match:{testcaseName:new RegExp(t.testcasename,"i"),priority:new RegExp(t.important,"i")},populate:[{path:"testexecution",select:"testexecutionname status project"}]},{path:"testsuite_parent",select:"testsuitename"}]}).exec(),totalTCOfProject:i.totalTCOfProject,totalTNUntestOfProject:i.totalTNUntestOfProject}}))}getAllTestCaseOfProject(e){return s(this,void 0,void 0,(function*(){return c.TestSuiteSchema.find({_id:e}).populate("testcase",["name","description","priority"]).exec()}))}getListTestCase(e){return s(this,void 0,void 0,(function*(){let t=[];const i=JSON.parse(JSON.stringify(e)),s=yield r.default.find({},"testcaseName").exec();if(!s)throw new o.HttpException(400,"list testcase is not exist");for(let e in i.listselect)for(let n of s)n._id.toString()===i.listselect[e].toString()&&t.push(n);return t}))}addTestCaseForTestSuite(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.TestSuiteSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"TestSuite is not exist");const s=yield r.default.findById(t).exec();if(!s)throw new o.HttpException(400,"TestCase is not exist");if(i.testcase&&i.testcase.some((e=>e._id.toString()===t)))throw new o.HttpException(400,"This testcase has already been in testsuite");return yield c.TestSuiteSchema.findByIdAndUpdate(e,{$push:{testsuite:s._id}},{new:!0,useFindAndModify:!1}),yield i.save(),i}))}removeTestCaseFromTestSuite(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.TestSuiteSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"testsuite id is not exist");if(!(yield r.default.findById(t).exec()))throw new o.HttpException(400,"testcase id is not exist");if(i.testcase&&-1==i.testcase.findIndex((e=>e._id.toString()===t)))throw new o.HttpException(400,"You has not yet been testcase of this testsuite");return i.testcase=i.testcase.filter((({_id:e})=>e.toString()!==t)),yield i.save(),i}))}}},913:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i){this.url=e,this.issue_id=t,this.testexecution_id=i}}s([n.IsNotEmpty()],o.prototype,"url",void 0),s([n.IsNotEmpty()],o.prototype,"issue_id",void 0),s([n.IsNotEmpty()],o.prototype,"testexecution_id",void 0),t.default=o},40:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n,o,r,a,c,d){this.testexecutionname=e,this.description=t,this.testplanname=i,this.buildname=s,this.is_active=o,this.is_public=n,this.assigntester=r,this.listexectestcases=a,this.exist_testexecution=c,this.listrequirement=d}}s([n.IsNotEmpty()],o.prototype,"testexecutionname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"testplanname",void 0),s([n.IsNotEmpty()],o.prototype,"buildname",void 0),s([n.IsNotEmpty()],o.prototype,"is_active",void 0),s([n.IsNotEmpty()],o.prototype,"is_public",void 0),t.default=o},6668:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t){this.testexecution_id=e,this.issue_id=t}}s([n.IsNotEmpty()],o.prototype,"testexecution_id",void 0),s([n.IsNotEmpty()],o.prototype,"issue_id",void 0),t.default=o},1842:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s,n,o,r,a,c){this.testexecutionname=e,this.description=o,this.build=r,this.testplan=a,this.is_active=n,this.is_public=s,this.tester=i,this.listprojectrequirement=t,this.exectestcases=c}}s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"build",void 0),s([n.IsNotEmpty()],o.prototype,"testplan",void 0),s([n.IsNotEmpty()],o.prototype,"testexecutionname",void 0),s([n.IsNotEmpty()],o.prototype,"is_active",void 0),s([n.IsNotEmpty()],o.prototype,"is_public",void 0),t.default=o},9664:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TestExecutionRoute=t.TestExecutionSchema=void 0;const n=s(i(1164));t.TestExecutionSchema=n.default;const o=s(i(5795));t.TestExecutionRoute=o.default},1656:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(9392));t.default=class{constructor(){this.testexecutionService=new o.default,this.CreateTestExecutionAndAddProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body;void 0!==s.exist_testexecution&&""!==s.exist_testexecution&&null!==s.exist_testexecution?yield this.testexecutionService.duplicateTestExecution(s,i):yield this.testexecutionService.createTestExecutionAndAddProject(s,i),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.GetAllTestExecutionOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testexecutionService.getAllTestExecutionOfProject(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetSixTestExecutionNewest=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testexecutionService.getSixTestExecutionNewest(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.SearchTestExecutionOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testexecutionService.searchTestExecutionOfProject(e.params.project_id,e.body.keyword);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.ExecTestcase=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.testexecution_id,n=e.params.project_id;yield this.testexecutionService.execTestcase(i,s,n,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.ExecTestExecution=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.testexecution_id,n=e.params.project_id;yield this.testexecutionService.execTestExecution(i,s,n,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.DuplicateTestExecution=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.testexecutionService.duplicateTestExecution(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.DeleteTestExecutionFromProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id;yield this.testexecutionService.deleteTestExecutionFromProject(i,e.params.testexecution_id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.UpdateTestExecution=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.testexecution_id,n=e.params.project_id;yield this.testexecutionService.updateTestExecution(i,s,n,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.RemoveIssueFromTestExecution=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body;yield this.testexecutionService.removeIssueFromTestExecution(i,s.testexecution_id,s.issue_id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}})),this.AddIssueFromTestExecution=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body;yield this.testexecutionService.addIssueFromTestExecution(i,s.testexecution_id,s),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}}))}}},1164:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({testexecutionname:{type:String},description:{type:String},is_active:{type:Boolean,default:!0},is_public:{type:Boolean,default:!1},status:{type:String,enum:["Untest","Pass","Fail","Block"],default:"Untest"},exectestcases:[{type:{type:String,default:"TC"},testcaseName:{type:String},description:{type:String},precondition:{type:String},postcondition:{type:String},testsuite:{type:n.default.Schema.Types.ObjectId,ref:"testsuite"},priority:{type:String},status:{type:String,enum:["Untest","Pass","Fail","Block"],default:"Untest"},note:{type:String,default:" "},listStep:[{stepDefine:{type:String,required:!0},expectResult:{type:String,required:!0},type:{type:String,required:!0},status:{type:String,enum:["Untest","Pass","Fail","Block"],default:"Untest"},note:{type:String,default:" "}}]}],project:{type:n.default.Schema.Types.ObjectId,ref:"project"},testplan:{type:n.default.Schema.Types.ObjectId,ref:"testplan"},tester:{type:n.default.Schema.Types.ObjectId,ref:"user"},build:{type:n.default.Schema.Types.ObjectId,ref:"build"},listprojectrequirement:[{type:n.default.Schema.Types.ObjectId,ref:"projectrequirement"}],listtestcases:[{type:n.default.Schema.Types.ObjectId,ref:"testcase"}],issue:[{issue_id:{type:String},url:{type:String}}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("testexecution",o)},5795:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=s(i(2105)),r=i(2127),a=s(i(913)),c=s(i(40)),d=s(i(6668)),u=s(i(1842)),l=s(i(1656));t.default=class{constructor(){this.path="",this.router=r.Router(),this.testexecutionController=new l.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/:project_id/api/createtestexecution",n.authMiddleware,n.validationMiddleware(c.default),this.testexecutionController.CreateTestExecutionAndAddProject),this.router.post(this.path+"/:project_id/api/searchtestexecution",n.authMiddleware,this.testexecutionController.SearchTestExecutionOfProject),this.router.get(this.path+"/:project_id/api/getalltestexecutionofproject",n.authMiddleware,this.testexecutionController.GetAllTestExecutionOfProject),this.router.get(this.path+"/:project_id/api/getsixtestexecutionnewest",n.authMiddleware,this.testexecutionController.GetSixTestExecutionNewest),this.router.put(this.path+"/:project_id/:testexecution_id/api/updatetestcaseexec",n.authMiddleware,o.default,n.validationMiddleware(c.default,!0),this.testexecutionController.ExecTestcase),this.router.put(this.path+"/:project_id/:testexecution_id/api/updatetestexecution",n.authMiddleware,o.default,n.validationMiddleware(c.default,!0),this.testexecutionController.ExecTestExecution),this.router.post(this.path+"/:project_id/api/duplicateTesexecution",n.authMiddleware,this.testexecutionController.DuplicateTestExecution),this.router.delete(this.path+"/:project_id/:testexecution_id",n.authMiddleware,this.testexecutionController.DeleteTestExecutionFromProject),this.router.put(this.path+"/:project_id/:testexecution_id/api/updatedetailtestexecution",n.authMiddleware,n.validationMiddleware(u.default,!0),this.testexecutionController.UpdateTestExecution),this.router.put(this.path+"/:project_id/api/v1/removeissuefromexecution",n.authMiddleware,n.validationMiddleware(d.default,!0),this.testexecutionController.RemoveIssueFromTestExecution),this.router.put(this.path+"/:project_id/api/v1/addissuetoexecution",n.authMiddleware,n.validationMiddleware(a.default,!0),this.testexecutionController.AddIssueFromTestExecution)}}},9392:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=i(9435),a=i(5937),c=i(9664),d=i(2333),u=i(6270),l=i(6968),p=n(i(8528)),h=i(4588);t.default=class{constructor(){this.testexecutionSchema=c.TestExecutionSchema,this.notificationService=new p.default}createTestExecutionAndAddProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t,"projectname testexecution testplan members").populate({path:"testexecution",select:"testexecutionname"}).populate({path:"testplan",select:"testplanname"}).populate({path:"build",select:"buildname"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");const n=i.testplan.find((t=>t.testplanname===e.testplanname));if(""===n||void 0===n)throw new o.HttpException(400,"Name testplan not existed in project");const p=i.build.find((t=>t.buildname===e.buildname));if(""===p||void 0===p)throw new o.HttpException(400,"Name build not existed in project");const f=yield l.BuildSchema.findOne({buildname:e.buildname,testplan:n._id}).populate({path:"testexecution",select:"testexecutionname"}).exec();if(!f)throw new o.HttpException(400,"build is not exist in testplan");if(f.testexecution&&f.testexecution.some((t=>t.testexecutionname===e.testexecutionname)))throw new o.HttpException(400,"Name testexecution existed in build");const m=e.listexectestcases,y=[];for(let e in m)y.push(m[e].testcaseid);const _=yield u.TestCaseSchema.find({_id:{$in:y}}).select("type testcaseName description priority testsuite listStep precondition postcondition").populate({path:"listStep",select:"stepDefine expectResult type -_id"}).exec();if(""!==e.assigntester&&void 0!==e.assigntester){const f=i.members.find((t=>t.username===e.assigntester)),m=new c.TestExecutionSchema(Object.assign(Object.assign({},e),{is_active:e.is_active,is_public:e.is_public,description:e.description,testexecutionname:e.testexecutionname,project:t,listtestcases:y,testplan:n._id,tester:f.user,build:p._id,exectestcases:_})),w=yield m.save();for(let e of y)yield u.TestCaseSchema.findByIdAndUpdate(e,{$push:{testexecution:w._id}},{new:!0,useFindAndModify:!1});function x(e){return s(this,void 0,void 0,(function*(){yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$push:{testexecution:w._id}},{new:!0,useFindAndModify:!1})}))}yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testexecution:w._id}},{new:!0,useFindAndModify:!1}),yield a.TestPlanSchema.findOneAndUpdate({testplanname:e.testplanname,project:t},{$push:{testexecution:w._id}},{new:!0,useFindAndModify:!1}),yield l.BuildSchema.findOneAndUpdate({buildname:e.buildname,testplan:n._id},{$push:{testexecution:w._id}},{new:!0,useFindAndModify:!1}),""!==e.assigntester&&void 0!==e.assigntester&&(yield d.UserSchema.findOneAndUpdate({username:e.assigntester},{$push:{testexecution:w._id}},{new:!0,useFindAndModify:!1})),e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{x(e)}));for(let e of y){const t=yield u.TestCaseSchema.findById(e,"total_assigned").exec();yield u.TestCaseSchema.findOneAndUpdate({_id:e},{$set:{is_assigned:!0,total_assigned:t.total_assigned+1}},{new:!0}).exec()}let j={id:"sss"};function v(e){return s(this,void 0,void 0,(function*(){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:w._id},{$push:{listprojectrequirement:e.id}},{new:!0,useFindAndModify:!1}),!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e.id},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))}e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{j.id=e,v(j)}));const g={description:`you has already been assigned for test execution ${w.testexecutionname} in project ${i.projectname}`,is_read:!1,url:`https://testcontrols.herokuapp.com/projects/${t}/test-execution/${w._id}`,user:f.user};return yield this.notificationService.createNotification(g,t),w}{const i=new c.TestExecutionSchema(Object.assign(Object.assign({},e),{is_active:e.is_active,is_public:e.is_public,description:e.description,testexecutionname:e.testexecutionname,project:t,listtestcases:y,testplan:n._id,build:p._id,exectestcases:_})),d=yield i.save();for(let e of y)yield u.TestCaseSchema.findByIdAndUpdate(e,{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1});function x(e){return s(this,void 0,void 0,(function*(){yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1})}))}yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1}),yield a.TestPlanSchema.findOneAndUpdate({testplanname:e.testplanname,project:t},{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1}),yield l.BuildSchema.findOneAndUpdate({buildname:e.buildname,testplan:n._id},{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1}),e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{x(e)}));for(let e of y){const t=yield u.TestCaseSchema.findById(e,"total_assigned").exec();yield u.TestCaseSchema.findOneAndUpdate({_id:e},{$set:{is_assigned:!0,total_assigned:t.total_assigned+1}},{new:!0}).exec()}let f={id:"sss"};function v(e){return s(this,void 0,void 0,(function*(){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:d._id},{$push:{listprojectrequirement:e.id}},{new:!0,useFindAndModify:!1}),!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e.id},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))}return e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{f.id=e,v(f)})),d}}))}addProjectRequirementForExecution(e,t){return s(this,void 0,void 0,(function*(){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:t},{$push:{listprojectrequirement:e.id}},{new:!0,useFindAndModify:!1}),!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e.id},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))}getAllTestExecutionOfProject(e){return s(this,void 0,void 0,(function*(){const t=yield r.ProjectSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");const i=t.testexecution.map((e=>e._id)),s=yield c.TestExecutionSchema.find({_id:i},"testexecutionname description testplan status is_public is_active tester build exectestcases listprojectrequirement created_user issue").populate({path:"exectestcases",select:"status note -_id"}).populate({path:"testplan",select:"testplanname"}).populate({path:"issue",select:"issue_id url"}).populate({path:"tester",select:"username"}).populate({path:"build",select:"buildname"}).populate({path:"listprojectrequirement",select:"projectrequirementname"}).exec();let n=[{is_active:{type:Boolean},is_public:{type:Boolean},status:{type:String},_id:{type:String},testexecutionname:{type:String},description:{type:String},testplan:{_id:{type:String},testplanname:{type:String}},tester:{_id:"",user:""},listprojectrequirement:{_id:"",projectrequirementname:""},build:{_id:{type:String},builname:{type:String}},exectestcases:[{_id:{type:String},type:{type:String},status:{type:String},note:{type:String},testcaseName:{type:String},description:{type:String},precondition:{type:String},postcondition:{type:String},testsuite:{type:String},priority:{type:String},listStep:[{status:{type:String},note:{type:String},_id:{type:String},stepDefine:{type:String},expectResult:{type:String},type:{type:String}}]}],issue:[{issue_id:{type:String},url:{type:String}}]}];n.pop();for(let e in s){n.push({is_active:s[e].is_active,is_public:s[e].is_public,status:s[e].status,_id:s[e]._id,testexecutionname:s[e].testexecutionname,description:s[e].description,testplan:s[e].testplan,tester:s[e].tester,listprojectrequirement:s[e].listprojectrequirement,build:s[e].build,exectestcases:[],issue:[]}),null!=s[e].tester&&""!=s[e].tester&&null!=s[e].tester||(n[e].tester={id:"",username:""}),null!=s[e].listprojectrequirement&&""!=s[e].listprojectrequirement&&null!=s[e].listprojectrequirement||(n[e].listprojectrequirement=[]);for(let t in s[e].exectestcases)n[e].exectestcases.push(s[e].exectestcases[t]);for(let t in s[e].issue)n[e].issue.push(s[e].issue[t])}return n}))}getSixTestExecutionNewest(e){return s(this,void 0,void 0,(function*(){const t=yield r.ProjectSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");const i=t.testexecution.map((e=>e._id)),s=yield c.TestExecutionSchema.find({_id:i,is_active:!0},"testexecutionname status tester created_date updated_date -_id").populate({path:"tester",select:"username"}).sort({updated_date:"desc"}).limit(6).exec();let n=[{created_date:{type:String},updated_date:{type:String},status:{type:String},testexecutionname:{type:String},tester:{type:String,required:!0,default:{_id:{required:!0,default:"s"},user:{required:!0,default:"s"}}}}];n.pop();for(let e in s){var a=s[e].created_date.getDate();a<10&&(a="0"+a);var d=s[e].created_date.getMonth()+1;d<10&&(d="0"+d);var u=s[e].created_date.getFullYear(),l=s[e].updated_date.getDate();l<10&&(l="0"+l);var p=s[e].updated_date.getMonth()+1;p<10&&(p="0"+p);var h=s[e].updated_date.getFullYear();null==s[e].tester||""==s[e].tester||null==s[e].tester?n.push({id:e,created_date:a+"-"+d+"-"+u,updated_date:l+"-"+p+"-"+h,status:s[e].status,testexecutionname:s[e].testexecutionname,tester:{_id:"",tester:""}}):n.push({id:e,created_date:a+"-"+d+"-"+u,updated_date:l+"-"+p+"-"+h,status:s[e].status,testexecutionname:s[e].testexecutionname,tester:s[e].tester})}return n}))}searchTestExecutionOfProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=i.testexecution.map((e=>e._id));return yield c.TestExecutionSchema.find({_id:s,testexecutionname:new RegExp(t,"i")},"testexecutionname description testplan status is_public is_active tester build exectestcases created_user").populate({path:"exectestcases",select:"status note -_id"}).populate({path:"testplan",select:"testplanname"}).populate({path:"tester",select:"username"}).populate({path:"build",select:"buildname"}).exec()}))}execTestcase(e,t,i,n){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(i).exec()))throw new o.HttpException(400,"Execution is not exist");if("Untest"==e.status)throw new o.HttpException(400,"Status of testcase can not be Untest");const s=yield c.TestExecutionSchema.findById(t,"exectestcases tester").populate({path:"exectestcases",select:"status note testcaseid"}).exec();if(!s)throw new o.HttpException(400,"Testexecution is not exist");if(n==s.tester||""==s.tester||null==s||null==s.tester){if(!(yield c.TestExecutionSchema.updateOne({_id:s._id,"exectestcases._id":e.testcaseid},{$set:{"exectestcases.$.listStep":e.listStep,"exectestcases.$.status":e.status,"exectestcases.$.note":e.note}}).exec()))throw new o.HttpException(400,"Update TestExecution is not success");return s.save(),s}throw new o.HttpException(400,"you not allowed to execute this testcase")}))}execTestExecution(e,t,i,n){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(i).exec()))throw new o.HttpException(400,"Execution is not exist");const a=yield c.TestExecutionSchema.findById(t).exec();if(!a)throw new o.HttpException(400,"Test execution is not exist");for(let e in a.exectestcases)if("Pass"!=a.exectestcases[e].status&&"Fail"!=a.exectestcases[e].status&&"Blocked"!=a.exectestcases[e].status)throw new o.HttpException(400,"You have not tested all the testcases");if("Untest"==e.status)throw new o.HttpException(400,"Status of test execution can not be Untest");if(n==a.tester||""==a.tester||null==a.tester||null==a.tester){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:a._id},{$set:{status:e.status,updated_date:Date.now(),updated_user:n}},{new:!0}).exec(),!a)throw new o.HttpException(400,"Update TestExecution is not success");return a.listprojectrequirement.length>0&&void 0!==a.listprojectrequirement&&a.listprojectrequirement.forEach((e=>s(this,void 0,void 0,(function*(){if(yield this.checkStatusListExecutionOfProjectRequirement(e)){if(!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$set:{status:!0,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}else if(!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")})))),a}throw new o.HttpException(400,"you not allowed to execute this testexecution")}))}changeBuildAndTestPlanOfTestExecution(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield c.TestExecutionSchema.findById(i).exec();if(!s)throw new o.HttpException(400,"Test execution is not exist");const n=yield a.TestPlanSchema.findById(s.testplan).populate({path:"build",select:"buildname"}).exec();if(!n)throw new o.HttpException(400,"Testplan is not exist");if(!(yield l.BuildSchema.findById(s.build).populate({path:"testexecution",select:"testexecutionname"}).exec()))throw new o.HttpException(400,"Build is not exist");const r=yield l.BuildSchema.findById(t).populate({path:"testexecution",select:"testexecutionname"}).exec();if(!r)throw new o.HttpException(400,"Build is not exist");if(s.build==t);else if(s.testplan==e){if(n.build&&n.build.some((e=>e._id===t)))throw new o.HttpException(400,`Build ${r.buildname} doesn't belong to testplan  ${n.testplanname}`);if(yield c.TestExecutionSchema.findOneAndUpdate({_id:s._id},{$set:{build:t,updated_date:Date.now()}},{new:!0}).exec(),!s)throw new o.HttpException(400,"Update TestExecution is not success");const e=yield l.BuildSchema.findById(s.build).exec();if(!e)throw new o.HttpException(400,"Build is not success");if(e.testexecution=e.testexecution.filter((({_id:e})=>{var t;return(null==e?void 0:e.toString())!==(null===(t=s._id)||void 0===t?void 0:t.toString())})),yield e.save(),yield l.BuildSchema.findOneAndUpdate({_id:t},{$push:{testexecution:s._id}},{new:!0,useFindAndModify:!1}),!s)throw new o.HttpException(400,"Change Build is not success")}else{if(n.build&&n.build.some((e=>e._id===t)))throw new o.HttpException(400,`Build ${r.buildname} doesn't belong to testplan  ${n.testplanname}`);if(yield c.TestExecutionSchema.findOneAndUpdate({_id:s._id},{$set:{build:t,testplan:e,updated_date:Date.now()}},{new:!0}).exec(),!s)throw new o.HttpException(400,"Update TestExecution is not success");const i=yield l.BuildSchema.findById(s.build).exec();if(!i)throw new o.HttpException(400,"Build is not exist");if(i.testexecution=i.testexecution.filter((({_id:e})=>{var t;return(null==e?void 0:e.toString())!==(null===(t=s._id)||void 0===t?void 0:t.toString())})),yield i.save(),yield l.BuildSchema.findOneAndUpdate({_id:t},{$push:{testexecution:s._id}},{new:!0,useFindAndModify:!1}),!s)throw new o.HttpException(400,"Change Build is not success");const d=yield a.TestPlanSchema.findById(s.testplan).exec();if(!d)throw new o.HttpException(400,"Testplan is not exist");if(d.testexecution=d.testexecution.filter((({_id:e})=>{var t;return(null==e?void 0:e.toString())!==(null===(t=s._id)||void 0===t?void 0:t.toString())})),yield d.save(),yield a.TestPlanSchema.findOneAndUpdate({_id:e},{$push:{testexecution:s._id}},{new:!0,useFindAndModify:!1}),!s)throw new o.HttpException(400,"Change Testplan is not success")}}))}updateSingleFieldOfTestExecution(e,t,i,n,r){return s(this,void 0,void 0,(function*(){const s=yield c.TestExecutionSchema.findById(r).exec();if(!s)throw new o.HttpException(400,"Test execution is not exist");if(yield c.TestExecutionSchema.findOneAndUpdate({_id:s._id},{$set:{testexecutionname:e,is_active:t,is_public:i,description:n,updated_date:Date.now()}},{new:!0}).exec(),!s)throw new o.HttpException(400,"Update TestExecution is not success")}))}updateListProjectRequirementOfTestExecution(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.TestExecutionSchema.findById(t).exec();if(!i)throw new o.HttpException(400,"Test execution is not exist");if(yield this.removeProjectRequirementFromExecution(i._id),yield c.TestExecutionSchema.findOneAndUpdate({_id:i._id},{$set:{listprojectrequirement:[],updated_date:Date.now()}},{new:!0}).exec(),!i)throw new o.HttpException(400,"Update list Project Requirement TestExecution is not success");e.length>0&&void 0!==e&&e.forEach((e=>{null!=e&&null!=e&&function(e){s(this,void 0,void 0,(function*(){yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$push:{testexecution:i._id}},{new:!0,useFindAndModify:!1})}))}(e)}));let n={id:"sss"};e.length>0&&void 0!==e&&e.forEach((e=>{null!=e&&null!=e&&(n.id=e,function(e){s(this,void 0,void 0,(function*(){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:i._id},{$push:{listprojectrequirement:e.id}},{new:!0,useFindAndModify:!1}),!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e.id},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update Status ProjectRequirement is not success")}))}(n))}))}))}changeTesterOfTestExecution(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield r.ProjectSchema.findById(i).exec();if(!s)throw new o.HttpException(400,"Execution is not exist");const n=yield c.TestExecutionSchema.findById(t).exec();if(!n)throw new o.HttpException(400,"Test execution is not exist");let a=-1;if(null==n.tester||null==n.tester||""==n.tester)""==e._id||(a=2);else{const i=yield d.UserSchema.findById(n.tester).exec();i&&(i.testexecution=i.testexecution.filter((({_id:e})=>e.toString()!==t.toString())),yield i.save()),a=""==e._id?3:4}if(null==e._id||null==e._id||""==e._id){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:n._id},{$set:{tester:void 0,updated_date:Date.now()}},{new:!0}).exec(),!n)throw new o.HttpException(400,"Update TestExecution is not success");if(3==a){const e={description:`you has already been revoked test execution ${n.testexecutionname} in project ${s.projectname}`,is_read:!1,url:`https://testcontrols.herokuapp.com/projects/${i}/test-execution/${n._id}`,user:n.tester};yield this.notificationService.createNotification(e,i)}}else{if(yield c.TestExecutionSchema.findOneAndUpdate({_id:n._id},{$set:{tester:e._id,updated_date:Date.now()}},{new:!0}).exec(),!n)throw new o.HttpException(400,"Update TestExecution is not success");if(""!=e._id&&null!=e._id&&(yield d.UserSchema.findOneAndUpdate({username:e._id},{$push:{testexecution:n._id}},{new:!0,useFindAndModify:!1})),2==a){const t={description:`you has already been assigned for test execution ${n.testexecutionname} in project ${s.projectname}`,is_read:!1,url:`https://testcontrols.herokuapp.com/projects/${i}/test-execution/${n._id}`,user:e._id};yield this.notificationService.createNotification(t,i)}if(4==a){const t={description:`you has already been assigned for test execution ${n.testexecutionname} in project ${s.projectname}`,is_read:!1,url:`https://testcontrols.herokuapp.com/projects/${i}/test-execution/${n._id}`,user:e._id},o=(yield this.notificationService.createNotification(t,i),{description:`you has already been revoked test execution ${n.testexecutionname} in project ${s.projectname}`,is_read:!1,url:`https://testcontrols.herokuapp.com/projects/${i}/test-execution/${n._id}`,user:n.tester});yield this.notificationService.createNotification(o,i)}}}))}updateListTestcaseOfTestExecution(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.TestExecutionSchema.findById(t).exec();if(!i)throw new o.HttpException(400,"Test execution is not exist");yield this.removeTestcaseFromExecution(i._id);const s=e,n=[],r=[];for(let e of s)null!=e&&null!=e&&("TC"!=e.type&&n.push(e._id),r.push(e._id));const a=[];for(let e of s)"TC"==e.type&&a.push(e);const d=yield u.TestCaseSchema.find({_id:{$in:n}}).select("type testcaseName description priority testsuite listStep precondition postcondition").populate({path:"listStep",select:"stepDefine expectResult type -_id"}).exec();if(yield c.TestExecutionSchema.findOneAndUpdate({_id:i._id},{$set:{listtestcases:r,exectestcases:a.concat(d),updated_date:Date.now()}},{new:!0}).exec(),!i)throw new o.HttpException(400,"Update TestExecution is not success");yield this.updateAssignTestcase(r,i._id)}))}updateTestExecution(e,t,i,n){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(i).exec()))throw new o.HttpException(400,"Execution is not exist");const n=yield l.BuildSchema.findById(e.build._id).populate({path:"testexecution",select:"testexecutionname"}).exec();if(!n)throw new o.HttpException(400,"Build is not exist");if(!(yield a.TestPlanSchema.findById(e.testplan._id).exec()))throw new o.HttpException(400,"Testplan is not exist");const d=yield c.TestExecutionSchema.findById(t).exec();if(!d)throw new o.HttpException(400,"Test execution is not exist");if(e.testexecutionname!==d.testexecutionname&&n.testexecution&&n.testexecution.some((t=>t.testexecutionname===e.testexecutionname)))throw new o.HttpException(400,"Name testexecution existed in build");yield this.changeBuildAndTestPlanOfTestExecution(e.testplan._id,e.build._id,d._id),e.testexecutionname==d.testexecutionname&&e.is_active==d.is_active&&e.is_public==d.is_public&&e.description==d.description||(yield this.updateSingleFieldOfTestExecution(e.testexecutionname,e.is_active,e.is_public,e.description,d._id)),e.listprojectrequirement!=d.listprojectrequirement&&(yield this.updateListProjectRequirementOfTestExecution(e.listprojectrequirement,d._id)),e.tester._id!=d.tester&&(yield this.changeTesterOfTestExecution(e.tester,d._id,i)),yield this.updateListTestcaseOfTestExecution(e.exectestcases,d._id),d.listprojectrequirement.length>0&&null!=d.listprojectrequirement&&d.listprojectrequirement.forEach((e=>s(this,void 0,void 0,(function*(){if(yield this.checkStatusListExecutionOfProjectRequirement(e)){if(!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$set:{status:!0,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}else if(!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))))}))}updateAssignTestcase(e,t){return s(this,void 0,void 0,(function*(){for(let i of e)yield u.TestCaseSchema.findByIdAndUpdate(i,{$push:{testexecution:t}},{new:!0,useFindAndModify:!1}),yield u.TestCaseSchema.findOneAndUpdate({_id:i},{$set:{is_assigned:!0}},{new:!0}).exec();return!0}))}removeIssueFromTestExecution(e,t,i){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(e).exec()))throw new o.HttpException(400,"Project id is not exist");const s=yield c.TestExecutionSchema.findById(t).populate({path:"issue",select:"issue_id url"}).exec();if(!s)throw new o.HttpException(400,"Testexecution id is not exist");return s.issue=s.issue.filter((({issue_id:e})=>(null==e?void 0:e.toString())!==i)),yield s.save(),!0}))}addIssueFromTestExecution(e,t,i){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(e).exec()))throw new o.HttpException(400,"Project id is not exist");const s=yield c.TestExecutionSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"Testexecution id is not exist");return s.issue.unshift({issue_id:i.issue_id,url:i.url}),yield s.save(),!0}))}checkProjectRequirementIsComplete(e){return s(this,void 0,void 0,(function*(){if(yield this.checkStatusListExecutionOfProjectRequirement(e)){if(!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$set:{status:!0,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}else if(!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))}checkStatusListExecutionOfProjectRequirement(e){return s(this,void 0,void 0,(function*(){const t=yield h.ProjectRequirementSchema.findById(e,"projectrequirementname testexecution").populate({path:"testexecution"}).exec();if(!t)return!1;for(let e of t.testexecution){const t=yield c.TestExecutionSchema.findById(e,"status").exec();if(!t)return!0;if("Pass"!=t.status)return!1}return!0}))}duplicateTestExecution(e,t){return s(this,void 0,void 0,(function*(){const i=yield r.ProjectSchema.findById(t,"projectname testexecution testplan members build").populate({path:"testexecution",select:"testexecutionname"}).populate({path:"testplan",select:"testplanname"}).populate({path:"build",select:"buildname"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");const n=yield c.TestExecutionSchema.findOne({_id:e.exist_testexecution},"exectestcases build testplan listtestcases").exec();if(!n)throw new o.HttpException(400,"Testexecution is not exist");const p=yield l.BuildSchema.findById(n.build).populate({path:"testexecution",select:"testexecutionname"}).exec();if(!p)throw new o.HttpException(400,"build is not exist in testplan");if(p.testexecution&&p.testexecution.some((t=>t.testexecutionname===e.testexecutionname)))throw new o.HttpException(400,"Name testexecution existed in build");const f=JSON.parse(JSON.stringify(n.exectestcases));let m=[{_id:{type:String},type:{type:String},status:{type:String},note:{type:String},testcaseName:{type:String},description:{type:String},precondition:{type:String},postcondition:{type:String},testsuite:{type:String},priority:{type:String},listStep:[{status:{type:String},note:{type:String},_id:{type:String},stepDefine:{type:String},expectResult:{type:String},type:{type:String}}]}];m.pop();for(let e in f){m.push({type:f[e].type,status:"Untest",note:"",_id:f[e]._id,testcaseName:f[e].testcaseName,description:f[e].description,testsuite:f[e].testsuite,precondition:f[e].precondition,postcondition:f[e].postcondition,priority:f[e].priority,listStep:[]});for(let t in f[e].listStep)m[e].listStep.push({status:"Untest",note:"",_id:f[e].listStep[t]._id,stepDefine:f[e].listStep[t].stepDefine,expectResult:f[e].listStep[t].expectResult,type:f[e].listStep[t].type})}if(""!==e.assigntester&&void 0!==e.assigntester){const p=i.members.find((t=>t.username===e.assigntester)),f=new c.TestExecutionSchema(Object.assign(Object.assign({},e),{is_active:e.is_active,is_public:e.is_public,description:e.description,testexecutionname:e.testexecutionname,testplan:n.testplan,tester:p.user,build:n.build,listtestcases:n.listtestcases,exectestcases:m})),x=yield f.save();for(let e of m)yield u.TestCaseSchema.findByIdAndUpdate(e,{$push:{testexecution:x._id}},{new:!0,useFindAndModify:!1});function y(e){return s(this,void 0,void 0,(function*(){yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$push:{testexecution:x._id}},{new:!0,useFindAndModify:!1})}))}yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testexecution:x._id}},{new:!0,useFindAndModify:!1}),yield a.TestPlanSchema.findOneAndUpdate({_id:n.testplan},{$push:{testexecution:x._id}},{new:!0,useFindAndModify:!1}),yield l.BuildSchema.findOneAndUpdate({_id:n.build},{$push:{testexecution:x._id}},{new:!0,useFindAndModify:!1}),""!==e.assigntester&&void 0!==e.assigntester&&(yield d.UserSchema.findOneAndUpdate({username:e.assigntester},{$push:{testexecution:x._id}},{new:!0,useFindAndModify:!1})),e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{y(e)}));for(let e of m){const t=yield u.TestCaseSchema.findById(e,"total_assigned").exec();yield u.TestCaseSchema.findOneAndUpdate({_id:e},{$set:{is_assigned:!0,total_assigned:t.total_assigned+1}},{new:!0}).exec()}let v={id:"sss"};function _(e){return s(this,void 0,void 0,(function*(){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:x._id},{$push:{listprojectrequirement:e.id}},{new:!0,useFindAndModify:!1}),!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e.id},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))}e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{v.id=e,_(v)}));const w={description:`you has already been assigned for test execution ${x.testexecutionname} in project ${i.projectname}`,is_read:!1,url:`https://testcontrols.herokuapp.com/projects/${t}/test-execution/${x._id}`,user:p.user};return yield this.notificationService.createNotification(w,t),x}{const i=new c.TestExecutionSchema(Object.assign(Object.assign({},e),{is_active:e.is_active,is_public:e.is_public,description:e.description,testexecutionname:e.testexecutionname,testplan:n.testplan,build:n.build,listtestcases:n.listtestcases,exectestcases:m})),d=yield i.save();for(let e of m)yield u.TestCaseSchema.findByIdAndUpdate(e,{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1});function y(e){return s(this,void 0,void 0,(function*(){yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e},{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1})}))}yield r.ProjectSchema.findByIdAndUpdate(t,{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1}),yield a.TestPlanSchema.findOneAndUpdate({_id:n.testplan},{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1}),yield l.BuildSchema.findOneAndUpdate({_id:n.build},{$push:{testexecution:d._id}},{new:!0,useFindAndModify:!1}),e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{y(e)}));for(let e of m){const t=yield u.TestCaseSchema.findById(e,"total_assigned").exec();yield u.TestCaseSchema.findOneAndUpdate({_id:e},{$set:{is_assigned:!0,total_assigned:t.total_assigned+1}},{new:!0}).exec()}let p={id:"sss"};function _(e){return s(this,void 0,void 0,(function*(){if(yield c.TestExecutionSchema.findOneAndUpdate({_id:d._id},{$push:{listprojectrequirement:e.id}},{new:!0,useFindAndModify:!1}),!(yield h.ProjectRequirementSchema.findOneAndUpdate({_id:e.id},{$set:{status:!1,updated_date:Date.now()}},{new:!0}).exec()))throw new o.HttpException(400,"Update updateProjectRequirement is not success")}))}return e.listrequirement.length>0&&void 0!==e.listrequirement&&e.listrequirement.forEach((e=>{p.id=e,_(p)})),d}}))}deleteTestExecutionFromProject(e,t){return s(this,void 0,void 0,(function*(){if(!(yield r.ProjectSchema.findById(e).exec()))throw new o.HttpException(400,"Project id is not exist");const i=yield c.TestExecutionSchema.findById(t).exec();if(!i)throw new o.HttpException(400,"Testexecution id is not exist");const s=yield a.TestPlanSchema.findById(i.testplan).exec();s&&(s.testexecution=s.testexecution.filter((({_id:e})=>(null==e?void 0:e.toString())!==(null==t?void 0:t.toString()))),yield s.save());const n=yield l.BuildSchema.findById(i.build).exec();n&&(n.testexecution=n.testexecution.filter((({_id:e})=>(null==e?void 0:e.toString())!==(null==t?void 0:t.toString()))),yield n.save());for(let e of i.listprojectrequirement)if(null!=e&&null!=e&&e){const i=yield h.ProjectRequirementSchema.findById(e.toString()).exec();i&&(i.testexecution=i.testexecution.filter((({_id:e})=>(null==e?void 0:e.toString())!==t)),yield i.save(),yield this.checkProjectRequirementIsComplete(null==e?void 0:e.toString()))}if(yield this.removeTestcaseFromExecution(t),!(yield c.TestExecutionSchema.findOneAndDelete({_id:t}).exec()))throw new o.HttpException(400,"Delete Test Execution is not success");return!0}))}removeTestcaseFromExecution(e){return s(this,void 0,void 0,(function*(){const t=yield c.TestExecutionSchema.findById(e).exec();if(!t)return!1;for(let i of t.listtestcases){const t=yield u.TestCaseSchema.findById(i.toString()).exec();t&&(t.testexecution=t.testexecution.filter((({_id:t})=>(null==t?void 0:t.toString())!=e)),yield t.save(),t.testexecution.length>0?yield u.TestCaseSchema.findOneAndUpdate({_id:i.toString()},{$set:{is_assigned:!0}},{new:!0}).exec():0==t.total_assigned?yield u.TestCaseSchema.findOneAndUpdate({_id:i.toString()},{$set:{is_assigned:!1}},{new:!0}).exec():yield u.TestCaseSchema.findOneAndUpdate({_id:i},{$set:{is_assigned:!1}},{new:!0}).exec())}}))}removeProjectRequirementFromExecution(e){return s(this,void 0,void 0,(function*(){const t=yield c.TestExecutionSchema.findById(e).exec();if(!t)return!1;for(let i of t.listprojectrequirement){const t=yield h.ProjectRequirementSchema.findById(i).exec();t&&(t.testexecution=t.testexecution.filter((({_id:t})=>t.toString()!=e)),yield t.save(),yield this.checkProjectRequirementIsComplete(i.toString()))}}))}removeExecutionFromProjectRequirement(e){return s(this,void 0,void 0,(function*(){const t=yield c.TestExecutionSchema.findById(e).exec();if(!t)return!1;for(let i of t.listprojectrequirement){const t=yield h.ProjectRequirementSchema.findById(i.toString()).exec();t&&(t.testexecution=t.testexecution.filter((({_id:t})=>t.toString()!==e)),yield t.save(),yield this.checkProjectRequirementIsComplete(i.toString()))}}))}}},7983:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.testplanname=e,this.description=t,this.isActive=i,this.isPublic=s}}s([n.IsNotEmpty()],o.prototype,"testplanname",void 0),s([n.IsNotEmpty()],o.prototype,"description",void 0),s([n.IsNotEmpty()],o.prototype,"isActive",void 0),s([n.IsNotEmpty()],o.prototype,"isPublic",void 0),t.default=o},5937:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TestPlanRoute=t.TestPlanSchema=void 0;const n=s(i(1347));t.TestPlanSchema=n.default;const o=s(i(6171));t.TestPlanRoute=o.default},6859:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(1111));t.default=class{constructor(){this.testplanService=new o.default,this.CreateTestPlanAndAddProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.body,n=yield this.testplanService.createTestPlanAndAddProject(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.GetAllTestPlanOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testplanService.getAllTestPlanOfProject(e.params.project_id);let r=[{is_active:{type:String},is_public:{type:String},_id:{type:String},testplanname:{type:String},description:{type:String},created_date:{type:String}}];r.pop();for(let e in i){var s=i[e].created_date.getDate();s<10&&(s="0"+s);var n=i[e].created_date.getMonth()+1;n<10&&(n="0"+n);var o=i[e].created_date.getFullYear();console.log("day: "+s),r.push({is_active:i[e].is_active,is_public:i[e].is_public,_id:i[e]._id,testplanname:i[e].testplanname,created_date:s+"-"+n+"-"+o,description:i[e].description})}t.status(200).json({status:200,success:!0,result:r,errMsg:""})}catch(e){i(e)}})),this.GetAllTestPlanOfProjectActive=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testplanService.getAllTestPlanOfProjectActive(e.params.project_id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.GetAllBuildOfTestplan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testplanService.getAllBuildOfTestplan(e.params.project_id,e.body.testplanname);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.SearchTestPlanOfProject=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.testplanService.searchTestPlanOfProject(e.params.project_id,e.body.keyword);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.UpdateTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=e.params.testplan_id,n=e.params.project_id,o=yield this.testplanService.updateTestPlan(i,s,n);t.status(200).json({status:200,success:!0,result:o,errMsg:""})}catch(e){i(e)}})),this.RemoveAndDeleteTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_id,n=yield this.testplanService.removeAndDeleteTestPlan(i,s);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.DisableTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_id,n=yield this.testplanService.disableTestPlan(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}})),this.DuplicateTestPlan=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.params.project_id,s=e.params.testplan_id,n=yield this.testplanService.duplicateTestPlan(s,i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){i(e)}}))}}},1347:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({testplan_id:{type:String},testplanname:{type:String},description:{type:String},is_active:{type:Boolean,default:!0},is_public:{type:Boolean,default:!1},is_disable:{type:Boolean,default:!0},project:{type:n.default.Schema.Types.ObjectId,ref:"project"},milestone:[{type:n.default.Schema.Types.ObjectId,ref:"milestone"}],testsuite:[{type:n.default.Schema.Types.ObjectId,ref:"testsuite"}],build:[{type:n.default.Schema.Types.ObjectId,ref:"build"}],testexecution:[{type:n.default.Schema.Types.ObjectId,ref:"testexecution"}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now},created_user:{type:n.default.Schema.Types.ObjectId,ref:"user"},updated_user:{type:n.default.Schema.Types.ObjectId,ref:"user"}});t.default=n.default.model("testplan",o)},6171:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=i(9204),o=i(2127),r=s(i(7983)),a=s(i(6859));t.default=class{constructor(){this.path="",this.router=o.Router(),this.testplanController=new a.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path+"/:project_id/createtestplan",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default),this.testplanController.CreateTestPlanAndAddProject),this.router.delete(this.path+"/:project_id/:testplan_id/api/deletetestplan",n.authMiddleware,n.notAllowTesterMiddleware,this.testplanController.RemoveAndDeleteTestPlan),this.router.put(this.path+"/:project_id/:testplan_id/api/updatetestplan",n.authMiddleware,n.notAllowTesterMiddleware,n.validationMiddleware(r.default),this.testplanController.UpdateTestPlan),this.router.get(this.path+"/:project_id/getalltestplanbyid",n.authMiddleware,this.testplanController.GetAllTestPlanOfProject),this.router.get(this.path+"/:project_id/getalltestplanactive",n.authMiddleware,this.testplanController.GetAllTestPlanOfProjectActive),this.router.post(this.path+"/:project_id/api/searchtestplan",n.authMiddleware,this.testplanController.SearchTestPlanOfProject),this.router.post(this.path+"/:project_id/api/getallbuildoftestplan",n.authMiddleware,this.testplanController.GetAllBuildOfTestplan),this.router.get(this.path+"/:project_id/:testplan_id/api/duplicatetestplan",this.testplanController.DuplicateTestPlan)}}},1111:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(5729),r=i(6968),a=n(i(9508)),c=i(9435),d=i(5937);t.default=class{constructor(){this.testplanSchema=d.TestPlanSchema,this.buildSrvices=new a.default}createTestPlanAndAddProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(t,"testplan").populate({path:"testplan",select:"testplanname"}).exec();if(!i)throw new o.HttpException(400,"Project is not exist");if(i.testplan&&i.testplan.some((t=>t.testplanname===e.testplanname)))throw new o.HttpException(400,"Name testplan existed in project");const s=new d.TestPlanSchema(Object.assign(Object.assign({},e),{is_active:e.isActive,is_public:e.isPublic,description:e.description,testplanname:e.testplanname,project:t})),n=yield s.save();return yield c.ProjectSchema.findByIdAndUpdate(t,{$push:{testplan:n._id}},{new:!0,useFindAndModify:!1}),yield i.save(),i}))}getAllTestPlanOfProject(e){return s(this,void 0,void 0,(function*(){const t=yield c.ProjectSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");const i=t.testplan.map((e=>e._id));return d.TestPlanSchema.find({_id:i,is_disable:!0},"testplanname testplan_id description is_active is_public created_date").exec()}))}getAllBuildOfTestplan(e,t){return s(this,void 0,void 0,(function*(){if(!(yield c.ProjectSchema.findById(e).exec()))throw new o.HttpException(400,"Project id is not exist");const i=yield d.TestPlanSchema.findOne({testplanname:t,project:e}).exec();if(!i)throw new o.HttpException(400,"Testplan id is not exist");const s=i.build.map((e=>e._id)),n=r.BuildSchema.find({_id:s,is_active:!0},"buildname").exec();if(!n)throw new o.HttpException(400,"ListBuild empty or is not exist");return n}))}getAllTestPlanOfProjectActive(e){return s(this,void 0,void 0,(function*(){const t=yield c.ProjectSchema.findById(e).exec();if(!t)throw new o.HttpException(400,"Project id is not exist");const i=t.testplan.map((e=>e._id));return d.TestPlanSchema.find({_id:i,is_active:!0,is_disable:!0},"testplanname").exec()}))}searchTestPlanOfProject(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=i.testplan.map((e=>e._id));return d.TestPlanSchema.find({_id:s,testplanname:new RegExp(t,"i"),is_disable:!0},"testplanname testplan_id description is_active is_public created_date").exec()}))}updateTestPlan(e,t,i){return s(this,void 0,void 0,(function*(){const s=yield d.TestPlanSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"TestPlan id is not exist");if(s.testplanname!==e.testplanname){const t=yield c.ProjectSchema.findById(i,"testplan").populate({path:"testplan",select:"testplanname"}).exec();if(!t)throw new o.HttpException(400,"Project is not exist");if(t.testplan&&t.testplan.some((t=>t.testplanname===e.testplanname)))throw new o.HttpException(400,"Name testplan existed in project")}const n=yield d.TestPlanSchema.findOneAndUpdate({_id:t},{$set:{testplanname:e.testplanname,description:e.description,is_active:e.isActive,is_public:e.isPublic,updated_date:Date.now()}},{new:!0}).exec();if(!n)throw new o.HttpException(400,"Update Testplan is not success");return n}))}removeAndDeleteTestPlan(e,t){return s(this,void 0,void 0,(function*(){const i=yield c.ProjectSchema.findById(e).exec();if(!i)throw new o.HttpException(400,"Project id is not exist");const s=yield d.TestPlanSchema.findById(t).exec();if(!s)throw new o.HttpException(400,"testplan id is not exist");if(void 0!==s.build&&null!==s.build)for(let t of s.build)yield this.buildSrvices.removeAndDeleteBuildFromProject(e,t.toString());if(i.testplan&&-1==i.testplan.findIndex((e=>e._id.toString()===t)))throw new o.HttpException(400,"You has not yet been testplan of this project");if(i.testplan=i.testplan.filter((({_id:e})=>e.toString()!==t)),yield i.save(),!(yield d.TestPlanSchema.findOneAndDelete({_id:t}).exec()))throw new o.HttpException(400,"Delete Testplan is not success");return i}))}disableTestPlan(e,t){return s(this,void 0,void 0,(function*(){if(!(yield d.TestPlanSchema.findById(e).exec()))throw new o.HttpException(400,"TestPlan id is not exist");if(!(yield c.ProjectSchema.findById(t).exec()))throw new o.HttpException(400,"Project is not exist");const i=yield d.TestPlanSchema.findOneAndUpdate({_id:e},{$set:{is_disable:!1}},{new:!0}).exec();if(!i)throw new o.HttpException(400,"Disable Testplan is not success");return i}))}duplicateTestPlan(e,t){return s(this,void 0,void 0,(function*(){return d.TestPlanSchema.find({_id:e},"build").populate({path:"build",select:["build_id","buildname","description","is_active","is_open","releasedate","testplan"],match:{is_disable:!0}}).exec()}))}}},4237:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i,s){this.fullname=e,this.username=t,this.email=i,this.password=s}}s([n.IsNotEmpty()],o.prototype,"fullname",void 0),s([n.IsNotEmpty()],o.prototype,"username",void 0),s([n.IsNotEmpty(),n.IsEmail()],o.prototype,"email",void 0),s([n.IsNotEmpty(),n.MinLength(6)],o.prototype,"password",void 0),t.default=o},5692:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t){this.Password=e,this.ConfirmPassword=t}}s([n.IsNotEmpty()],o.prototype,"Password",void 0),s([n.IsNotEmpty()],o.prototype,"ConfirmPassword",void 0),t.default=o},5782:function(e,t,i){var s=this&&this.__decorate||function(e,t,i,s){var n,o=arguments.length,r=o<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,i,s);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,i,r):n(t,i))||r);return o>3&&r&&Object.defineProperty(t,i,r),r};Object.defineProperty(t,"__esModule",{value:!0});const n=i(516);class o{constructor(e,t,i){this.fullname=e,this.phonenumber=t,this.introduction=i}}s([n.IsNotEmpty()],o.prototype,"fullname",void 0),t.default=o},2333:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserSchema=t.UsersRoute=void 0;const n=s(i(8499));t.UserSchema=n.default;const o=s(i(9885));t.UsersRoute=o.default},9885:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(4237)),o=i(2127),r=s(i(5887)),a=i(9204),c=s(i(1580)),d=s(i(5692)),u=s(i(5782));t.default=class{constructor(){this.path="/users",this.router=o.Router(),this.usersController=new r.default,this.initializeRoutes()}initializeRoutes(){this.router.post(this.path,c.default(n.default),this.usersController.register),this.router.put(this.path+"/:id",c.default(n.default),this.usersController.updateUser),this.router.put(this.path+"/api/updateprofile",a.authMiddleware,c.default(u.default),this.usersController.updateProfile),this.router.put(this.path+"/api/updatepassword",a.authMiddleware,c.default(d.default),this.usersController.updatePasswordInProfile),this.router.get(this.path+"/:id",this.usersController.getUserById),this.router.get(this.path+"/api/getcurrentuser",a.authMiddleware,this.usersController.GetCurrentUser),this.router.get(this.path,a.authMiddleware,this.usersController.getAll),this.router.get(this.path+"/paging/:page",this.usersController.getAllPaging),this.router.delete(this.path+"/:id",a.authMiddleware,this.usersController.deleteUser),this.router.post(this.path+"/forgotpassword",this.usersController.forgotPassword),this.router.put(this.path+"/api/resetpassword",a.resetMiddleware,this.usersController.updatePassword),this.router.put(this.path+"/api/uploadavatar",a.authMiddleware,this.usersController.UploadAvatar),this.router.delete(this.path,a.authMiddleware,this.usersController.DeleteUsers)}}},5887:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(i(9390));t.default=class{constructor(){this.userService=new o.default,this.register=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.userService.createUser(i);e.app.get("socketio").emit("user_created",`${i.email} has been registered`),t.json({status:201,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.getUserById=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.userService.getUserById(e.params.id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.GetCurrentUser=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.userService.getCurrentUser(e.user.id);t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){i(e)}})),this.getAll=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const e=yield this.userService.getAll();t.status(200).json({status:200,success:!0,result:e,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.getAllPaging=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=Number(e.params.page),s=e.query.keyword||"",n=yield this.userService.getAllPaging(s.toString(),i);t.status(200).json({status:200,success:!0,result:n,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.updateUser=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.userService.updateUser(e.params.id,i);e.app.get("socketio").emit("user_updated",e.params.id),t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.updateProfile=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.userService.updateProfile(e.user.id,i);t.status(200).json({status:200,success:!0,result:s,errMsg:""})}catch(e){i(e)}})),this.updatePasswordInProfile=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.userService.updatePasswordInProfile(e.user.id,i),t.status(200).json({status:200,success:!0,result:"reset password successfully",errMsg:""})}catch(e){i(e)}})),this.deleteUser=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=yield this.userService.deleteUser(e.params.id);e.app.get("socketio").emit("user_deleted",`User ${i.email} has been deleted.`),t.status(200).json({status:200,success:!0,result:i,errMsg:""})}catch(e){t.status(e.status).json({status:e.status,success:!1,result:"",errMsg:e.message}),i(e)}})),this.forgotPassword=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const{email:i}=e.body;yield this.userService.forgotPassword(i),t.status(200).json({status:200,success:!0,result:"your email has been sent successfully",errMsg:""})}catch(e){i(e)}})),this.updatePassword=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.userService.newPassword(e.user.id,i),t.status(200).json({status:200,success:!0,result:"reset password successfully",errMsg:""})}catch(e){i(e)}})),this.DeleteUsers=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body,s=yield this.userService.deleteUsers(i);t.status(200).json(s)}catch(e){i(e)}})),this.UploadAvatar=(e,t,i)=>s(this,void 0,void 0,(function*(){try{const i=e.body;yield this.userService.uploadAvatar(i,e.user.id),t.status(200).json({status:200,success:!0,result:"success",errMsg:""})}catch(e){i(e)}}))}}},8499:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(i(5619)),o=new n.default.Schema({fullname:{type:String,required:!0},username:{type:String,required:!0},password:{type:String,required:!0},email:{type:String,unique:!0,index:!0,required:!0},introduction:{type:String},phonenumber:{type:String},avatar:{type:String},myproject:[{type:n.default.Schema.Types.ObjectId,ref:"project"}],inproject:[{_id:{type:n.default.Schema.Types.ObjectId,ref:"project"},projectname:{type:String},role:{type:String},status:{type:String},description:{type:String}}],testexecution:[{type:n.default.Schema.Types.ObjectId,ref:"testexecution"}],mantis:[{_id:{type:n.default.Schema.Types.ObjectId,ref:"mantis"},mantisname:{type:String},role:{type:String},status:{type:String}}],created_date:{type:Date,default:Date.now},updated_date:{type:Date,default:Date.now}});t.default=n.default.model("user",o)},9390:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(7093),r=i(1616),a=i(5729),c=n(i(8499)),d=n(i(2773)),u=n(i(7967)),l=i(9905),p=n(i(9722)),h=(i(2376),i(4353),i(5511));h.setApiKey(process.env.SENDGRID_API_KEY),i(8123);const f="hung08596@gmail.com";t.default=class{constructor(){this.userSchema=c.default}createUser(e){return s(this,void 0,void 0,(function*(){if(l.isEmptyObject(e))throw new a.HttpException(400,"Register Model is empty");if(yield this.userSchema.findOne({username:e.username}).exec())throw new a.HttpException(409,`Username ${e.username} already exist.`);if(yield this.userSchema.findOne({email:e.email}).exec())throw new a.HttpException(409,`Your email ${e.email} already exist.`);const t=yield d.default.genSalt(10),i=yield d.default.hash(e.password,t),s=yield this.userSchema.create(Object.assign(Object.assign({},e),{password:i,created_date:Date.now(),updated_date:Date.now()})),n=yield this.generateRefreshToken(s._id);yield n.save();const r={to:s.email,from:f,subject:"Welcome to TestControl",text:"Welcome to TestControl",html:`\n      <head>\n      <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />\n      \x3c!-- <title>Welcome email</title> --\x3e\n      \x3c!-- <meta name="description" content="Welcome email template."> --\x3e\n      <style type="text/css">\n          a:hover {text-decoration: underline !important;}\n      </style>\n  </head>\n  \n  <body>\n      \x3c!--100% body table--\x3e\n      <table cellspacing="0" border="0" cellpadding="0" width="100%">\n          <tr>\n              <td>\n                  <table style="max-width:670px;  margin:0 auto;" width="100%" border="0"\n                      align="center" cellpadding="0" cellspacing="0">\n                     \n                      <tr>\n                          <td>\n                              <table width="95%" border="0" align="center" cellpadding="0" cellspacing="0"\n                                  style="max-width:670px;">\n                                  <tr>\n                                      <td>                                        \n                                          <h1 align="center">Welcome!</h1>\n                                          \n                                          <h2>Dear ${s.fullname},</h2>\n  \n                                          <p>\n                                              Thank you for creating an account on Test Control - we are excited you're here!\n                                          </p>\n                                      </td>\n                                  </tr>\n                                  <tr>\n                                      <td style="height:30px">\n                                          <p>\n                                               Please contact us if you need any help about Test Control account, functionalities.                                          \n                                          </p>\n                                      </td>\n                                  </tr>\n                                  \n                                  <tr>\n                                      <td style="height:30px;">\n                                          <p>\n                                          Sincerely,\n                                          </p>\n                                          <p>\n                                              <strong>Test Control Team</strong>\n                                          </p>\n                                      </td>\n                                  </tr>\n                              </table>\n                          </td>\n                          <tr>\n                              <td style="text-align:center;">\n                                  <p>&copy; <strong>Test Control, 2021</strong></p>\n                              </td>\n                          </tr>\n                  </table>\n              </td>\n          </tr>\n      </table>\n      \x3c!--/100% body table--\x3e`};return h.send(r),o.generateJwtToken(s._id,n.token)}))}updateUser(e,t){return s(this,void 0,void 0,(function*(){if(l.isEmptyObject(t))throw new a.HttpException(400,"Model is empty");const i=yield this.userSchema.findById(e).exec();if(!i)throw new a.HttpException(400,"User id is not exist");let s,n=i.avatar;if(i.email===t.email)throw new a.HttpException(400,"You must using the difference email");if(0!==(yield this.userSchema.find({$and:[{email:{$eq:t.email}},{_id:{$ne:e}}]}).exec()).length)throw new a.HttpException(400,"Your email has been used by another user");if(n=u.default.url(t.email,{size:"200",rating:"g",default:"mm"}),t.password){const i=yield d.default.genSalt(10),o=yield d.default.hash(t.password,i);s=yield this.userSchema.findByIdAndUpdate(e,Object.assign(Object.assign({},t),{avatar:n,password:o}),{new:!0}).exec()}else s=yield this.userSchema.findByIdAndUpdate(e,Object.assign(Object.assign({},t),{avatar:n}),{new:!0}).exec();if(!s)throw new a.HttpException(409,"You are not an user");return s}))}updateProfile(e,t){return s(this,void 0,void 0,(function*(){if(l.isEmptyObject(t))throw new a.HttpException(400,"Model is empty");if(!(yield this.userSchema.findById(e).exec()))throw new a.HttpException(400,"User id is not exist");const i=yield this.userSchema.findByIdAndUpdate(e,Object.assign(Object.assign({},t),{fullname:t.fullname,phonenumber:t.phonenumber,introduction:t.introduction}),{new:!0}).exec();if(!i)throw new a.HttpException(409,"You are not an user");return i}))}updatePasswordInProfile(e,t){return s(this,void 0,void 0,(function*(){const i=yield this.userSchema.findById(e).exec();if(!i)throw new a.HttpException(400,"User id is not exist");if(t.Password!==t.ConfirmPassword)throw new a.HttpException(400,"Password and ConfirmPassword does not match");let s;if(i.password){const i=yield d.default.genSalt(10),n=yield d.default.hash(t.ConfirmPassword,i);s=yield this.userSchema.findByIdAndUpdate(e,{password:n},{new:!0}).exec()}if(!s)throw new a.HttpException(409,"You are not an user");return s}))}getUserById(e){return s(this,void 0,void 0,(function*(){const t=yield this.userSchema.findById(e).exec();if(!t)throw new a.HttpException(404,"User is not exists");return t}))}getCurrentUser(e){return s(this,void 0,void 0,(function*(){const t=yield this.userSchema.findById(e).select("fullname email introduction phonenumber avatar").exec();if(!t)throw new a.HttpException(404,"User is not exists");return t}))}getAll(){return s(this,void 0,void 0,(function*(){return yield this.userSchema.find({},"username email").exec()}))}getAllPaging(e,t){return s(this,void 0,void 0,(function*(){const i=Number(process.env.PAGE_SIZE||10);let s={};e&&(s={$or:[{email:e},{first_name:e},{last_name:e}]});const n=yield this.userSchema.find(s).skip((t-1)*i).limit(i).exec();return{total:yield this.userSchema.find(s).countDocuments().exec(),page:t,pageSize:i,items:n}}))}deleteUser(e){return s(this,void 0,void 0,(function*(){const t=yield this.userSchema.findByIdAndDelete(e).exec();if(!t)throw new a.HttpException(409,"Your id is invalid");return t}))}deleteUsers(e){return s(this,void 0,void 0,(function*(){const t=yield this.userSchema.deleteMany({_id:[...e]}).exec();if(!t.ok)throw new a.HttpException(409,"Your id is invalid");return t.deletedCount}))}generateRefreshToken(e){return s(this,void 0,void 0,(function*(){return new r.RefreshTokenSchema({user:e,token:o.randomTokenString(),expires:new Date(Date.now()+6048e5)})}))}forgotPassword(e){return s(this,void 0,void 0,(function*(){const t=yield this.userSchema.findOne({email:e}).exec();if(!t)throw new a.HttpException(409,"Your email is invalid");const i=process.env.JWT_TOKEN_FORGOTPASSWORD,s=p.default.sign({_id:t._id},i,{expiresIn:"10m"}),n={to:e,from:f,subject:"Resset Password",text:"Resset Password",html:`\n      <title>Reset Password Email Template</title>\n    <meta name="description" content="Reset Password Email Template.">\n    \x3c!-- <style type="text/css">\n        a:hover {text-decoration: underline !important;}\n    </style> --\x3e\n</head>\n\n<body>\n    \x3c!--100% body table--\x3e\n    <table cellspacing="0" border="0" cellpadding="0" width="100%">\n        <tr>\n            <td>\n                <table style="max-width:670px;  margin:0 auto;" width="100%" border="0"\n                    align="center" cellpadding="0" cellspacing="0">\n                   \n                    <tr>\n                        <td>\n                            <table width="95%" border="0" align="center" cellpadding="0" cellspacing="0"\n                                style="max-width:670px;">\n                                \n                                <tr>\n                                    <td>\n                                        <h1>You have\n                                            requested to reset your password</h1>\n                                        \n                                        <p>\n                                            We cannot simply send you your old password. A unique link to reset your\n                                            password has been generated for you. To reset your password, click the\n                                            following link and follow the instructions.\n                                        </p>\n                                        <div style="text-align: center">\n                                        <a href=https://testcontrols.herokuapp.com/auth/reset-password/${s}\n                                            style="background:#20e277;text-decoration:none !important; font-weight:500; margin-top:15px; color:#fff;text-transform:uppercase; font-size:14px;padding:10px 24px;display:inline-block;border-radius:50px;">Reset\n                                            Password</a>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style="height:30px">\n                                        <p>\n                                            The above link will only be valid for the next <strong>10 minutes</strong>.                                            \n                                        </p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style="height:30px">\n                                        <p>\n                                            If you did not request a password reset, no further action is required.\n                                        </p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style="height:30px;">\n                                        <p>\n                                        Regards,\n                                        </p>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td style="height:30px;">\n                                        <p>\n                                        Test Control.\n                                        </p>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <tr>\n                            <td style="text-align:center;">\n                                <p>&copy; <strong>Test Control, 2021</strong></p>\n                            </td>\n                        </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n    \x3c!--/100% body table--\x3e\n             `};return h.send(n),"Send mail successfully"}))}newPassword(e,t){return s(this,void 0,void 0,(function*(){const i=yield this.userSchema.findById(e).exec();if(!i)throw new a.HttpException(400,"User id is not exist");if(t.newpassword!==t.confirmnewpassword)throw new a.HttpException(400,"New password and confirm new password does not match");let s;if(i.password){const i=yield d.default.genSalt(10),n=yield d.default.hash(t.newpassword,i);s=yield this.userSchema.findByIdAndUpdate(e,{password:n},{new:!0}).exec()}if(!s)throw new a.HttpException(409,"You are not an user");return s}))}uploadAvatar(e,t){return s(this,void 0,void 0,(function*(){if(!(yield c.default.findOneAndUpdate({_id:t},{$set:{avatar:e.avatar,updated_date:Date.now()}},{new:!0}).exec()))throw new a.HttpException(400,"Upload is not success")}))}}},7728:function(e,t,i){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),i(1201);const n=s(i(6752)),o=s(i(2679)),r=i(1570),a=s(i(4731)),c=s(i(9885)),d=i(9905),u=i(9435),l=i(4588),p=i(5937),h=i(4206),f=i(8620),m=i(6968),y=s(i(9015)),_=i(9664),x=i(484),v=i(9455);d.validateEnv();const w=[new r.IndexRoute,new c.default,new o.default,new a.default,new u.ProjectRoute,new l.ProjectRequirementRoute,new p.TestPlanRoute,new h.MilestoneRoute,new f.TestSuiteRoute,new y.default,new m.BuildRoute,new _.TestExecutionRoute,new x.NotificationRoute,new v.MantisRoute];new n.default(w).listen()},5511:e=>{e.exports=require("@sendgrid/mail")},2376:e=>{e.exports=require("axios")},2773:e=>{e.exports=require("bcryptjs")},2473:e=>{e.exports=require("body-parser")},1576:e=>{e.exports=require("class-transformer")},516:e=>{e.exports=require("class-validator")},479:e=>{e.exports=require("cors")},6417:e=>{e.exports=require("crypto")},1201:e=>{e.exports=require("dotenv/config")},8393:e=>{e.exports=require("elasticsearch")},9509:e=>{e.exports=require("envalid")},2127:e=>{e.exports=require("express")},4353:e=>{e.exports=require("form-data")},7967:e=>{e.exports=require("gravatar")},6725:e=>{e.exports=require("helmet")},9910:e=>{e.exports=require("hpp")},8605:e=>{e.exports=require("http")},9722:e=>{e.exports=require("jsonwebtoken")},5619:e=>{e.exports=require("mongoose")},8150:e=>{e.exports=require("morgan")},8123:e=>{e.exports=require("nodemailer")},2395:e=>{e.exports=require("socket.io")},944:e=>{e.exports=require("winston")}},t={};!function i(s){if(t[s])return t[s].exports;var n=t[s]={exports:{}};return e[s].call(n.exports,n,n.exports,i),n.exports}(7728)})();